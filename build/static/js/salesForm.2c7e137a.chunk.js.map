{"version":3,"file":"static/js/salesForm.2c7e137a.chunk.js","mappings":"2aAAO,IAAMA,EAAY,CACrB,CAAEC,GAAI,OAAQC,KAAM,QACpB,CAAED,GAAI,OAAQC,KAAM,SAGXC,EAAc,CACvB,CAAEF,GAAI,KAAMC,KAAM,MAClB,CAAED,GAAI,KAAMC,KAAM,MAClB,CAAED,GAAI,KAAMC,KAAM,MAClB,CAAED,GAAI,KAAMC,KAAM,MAClB,CAAED,GAAI,MAAOC,KAAM,OACnB,CAAED,GAAI,MAAOC,KAAM,OACnB,CAAED,GAAI,KAAMC,KAAM,MAClB,CAAED,GAAI,KAAMC,KAAM,OAGTE,EAAS,CAClB,CAAEH,GAAI,QAASC,KAAM,SACrB,CAAED,GAAI,WAAYC,KAAM,YACxB,CAAED,GAAI,YAAaC,KAAM,aACzB,CAAED,GAAI,SAAUC,KAAM,UACtB,CAAED,GAAI,SAAUC,KAAM,WAGbG,EAAW,CACpB,CAAEJ,GAAI,MAAOC,KAAM,OACnB,CAAED,GAAI,MAAOC,KAAM,OACnB,CAAED,GAAI,MAAOC,KAAM,OACnB,CAAED,GAAI,MAAOC,KAAM,OACnB,CAAED,GAAI,MAAOC,KAAM,OACnB,CAAED,GAAI,MAAOC,KAAM,OACnB,CAAED,GAAI,MAAOC,KAAM,QAGVI,EAAmB,CAC5B,CAAEL,GAAI,OAAQC,KAAM,QACpB,CAAED,GAAI,MAAOC,KAAM,OACnB,CAAED,GAAI,OAAQC,KAAM,iBAUXK,EAAoB,CAC7B,CAAEN,GAAI,SAAUC,KAAM,WACtB,CAAED,GAAI,aAAcC,KAAM,cAC1B,CAAED,GAAI,cAAeC,KAAM,gBAGlBM,EAAkB,CAC3B,CAAEP,GAAI,MAAOC,KAAM,YACnB,CAAED,GAAI,SAAUC,KAAM,cAGbO,EAAW,CACpB,CAAER,GAAI,QAASC,KAAM,SACrB,CAAED,GAAI,UAAWC,KAAM,WACvB,CAAED,GAAI,SAAUC,KAAM,WAGbQ,EAAS,CAClB,CAAET,GAAI,OAAQC,KAAM,QACpB,CAAED,GAAI,SAAUC,KAAM,WAGbS,EAAoB,CAC7B,CAAEV,GAAI,aAAcC,KAAM,cAC1B,CAAED,GAAI,cAAeC,KAAM,eAC3B,CAAED,GAAI,YAAaC,KAAM,cAGhBU,EAAiB,CAC1B,CAAEX,GAAI,UAAWC,KAAM,WACvB,CAAED,GAAI,WAAYC,KAAM,YACxB,CAAED,GAAI,YAAaC,KAAM,aACzB,CAAED,GAAI,UAAWC,KAAM,WACvB,CAAED,GAAI,eAAgBC,KAAM,kBAGnBW,EAAoB,CAC7B,CAAEZ,GAAI,MAAOC,KAAM,OACnB,CAAED,GAAI,MAAOC,KAAM,OACnB,CAAED,GAAI,MAAOC,KAAM,OACnB,CAAED,GAAI,MAAOC,KAAM,QASVY,EAAW,CACpB,CAAEb,GAAI,SAAUC,KAAM,UACtB,CAAED,GAAI,QAASC,KAAM,SACrB,CAAED,GAAI,YAAaC,KAAM,aACzB,CAAED,GAAI,SAAUC,KAAM,UACtB,CAAED,GAAI,QAASC,KAAM,S,+KCqJzB,IA1OsB,SAAHa,GAAwE,IAAjEC,EAAOD,EAAPC,QAASC,EAAWF,EAAXE,YAAaC,EAAiBH,EAAjBG,kBAAiBC,EAAAJ,EAAEK,SAAAA,OAAQ,IAAAD,GAAQA,EAE/EE,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAA0CL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAlDE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAAgCT,EAAAA,EAAAA,UAAS,QAAOU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAEhDE,GAFeD,EAAA,GAAaA,EAAA,IAQxBE,EAAAA,EAAAA,IAAQ,CACRC,cAAelB,KANfmB,EAAOH,EAAPG,QACaC,EAAMJ,EAAnBK,UAAaD,OAEbE,GADQN,EAARO,SACKP,EAALM,OACAE,EAAYR,EAAZQ,cAKJC,EAAAA,EAAAA,YAAU,WACFzB,GACAsB,GAAKI,EAAAA,EAAAA,GAAC,CAAC,EACA1B,GAOf,GAAG,CAACA,KAEJyB,EAAAA,EAAAA,YAAU,WACF1B,GACAc,GAAiB,EAEzB,GAAG,CAACd,IAEJ,IAAM4B,EAAsB,SAAC1C,GACzB,OAAOmC,EAAOnC,KAAS2C,EAAAA,EAAAA,KAAA,SAAOC,UAAU,UAASC,SAAEV,EAAOnC,GAAM8C,SACpE,EAEMC,EAAoB,WACtBnB,GAAiB,EACrB,EAuBMoB,GACFC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACIF,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACC,MAAM,SAASC,KAAK,cAAcT,UAAU,gBAAgBU,QAASP,KAC7EJ,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACI,SAAUhC,EAAW6B,MAAM,OAAOC,KAAK,cAAcT,UAAU,gBACnEU,QACIf,GAAa,SAACiB,GAAC,OAtBP,SAACC,GAGrB,GAFAjC,GAAa,GACbuB,IACG/B,EAAmB,CAClB,IAAI0C,GAAOjB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJgB,GAAI,IACPE,OAAQ5C,EAAY4C,OACpBC,SAAU7C,EAAY6C,SACtBC,aAAc9C,EAAY8C,eAE9BC,QAAQC,IAAI,eAAgBhD,GAC5B+C,QAAQC,IAAI,eAAgBN,GAC5BK,QAAQC,IAAI,eAAgBL,GAC5B1C,EAAkB0C,EACtB,CACJ,CAOoCM,CAAgBR,EAAE,SAMtD,OACIb,EAAAA,EAAAA,KAACsB,EAAAA,EAAM,CAACC,QAASvC,EAAewC,MAAO,CAAEC,MAAO,SAAWC,OAAM,UAAaC,OAAK,EAAC1B,UAAU,UAAU2B,OAAQvB,EAAqBwB,OAAQzB,EAAkBF,UAC3JI,EAAAA,EAAAA,MAAA,OAAKL,UAAU,wBAAuBC,SAAA,EAgBlCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBAAwBC,UACvCF,EAAAA,EAAAA,KAAC8B,EAAAA,GAAU,CACPzE,KAAK,kBACLkC,QAASA,EAITwC,OAAQ,SAAAC,GAAA,IAAGC,EAAKD,EAALC,MAAOC,EAAUF,EAAVE,WAAU,OAC5B5B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAOmC,QAAQ,kBAAiBjC,SAAC,sBACjCF,EAAAA,EAAAA,KAACoC,EAAAA,EAAW,CAAC7D,UAAU,EAAM8D,QAASJ,EAAM5E,KAAMiF,MAAOL,EAAMK,MAAOC,SAAUN,EAAMO,IAClFC,cAAe,SAACC,GAAC,OAAKT,EAAMU,SAASD,EAAE,EACvCzC,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,YAAaV,EAAWW,UACnD9C,EAAoBkC,EAAM5E,QAC5B,OAGPiD,EAAAA,EAAAA,MAAA,OAAKL,UAAU,OAAMC,SAAA,EACjBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAsBC,UACrCF,EAAAA,EAAAA,KAAC8B,EAAAA,GAAU,CACPzE,KAAK,kBACLkC,QAASA,EAITwC,OAAQ,SAAAe,GAAA,IAAGb,EAAKa,EAALb,MAAOC,EAAUY,EAAVZ,WAAU,OAC5B5B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAOmC,QAASF,EAAM5E,KAAM4C,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,UAAWpD,EAAO8C,QAASpC,SAAC,gBAChFF,EAAAA,EAAAA,KAAC+C,EAAAA,EAAgB,CAACd,MAAOA,EAAOe,UAAWC,EAAAA,GACvCC,aAAa,UAAUC,WAAY,CAAC,YAAa,YAAa,WAC9DC,SAAU,SAACV,GAAOvB,QAAQC,IAAIsB,EAAG,EACjCzC,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,YAAaV,EAAWW,QAChDQ,QAAS,CACL,CAACpB,MAAO,sBAAuBP,OAAQ,YAAa4B,kBAAmB,uBACvE,CAACrB,MAAO,YAAaP,OAAQ,iBAAkB4B,kBAAmB,4BAClE,CAACrB,MAAO,UAAWP,OAAQ,eAAgB4B,kBAAmB,6BAErEvD,EAAoBkC,EAAM5E,QAC5B,OAGP2C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAsBC,UACrCF,EAAAA,EAAAA,KAAC8B,EAAAA,GAAU,CACPzE,KAAK,cACLkC,QAASA,EACTgE,MAAO,CACHC,SAAU,SAAClB,GAAK,OAAMA,EAAQ,GAAM,uBAAuB,GAE/DP,OAAQ,SAAA0B,GAAA,IAAGxB,EAAKwB,EAALxB,MAAOC,EAAUuB,EAAVvB,WAAU,OAC5B5B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAOmC,QAAQ,SAAQjC,SAAC,iBACxBF,EAAAA,EAAAA,KAACoC,EAAAA,EAAW,CAACC,QAASJ,EAAM5E,KAAMiF,MAAOL,EAAMK,MAAOC,SAAUN,EAAMO,IAClEC,cAAe,SAACC,GAAC,OAAKT,EAAMU,SAASD,EAAE,EACvCzC,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,YAAaV,EAAWW,UACnD9C,EAAoBkC,EAAM5E,QAC5B,UAIXiD,EAAAA,EAAAA,MAAA,OAAKL,UAAU,wBAAuBC,SAAA,EAClCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UACtCF,EAAAA,EAAAA,KAAC8B,EAAAA,GAAU,CACPzE,KAAK,YACLkC,QAASA,EACTwC,OAAQ,SAAA2B,GAAA,IAAGzB,EAAKyB,EAALzB,MAAOC,EAAUwB,EAAVxB,WAAU,OAC5B5B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAOmC,QAAQ,YAAWjC,SAAC,aAC3BF,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CAACtB,QAASJ,EAAM5E,KAAMiF,MAAOL,EAAMK,MAAOC,SAAUN,EAAMO,IAAMG,SAAU,SAACD,GAAC,OAAKT,EAAMU,SAASD,EAAEkB,OAAOtB,MAAM,EAAErC,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,YAAaV,EAAWW,UAC1K9C,EAAoBkC,EAAM5E,QAC5B,OAGP2C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UACtCF,EAAAA,EAAAA,KAAC8B,EAAAA,GAAU,CACPzE,KAAK,aACLkC,QAASA,EACTgE,MAAO,CACHC,SAAU,SAAClB,GAAK,OAAMA,EAAQ,GAAM,uBAAuB,GAE/DP,OAAQ,SAAA8B,GAAA,IAAG5B,EAAK4B,EAAL5B,MAAOC,EAAU2B,EAAV3B,WAAU,OAC5B5B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAOmC,QAAQ,SAAQjC,SAAC,gBACxBF,EAAAA,EAAAA,KAACoC,EAAAA,EAAW,CAACC,QAASJ,EAAM5E,KAAMiF,MAAOL,EAAMK,MAAOC,SAAUN,EAAMO,IAClEC,cAAe,SAACC,GAAC,OAAKT,EAAMU,SAASD,EAAE,EACvCzC,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,YAAaV,EAAWW,UACnD9C,EAAoBkC,EAAM5E,QAC5B,UAKX2C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBAAwBC,UACvCF,EAAAA,EAAAA,KAAC8B,EAAAA,GAAU,CACPzE,KAAK,cACLkC,QAASA,EACTgE,MAAO,CACHC,SAAU,SAAClB,GAAK,OAAMA,EAAQ,GAAM,uBAAuB,GAE/DP,OAAQ,SAAA+B,GAAA,IAAG7B,EAAK6B,EAAL7B,MAAOC,EAAU4B,EAAV5B,WAAU,OAC5B5B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAOmC,QAAQ,SAAQjC,SAAC,iBACxBF,EAAAA,EAAAA,KAACoC,EAAAA,EAAW,CAACC,QAASJ,EAAM5E,KAAMiF,MAAOL,EAAMK,MAAOC,SAAUN,EAAMO,IAClEC,cAAe,SAACC,GAAC,OAAKT,EAAMU,SAASD,EAAE,EACvCzC,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,YAAaV,EAAWW,UACnD9C,EAAoBkC,EAAM5E,QAC5B,OAGP2C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBAAwBC,UACvCF,EAAAA,EAAAA,KAAC8B,EAAAA,GAAU,CACPzE,KAAK,SACLkC,QAASA,EACTgE,MAAO,CACHC,SAAU,SAAClB,GAAK,OAAMA,EAAQ,GAAM,uBAAuB,GAE/DP,OAAQ,SAAAgC,GAAA,IAAG9B,EAAK8B,EAAL9B,MAAOC,EAAU6B,EAAV7B,WAAU,OAC5B5B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAOmC,QAAQ,SAAQjC,SAAC,iBACxBF,EAAAA,EAAAA,KAACoC,EAAAA,EAAW,CAAC7D,SAAUA,EAAU8D,QAASJ,EAAM5E,KAAMiF,MAAOL,EAAMK,MAAOC,SAAUN,EAAMO,IACtFC,cAAe,SAACC,GAAC,OAAKT,EAAMU,SAASD,EAAE,EACvCzC,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,YAAaV,EAAWW,UACnD9C,EAAoBkC,EAAM5E,QAC5B,OAGP2C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBAAwBC,UACvCF,EAAAA,EAAAA,KAAC8B,EAAAA,GAAU,CACPzE,KAAK,UACLkC,QAASA,EACTwC,OAAQ,SAAAiC,GAAA,IAAG/B,EAAK+B,EAAL/B,MAAOC,EAAU8B,EAAV9B,WAAU,OAC5B5B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAOmC,QAAQ,UAASjC,SAAC,cACzBF,EAAAA,EAAAA,KAACiE,EAAAA,EAAa,CAAC5B,QAASJ,EAAM5E,KAAMiF,MAAOL,EAAMK,MAAOC,SAAUN,EAAMO,IAAMG,SAAU,SAACD,GAAC,OAAKT,EAAMU,SAASD,EAAEkB,OAAOtB,MAAM,EAAErC,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,YAAaV,EAAWW,UAC9K9C,EAAoBkC,EAAM5E,QAC5B,UAMvB,C,sFCrPe,SAAS6G,EAAehG,GAAiE,IAA7D+D,EAAK/D,EAAL+D,MAAOhC,EAAS/B,EAAT+B,UAAWa,EAAI5C,EAAJ4C,KAAMqD,EAAcjG,EAAdiG,eAAcC,EAAAlG,EAAEmG,YAAAA,OAAW,IAAAD,EAAG,GAAEA,EAU/F,OACIpE,EAAAA,EAAAA,KAACsE,EAAAA,EAAQ,CAAChC,MAAOL,EAAMK,MAAOK,SAAU,SAACD,GAAC,OAT7B,SAACA,GACdT,EAAMU,SAASD,EAAEJ,OACjBnB,QAAQC,IAAIsB,EAAEJ,OACX6B,GACCA,EAAezB,EAAEJ,MAEzB,CAGmDK,CAASD,EAAE,EACtD6B,QAASzD,EAAM0D,YAAY,KAAKC,YAAY,OAAOJ,YAAaA,EAChEpE,UAAWA,GAEvB,C,0ICXe,SAASyE,EAAyBxG,GAA4F,IAAzFyG,EAAczG,EAAdyG,eAAgBC,EAAY1G,EAAZ0G,aAAcC,EAAU3G,EAAV2G,WAAYzB,EAAQlF,EAARkF,SAAqBC,GAAFnF,EAAT8E,UAAkB9E,EAAPmF,SAEzGyB,GAFgH5G,EAAEiF,YAE7G4B,EAAAA,EAAAA,QAAO,OACZC,GAAKD,EAAAA,EAAAA,QAAO,MAElBvG,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtCyG,EAAOvG,EAAA,GAAEwG,EAAUxG,EAAA,GAC1BI,GAAkDL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAvDqG,EAAiBpG,EAAA,GAAEqG,EAAoBrG,EAAA,GAC9CG,GAAwCT,EAAAA,EAAAA,UAAS,GAAEU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA5CmG,EAAYlG,EAAA,GAAEmG,EAAenG,EAAA,GACpCoG,GAAoC9G,EAAAA,EAAAA,UAASkG,GAAea,GAAA7G,EAAAA,EAAAA,GAAA4G,EAAA,GAArDE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAA8BlH,EAAAA,EAAAA,UAAS,IAAGmH,GAAAjH,EAAAA,EAAAA,GAAAgH,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAGpBG,EAAiB,IAAIC,EAAAA,GAe3BnG,EAAAA,EAAAA,YAAU,WACNoG,GACJ,GAAG,KAEHpG,EAAAA,EAAAA,YAAU,WAfNqF,GAAW,GAEXa,EAAeG,OAAOT,GAAYU,MAAK,SAAArF,GAEnCK,QAAQC,IAAIN,GACZwE,EAAgBxE,EAAKsF,OACrBN,EAAWhF,EAAKuF,MAChBnB,GAAW,EACf,GASJ,GAAG,CAACO,IAEJ,IAAMQ,EAAc,WAChBP,EAAcf,GACdS,EAAqB,GACzB,EA2CMkB,EAAe,SAACxF,GAAI,OAAKA,EAAK1D,KAAOyH,CAAW,EAMtD,OACIvE,EAAAA,EAAAA,MAAA,OAAKkB,MAAO,CAAC+E,UAAW,SAASrG,SAAA,EAC7BI,EAAAA,EAAAA,MAAA,QAAML,UAAU,oBAAmBC,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,kBACbD,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CAACrB,MAAO6C,EAAmBxC,SAnCpB,SAACD,GAC1B,IAAI8D,GAAW1G,EAAAA,EAAAA,GAAA,GAAQ2F,GAGjBnD,EAAQI,EAAEkB,OAAOtB,MAEvB8C,EAAqB9C,GAER,OAAVA,QAA4BmE,IAAVnE,IAIrBkE,EAAqB,QAAU,OAAElE,MAAQA,EACzCkE,EAAmB,MAAI,EACvBd,EAAcc,GAClB,EAqBgB7F,QAAS,SAAC+B,GAAOsC,EAAG0B,QAAQC,KAAKjE,EAAE,EACnCkE,QAAS,SAAClE,GAAOA,EAAEkB,OAAOiD,QAAQ,EAClCxC,YAAY,eAEhB/D,EAAAA,EAAAA,MAACwG,EAAAA,EAAS,CACNtE,IAAKsC,EAAIxC,MAAOuD,EAASkB,QAAQ,KACjC9G,UAAU,uBAAuB+G,iBAAiB,SAClDC,MAAI,EAAChC,QAASA,EAASoB,KAAMZ,EAAWY,KACxCa,OAvDD,SAACC,GACZ,IAAIX,GAAW1G,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ2F,GAAe0B,GACtCzB,EAAcc,EAClB,EAoDgCY,UAAW3B,EAAW2B,UAAWC,UAAW5B,EAAW4B,UACvEC,SAnDC,SAACH,GACd,IAAIX,GAAW1G,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ2F,GAAe0B,GACtCX,EAAmB,MAAI,EACvBd,EAAcc,EAClB,EA+CoCe,cAAc,MAClCC,QAAS/B,EAAW+B,QACpBC,iBApBQ,SAACN,GAAK,OAAMA,EAAMrG,MAAOwF,EAAaa,EAAMrG,KAAY,EAoB7B4G,aAlB9B,SAAC5G,GAAI,OAAMwF,EAAaxF,GAAQ,GAAK,YAAY,EAmBtD6G,iBAAiB,SAASC,kBAAgB,EAC1CC,YAAU,EAACC,aAAa,OAAOC,WAAY,CAAEC,SAAU,SACvDC,WAAS,EAAC5C,aAAcA,EAAc6C,OAlEvC,SAACf,GACZ,IAAIX,GAAW1G,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ2F,GAAe0B,GACtCzB,EAAcc,EAClB,EA+DsE2B,MAAO1C,EAAW0C,MACxEC,kBAAkB,uGAClBC,mBAAoB,CAAC,EAAE,GAAI,IAC3BC,0BAA0B,sDAC1BC,mBAAoB,CAAC,QACrBC,cAAc,SAASC,UAAW7D,EAClC8D,kBAAmB,SAAChG,GACbA,EAAEJ,OAxCL,SAACI,GACD,OAAbsC,EAAG0B,cAAyBD,IAAPzB,GAA2B,OAAPA,GACxCA,EAAG0B,QAAQiC,OAEfvD,EAAqB,IACrBhC,EAASV,EACb,CAmCwBkG,CAAYlG,EAEpB,EAEAmG,aAAa,iBAAgB3I,SAAA,EAE7BF,EAAAA,EAAAA,KAAC8I,EAAAA,EAAM,CAACN,cAAc,SAASO,YAAa,CAAEf,SAAU,UACvD3E,EAAQ2F,KAAI,SAACC,EAAKC,GACf,OACIlJ,EAAAA,EAAAA,KAAC8I,EAAAA,EAAM,CAAa7G,MAAOgH,EAAIhH,MAAOP,OAAQuH,EAAIvH,OAAQyH,QAAM,EAAC7F,kBAAmB2F,EAAI3F,kBAAmB8F,UAAQ,EAACL,YAAa,CAAEf,SAAUiB,EAAIjB,WAApIkB,EAErB,SAIpB,C,+YCkGA,EA9N2B,SAAHhL,GAMjB,IALHmL,EAAUnL,EAAVmL,WACAC,EAAQpL,EAARoL,SAAUC,EAAUrL,EAAVqL,WAAYC,EAAYtL,EAAZsL,aACtBC,EAAMvL,EAANuL,OAAQC,EAAQxL,EAARwL,SACRC,EAAWzL,EAAXyL,YAAaC,EAAoB1L,EAApB0L,qBAAsBC,EAA0B3L,EAA1B2L,2BACnCC,EAAG5L,EAAH4L,IAAKC,EAAY7L,EAAZ6L,aAAcC,EAAW9L,EAAX8L,YAGnBxL,GAAoCC,EAAAA,EAAAA,UAAS,GAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CyL,EAAUvL,EAAA,GAAEwL,EAAaxL,EAAA,GAChCI,GAA0CL,EAAAA,EAAAA,UAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjDqL,EAAapL,EAAA,GAAEqL,EAAgBrL,EAAA,GACtCG,GAA0DT,EAAAA,EAAAA,UAAS,GAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjEmL,EAAqBlL,EAAA,GAAEmL,EAAwBnL,EAAA,GACtDoG,GAAoD9G,EAAAA,EAAAA,UAAS,GAAK+G,GAAA7G,EAAAA,EAAAA,GAAA4G,EAAA,GAA3DgF,EAAkB/E,EAAA,GAAEgF,EAAqBhF,EAAA,GAChDG,GAA0ClH,EAAAA,EAAAA,UAAS,GAAEmH,GAAAjH,EAAAA,EAAAA,GAAAgH,EAAA,GAA/B8E,GAAF7E,EAAA,GAAkBA,EAAA,IACtC8E,GAA4BjM,EAAAA,EAAAA,UAAS,GAAKkM,GAAAhM,EAAAA,EAAAA,GAAA+L,EAAA,GAAnCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAgCrM,EAAAA,EAAAA,UAAS,GAAKsM,GAAApM,EAAAA,EAAAA,GAAAmM,EAAA,GAAvCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAA0CzM,EAAAA,EAAAA,UAAS,GAAK0M,IAAAxM,EAAAA,EAAAA,GAAAuM,EAAA,GAAjDE,GAAaD,GAAA,GAAEE,GAAgBF,GAAA,GACtCG,IAAkC7M,EAAAA,EAAAA,UAAS,GAAK8M,IAAA5M,EAAAA,EAAAA,GAAA2M,GAAA,GAAzCE,GAASD,GAAA,GAAEE,GAAYF,GAAA,GAE9BG,IAAkCjN,EAAAA,EAAAA,UAAS,IAAGkN,IAAAhN,EAAAA,EAAAA,GAAA+M,GAAA,GAAvCE,GAASD,GAAA,GAAEE,GAAYF,GAAA,GAE9BG,IAAwDrN,EAAAA,EAAAA,UAAS,MAAKsN,IAAApN,EAAAA,EAAAA,GAAAmN,GAAA,GAA/DE,GAAoBD,GAAA,GAAEE,GAAuBF,GAAA,GAGpDG,IAA2DzN,EAAAA,EAAAA,WAAS,GAAM0N,IAAAxN,EAAAA,EAAAA,GAAAuN,GAAA,GAAnEE,GAAmBD,GAAA,GAAEE,GAA2BF,GAAA,IAEvDtM,EAAAA,EAAAA,YAAU,WACNsB,QAAQC,IAAI,WAAWiI,GACpBA,IACCgC,GAAiBvB,GACjBmB,EAAYlB,GACZS,EAAsBR,GACtBsC,GAAmBjD,GACnBkD,GAAgBlD,GAExB,GAAG,CAACA,EAAYS,EAAKC,IAErB,IAAMyC,GAAc,SAACC,GACjB,OAAOC,KAAKC,MAA+B,KAAxBF,EAAMG,OAAOC,UAAkB,GACtD,EAwBMN,GAAkB,SAACO,GACrB,IAIIhD,EACA0B,EALApF,EAAQ,EAER2G,EAAmB,EACnBC,EAAW,EAGfF,EAASG,SAAQ,SAAAC,GACb/L,QAAQC,IAAI,aAAa8L,GACzB9G,GAASwG,OAAOM,EAAKC,aAAeP,OAAOM,EAAKE,KAChDL,GAAoBH,OAAOM,EAAKC,aAAeP,OAAOM,EAAKE,KAAOR,OAAOM,EAAKG,iBAAmB,IACjGL,GAAYJ,OAAOM,EAAKE,IAC5B,IAEA5B,EAAYpF,EAAQ2G,EAAmBxC,GADvCT,EAAyDsB,GAAgB,KAAlEhF,EAAQ2G,EAAmBxC,IACgCS,EAClEd,EAAc9D,GACdgE,EAAiB2C,GACjBzC,EAAyByC,EAAmBxC,GAC5CE,EAAiBuC,GACjBvB,GAAaD,GACbX,EAAUf,EACd,EAEMwC,GAAkB,eAAAtK,GAAAsL,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOX,GAAQ,IAAAY,EAAAP,EAAAC,EAAAC,EAAAN,EAAAY,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,YACnCjB,GAAYA,EAASkB,OAAS,GAAC,CAAAH,EAAAE,KAAA,SACtBL,EAAE,EAAE,KAAD,OAAEA,EAAEZ,EAASkB,QAAM,CAAAH,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EACOE,GAAenB,EAASY,GAAGQ,YAAY,KAAD,EAAvEpB,EAASY,GAAGS,aAAYN,EAAAO,KACpBjB,EAAcX,GAAYI,OAAOE,EAASY,GAAGP,cAC7CC,EAAMZ,GAAYI,OAAOE,EAASY,GAAGN,MACrCC,EAAkBb,GAAYI,OAAOE,EAASY,GAAGL,kBACjDN,EAAmBP,GAAYW,EAAcC,EAAMC,EAAkB,KACrEM,EAAWnB,GAAYW,EAAcC,EAAML,GAC/CD,EAASY,GAAGzD,WAAauC,GAAYW,EAAcC,GACnDN,EAASY,GAAGX,iBAAmBA,EAC/BD,EAASY,GAAGC,SAAWA,EAAS,QATJD,IAAGG,EAAAE,KAAA,gBAYvClC,GAAaiB,GAAU,yBAAAe,EAAAQ,OAAA,GAAAZ,EAAA,KAC1B,gBAfuBa,GAAA,OAAAtM,EAAAuM,MAAA,KAAAC,UAAA,KAgBlBC,GAA+B,WACjCxC,GAAwB,MACxBI,IAA4B,EAChC,EAuBMqC,IACFpO,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACIF,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACC,MAAM,KAAKC,KAAK,cAAcT,UAAU,gBAAgBU,QAAS8N,MACzEzO,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACC,MAAM,MAAMC,KAAK,cAAcT,UAAU,gBAAgBU,QAxBtD,WACf+I,EAASsC,IACTK,IAA4B,EAChC,OAyBM4B,GAAc,eAAAnL,GAAAwK,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAmB,EAAOT,GAAU,IAAAU,EAAA,OAAArB,EAAAA,EAAAA,KAAAK,MAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,cAAAc,EAAAd,KAAA,EAEhBe,EAAAA,EAAgBC,eAAeb,GAAY,KAAD,EAAnD,OAAPU,EAAOC,EAAAT,KAAAS,EAAAG,OAAA,SACJJ,EAAUA,EAAQvR,KAAO,IAAE,wBAAAwR,EAAAR,OAAA,GAAAM,EAAA,KACrC,gBAJmBM,GAAA,OAAAnM,EAAAyL,MAAA,KAAAC,UAAA,KAMpB,OACIlO,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAQC,UAAU,SAAQC,UAACI,EAAAA,EAAAA,MAAA,SAAAJ,SAAA,EACvBI,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,uBAAwBF,EAAAA,EAAAA,KAAA,MAAAE,SAAKmJ,EAAaA,EAAW2E,OAAS,KACrEhO,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,qBAAsBF,EAAAA,EAAAA,KAAA,MAAAE,SAAKsM,GAAYvC,MAC9CjK,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,wBAAyBF,EAAAA,EAAAA,KAAA,MAAAE,SAAKsM,GAAYnC,MACjDrK,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,mBAAoBF,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAACkP,EAAAA,EAAK,CAAC5M,MAAOkK,GAAYhB,IAAY2D,KAAK,QAAQC,SAAS,kBAC1F9O,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,EACDI,EAAAA,EAAAA,MAAA,MAAI+O,MAAM,WAAUnP,SAAA,EAACF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,WACpBF,EAAAA,EAAAA,KAACoC,EAAAA,EAAW,CACR7D,UAAW+K,EACXhH,MAAOwH,EACPzF,YAAY,QACZiL,IAAK,IAAKC,IAAK,EACftP,UAAU,OACVuB,MAAO,CAAC,MAAS,qBACjBiB,cAAe,SAACC,GAAC,OArHrB,SAAC0I,GACjBC,GAAiBD,GACjB,IAAIoE,GAAQC,EAAAA,EAAAA,GAAOpG,GACnBkD,GAAgBiD,GAChB7F,EAAYyB,EAChB,CAgH8CsE,CAAYhN,EAAEJ,MAAM,KAE9CtC,EAAAA,EAAAA,KAAA,KAAAE,SAAG,UAEPF,EAAAA,EAAAA,KAAA,MAAAE,SACKsM,GAAY5B,MAEjB5K,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,sBAEPF,EAAAA,EAAAA,KAAA,MAAIqP,MAAM,WAAUnP,UAChBF,EAAAA,EAAAA,KAACoC,EAAAA,EAAW,CACR7D,UAAW+K,EACXhH,MAAOyH,EACP1F,YAAY,kBACZiL,IAAK,IAAKC,IAAK,EACftP,UAAU,OACVuB,MAAO,CAAC,MAAS,qBACjBiB,cAAe,SAACC,GAAC,OA/HZ,SAACqH,GAC1BkB,EAAYlB,GACZ,IAAIyF,GAAQC,EAAAA,EAAAA,GAAOpG,GACnBkD,GAAgBiD,GAChB5F,EAAqBG,EACzB,CA0H8C4F,CAAqBjN,EAAEJ,MAAM,OAG3DtC,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,iBAEPF,EAAAA,EAAAA,KAAA,MAAIqP,MAAM,WAAUnP,UAChBF,EAAAA,EAAAA,KAACoC,EAAAA,EAAW,CAACE,MAAO0H,EAChB3F,YAAY,GACZiL,IAAK,IAAKC,IAAK,EACftP,UAAU,OACVuB,MAAO,CAAC,MAAS,qBACjBiB,cAAe,SAACC,GAAC,OAnIhB,SAACkN,GACtBtF,EAAyBH,EAAgByF,GACzCpF,EAAsBoF,GACtB,IAAIJ,GAAQC,EAAAA,EAAAA,GAAOpG,GACnBkD,GAAgBiD,GAChB3F,EAA2B+F,EAC/B,CA6H8CC,CAAiBnN,EAAEJ,MAAM,eAK/DhC,EAAAA,EAAAA,MAACwG,EAAAA,EAAS,CAACxE,MAAOsJ,GACdkE,aAAW,EAACC,eAAa,EAAClI,YAAU,EAACC,aAAa,QAAO5H,SAAA,EAEzDF,EAAAA,EAAAA,KAAC8I,EAAAA,EAAM,CAACkH,KAlFO,SAACC,GACxB,IAAIC,IAAY3G,GAAY0G,EAAQ7C,IAAM6C,EAAQE,WAAa,EAC/D,OACI7P,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,CACKoJ,IAAYtJ,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACE,KAAK,eAAeT,UAAU,yCAAyCU,QAAS,kBAAM8I,EAAOwG,EAAQ,IACzH3G,IAAYtJ,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACE,KAAK,cAAcT,UAAU,oCAAoCU,QAAS,kBAAM+I,EAASuG,EAAQ,IACrHC,IAAalQ,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACE,KAAK,cAAcT,UAAU,oCAAoCU,QAAS,kBAAM6I,EAAayG,EAAQ,MAGvI,EAyE8CG,QAAM,EAACrH,YAAa,CAAEf,SAAU,aAClEhI,EAAAA,EAAAA,KAAC8I,EAAAA,EAAM,CAAC7G,MAAM,eAAemO,QAAM,EAAC1O,OAAO,eAAgBqH,YAAa,CAAEf,SAAU,YAIpFhI,EAAAA,EAAAA,KAAC8I,EAAAA,EAAM,CAAC7G,MAAM,MAAMP,OAAO,WAAWqH,YAAa,CAAEf,SAAU,YAC/DhI,EAAAA,EAAAA,KAAC8I,EAAAA,EAAM,CAAC7G,MAAM,aAAaP,OAAO,WAAWqH,YAAa,CAAEf,SAAU,YACtEhI,EAAAA,EAAAA,KAAC8I,EAAAA,EAAM,CAAC7G,MAAM,cAAcP,OAAO,cAAcqH,YAAa,CAAEf,SAAU,YAC1EhI,EAAAA,EAAAA,KAAC8I,EAAAA,EAAM,CAAC7G,MAAM,aAAaP,OAAM,cAAiBqH,YAAa,CAAEf,SAAU,YAC3EhI,EAAAA,EAAAA,KAAC8I,EAAAA,EAAM,CAAC7G,MAAM,kBAAkBP,OAAM,eAAkBqH,YAAa,CAAEf,SAAU,YACjFhI,EAAAA,EAAAA,KAAC8I,EAAAA,EAAM,CAAC7G,MAAM,mBAAmBP,OAAM,oBAAuBqH,YAAa,CAAEf,SAAU,YACvFhI,EAAAA,EAAAA,KAAC8I,EAAAA,EAAM,CAAC7G,MAAM,WAAWP,OAAO,WAAWqH,YAAa,CAAEf,SAAU,YACpEhI,EAAAA,EAAAA,KAAC8I,EAAAA,EAAM,CAAC7G,MAAM,iBAAiBP,OAAO,kBAAkBqH,YAAa,CAAEf,SAAU,YACjFhI,EAAAA,EAAAA,KAAC8I,EAAAA,EAAM,CAAC7G,MAAM,UAAUP,OAAO,UAAUqH,YAAa,CAAEf,SAAU,eAGtEhI,EAAAA,EAAAA,KAACsB,EAAAA,EAAM,CAACC,QAAS6K,GAAqB5K,MAAO,CAAEC,MAAO,SAAWC,OAAO,UAAUC,OAAK,EAACC,OAAQ8M,GAA2B7M,OAAQ4M,GAA6BvO,UAC5JI,EAAAA,EAAAA,MAAA,OAAKL,UAAU,iDAAgDC,SAAA,EAC3DF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,kCAAkCuB,MAAO,CAAE6O,SAAU,WAClErQ,EAAAA,EAAAA,KAAA,QAAAE,SAAM,4CAQ1B,E,UC5Ne,SAASoQ,EAAgBpS,GAQpC,IAPAmL,EAAUnL,EAAVmL,WACAC,EAAQpL,EAARoL,SAAUC,EAAUrL,EAAVqL,WAAYC,EAAYtL,EAAZsL,aACtB5E,EAAY1G,EAAZ0G,aACA2L,EAAYrS,EAAZqS,aAAcC,EAAetS,EAAfsS,gBAAiBC,EAAevS,EAAfuS,gBAC/BC,EAAqBxS,EAArBwS,sBAAuBC,EAAuBzS,EAAvByS,wBACvBhH,EAAWzL,EAAXyL,YAAaC,EAAoB1L,EAApB0L,qBAAsBC,EAA0B3L,EAA1B2L,2BACnCC,EAAG5L,EAAH4L,IAAKC,EAAY7L,EAAZ6L,aAAcC,EAAW9L,EAAX8L,YAGnB5K,GAOIC,EAAAA,EAAAA,IAAQ,CACRC,cAAe,CAAC,IANhBC,GADQH,EAARwR,SACOxR,EAAPG,SACaC,EAAMJ,EAAnBK,UAAaD,OACbE,EAAKN,EAALM,MACAC,EAAQP,EAARO,SACAC,EAAYR,EAAZQ,aAKEiR,GAAc9L,EAAAA,EAAAA,QAAO,MAE3BvG,GAAwCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CsS,EAAYpS,EAAA,GAAEqS,EAAerS,EAAA,GACpCI,GAAsCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA3CkS,EAAWjS,EAAA,GAAEkS,EAAclS,EAAA,GAClCG,GAAiCT,EAAAA,EAAAA,UAAS,GAAEU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAArCgS,EAAS/R,EAAA,GAAEgS,EAAWhS,EAAA,GAC7BoG,GAAyC9G,EAAAA,EAAAA,UAAS,GAAE+G,GAAA7G,EAAAA,EAAAA,GAAA4G,EAAA,GAA7C6L,EAAa5L,EAAA,GAAE6L,EAAe7L,EAAA,GACrCG,GAA4BlH,EAAAA,EAAAA,WAAS,GAAMmH,IAAAjH,EAAAA,EAAAA,GAAAgH,EAAA,GAApC2L,GAAM1L,GAAA,GAAE2L,GAAS3L,GAAA,GAExB8E,IAAkDjM,EAAAA,EAAAA,UAAS,MAAKkM,IAAAhM,EAAAA,EAAAA,GAAA+L,GAAA,GAAzD8G,GAAiB7G,GAAA,GAAE8G,GAAoB9G,GAAA,GAExC+G,GAAY,WACdhS,EAAM,CACF,WAAc,GACd,SAAY,GACZ,IAAO,EACP,UAAa,EACb,YAAe,EACf,QAAW,GACX,WAAc,EACd,gBAAmB,EACnB,iBAAoB,EACpB,SAAY,EACZ,eAAkB,IAEtBqR,EAAgB,MAChBI,EAAY,GACZQ,GAAsB,GAAI,EAC9B,EAEMA,GAAwB,SAACtU,EAAMuU,GACjCzQ,QAAQC,IAAI,wBAAyB/D,EAAMuU,GAC3CX,EAAe5T,GACfgU,EAAgBO,EACpB,GAEA/R,EAAAA,EAAAA,YAAU,WAEN,GADAsB,QAAQC,IAAI,uBAAuBiI,GAChCA,GAAcA,EAAW2E,OAAS,EAAE,CACnC,IAAI6D,EAAS,EACbxI,EAAW4D,SAAQ,SAAC6E,GAChBD,GAAUjF,OAAOkF,EAAKnE,SAC1B,IACAxM,QAAQC,IAAI,WAAYyQ,EAE5B,CACJ,GAAG,CAACxI,KAEJxJ,EAAAA,EAAAA,YAAU,WACF+E,GAAgBA,EAAaxH,IAC7BmU,IAAU,GACVQ,GAAcnN,IAEd8M,IAER,GAAG,CAAC9M,IAEJ,IAAMoN,GAAiB,SAACC,GACpBA,EAAahI,YAAauC,EAAAA,EAAAA,IAAYI,OAAOqF,EAAa9E,aAAeP,OAAOqF,EAAa7E,MAC7F6E,EAAalF,kBAAmBP,EAAAA,EAAAA,IAAYyF,EAAahI,WAAa2C,OAAOqF,EAAa5E,iBAAmB,KAC7G4E,EAAatE,UAAWnB,EAAAA,EAAAA,IAAYyF,EAAahI,WAAcgI,EAAalF,kBAE5EgE,EAAgBkB,GAEhBtS,EAAS,aAAcsS,EAAahI,YACpCtK,EAAS,mBAAoBsS,EAAalF,kBAC1CpN,EAAS,WAAYsS,EAAatE,SACtC,EAEMuE,GAAgB,SAACxP,EAAGrF,GACtB,IAAM8U,EAAOzP,EAAEkB,QAAUlB,EAAEkB,OAAOtB,OAAU,EACxC2P,GAAYnS,EAAAA,EAAAA,GAAA,GAAQgR,GACxBmB,EAAa,GAADG,OAAI/U,IAAU8U,EAC1BH,GAAeC,GAEftS,EAAStC,EAAM8U,EACnB,EAEMJ,GAAa,eAAA/P,GAAAsL,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAMqE,GAAI,IAAAO,EAAAJ,EAAA,OAAA1E,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC5B5M,QAAQC,IAAI,kBAAmB0Q,GAE3BO,EAAgBP,EAAKV,eAGrBa,GAAYnS,EAAAA,EAAAA,GAAA,GAAQgR,IACC,WAAIgB,EAAK1U,GAClC6U,EAA2B,aAAIH,EAAKzU,KACpC4U,EAAwB,UAAIH,EAAKZ,UACjCe,EAA0B,YAAIH,EAAK3E,YACnC8E,EAA4B,cAAII,EAChCJ,EAAkB,IAAIH,EAAK1E,KAAO,EAClC6E,EAA8B,gBAAIH,EAAKzE,iBAAmB,EAC1D4E,EAAsB,QAAIH,EAAKQ,SAAW,GAC1CL,EAA6B,eAAIH,EAAKS,eAEtCxB,EAAgBkB,GAEhBvS,GAAKI,EAAAA,EAAAA,GAAC,CAAC,EAAImS,IACXd,EAAYW,EAAKZ,WACjBS,GAAsBG,EAAW,KAAGO,GAEpCxB,EAAYnK,QAAQ8L,QAEpBR,GAAeC,GAAc,yBAAApE,EAAAQ,OAAA,GAAAZ,EAAA,KAChC,gBA1BkBa,GAAA,OAAAtM,EAAAuM,MAAA,KAAAC,UAAA,KAwEbzO,GAAsB,SAAC1C,GACzB,OAAOmC,EAAOnC,KAAS2C,EAAAA,EAAAA,KAAA,SAAOC,UAAU,UAASC,SAAEV,EAAOnC,GAAM8C,SACpE,EA6KA,OACIG,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,CACKoJ,IA3KDhJ,EAAAA,EAAAA,MAAA,OAAKL,UAAU,6BAA4BC,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UACtCF,EAAAA,EAAAA,KAAC8B,EAAAA,GAAU,CACPzE,KAAK,aACLkC,QAASA,EACTgE,MAAO,CAAEkP,SAAU,wBACf1Q,OAAQ,SAAAe,GAAA,IAAGb,EAAKa,EAALb,MAAOC,EAAUY,EAAVZ,WAAU,OAC5B5B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAOmC,QAASF,EAAM5E,KAAM4C,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,UAAWpD,EAAO8C,QAASpC,SAAC,mBAChFF,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CAAC+O,SAAS,OAAOpQ,MAAO0O,EAAa3M,YAAY,oBAC3DrE,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CAACgP,QAAM,EAACtQ,QAASJ,EAAM5E,KAAMiF,MAAOL,EAAMK,MAAOC,SAAUN,EAAMO,IAAMvC,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,YAAaV,EAAWW,UAChI9C,GAAoBkC,EAAM5E,QAC5B,OAGX2C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UACtCF,EAAAA,EAAAA,KAAC8B,EAAAA,GAAU,CACPzE,KAAK,iBACLkC,QAASA,EACTwC,OAAQ,SAAA0B,GAAA,IAAGxB,EAAKwB,EAALxB,MAAOC,EAAUuB,EAAVvB,WAAU,OACxB5B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACJF,EAAAA,EAAAA,KAAA,SAAOmC,QAASF,EAAM5E,KAAM4C,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,UAAWpD,EAAO8C,QAASpC,SAAC,sBAChFF,EAAAA,EAAAA,KAACoC,EAAAA,EAAW,CACRC,QAASJ,EAAM5E,KAAMiF,MAAOL,EAAMK,MAAOC,SAAUN,EAAMO,IACzDvC,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,YAAaV,EAAWW,QAChDjC,UAAU,MACP,OAGXZ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UACtCF,EAAAA,EAAAA,KAAC8B,EAAAA,GAAU,CACPzE,KAAK,YACLkC,QAASA,EACTwC,OAAQ,SAAA2B,GAAA,IAAGzB,EAAKyB,EAALzB,MAAOC,EAAUwB,EAAVxB,WAAU,OACxB5B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAOmC,QAASF,EAAM5E,KAAM4C,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,UAAWpD,EAAO8C,QAASpC,SAAC,qBAChFF,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CAACtB,QAASJ,EAAM5E,KAAMiF,MAAOL,EAAMK,MAAOC,SAAUN,EAAMO,IAAK5B,UAAU,EAAOX,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,YAAaV,EAAWW,UACzI9C,GAAoBkC,EAAM5E,QAC5B,OAuBX2C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UACtCF,EAAAA,EAAAA,KAAC8B,EAAAA,GAAU,CACPzE,KAAK,cACLkC,QAASA,EACTgE,MAAO,CACHkP,SAAU,2BACVlD,IAAK,CAAEjN,MAAO4O,EAAW/Q,QAAS,iDAEtC4B,OAAQ,SAAA8B,GAAA,IAAG5B,EAAK4B,EAAL5B,MAAOC,EAAU2B,EAAV3B,WAAU,OACxB5B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACJF,EAAAA,EAAAA,KAAA,SAAOmC,QAASF,EAAM5E,KAAM4C,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,UAAWpD,EAAO8C,QAASpC,SAAC,iBAChFF,EAAAA,EAAAA,KAACoC,EAAAA,EAAW,CAACI,IAAKqO,EACdjK,QAAS,SAAClE,GAAC,OAAKA,EAAEkB,OAAOiD,QAAQ,EACjCxE,QAASJ,EAAM5E,KAAMiF,MAAOL,EAAMK,MAAOC,SAAUN,EAAMO,IAAKvC,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,YAAaV,EAAWW,QAC9GJ,cAAe,SAACC,GAAC,OAAKwP,GAAcxP,EAAG,cAAc,EAAE6M,IAAK2B,EAAW5B,IAAK,QACzE,OAGXhP,EAAAA,EAAAA,MAAA,OAAKL,UAAU,wBAAuBC,SAAA,EAClCF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,mBACPF,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CAAC+O,SAAS,OAAOpQ,MAAO8O,EAAe/M,YAAY,sBAEjErE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UACtCF,EAAAA,EAAAA,KAAC8B,EAAAA,GAAU,CACPzE,KAAK,MACLkC,QAASA,EACTgE,MAAO,CACHkP,SAAU,wBACVnD,IAAK,CAAEhN,MAAO8O,EAAejR,QAAS,iDAE1C4B,OAAQ,SAAA+B,GAAA,IAAG7B,EAAK6B,EAAL7B,MAAOC,EAAU4B,EAAV5B,WAAU,OACxB5B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACJF,EAAAA,EAAAA,KAAA,SAAOmC,QAASF,EAAM5E,KAAM4C,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,UAAWpD,EAAO8C,QAASpC,SAAC,cAChFF,EAAAA,EAAAA,KAACoC,EAAAA,EAAW,CAACI,IAAKqO,EACdjK,QAAS,SAAClE,GAAC,OAAKA,EAAEkB,OAAOiD,QAAQ,EACjCxE,QAASJ,EAAM5E,KAAMiF,MAAOL,EAAMK,MAAOC,SAAUN,EAAMO,IAAKvC,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,YAAaV,EAAWW,QAC9GJ,cAAe,SAACC,GAAC,OAAKwP,GAAcxP,EAAG,MAAM,EAAE6M,IAAK,EAAGD,IAAK,QACzD,OAGXtP,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UACtCF,EAAAA,EAAAA,KAAC8B,EAAAA,GAAU,CACPzE,KAAK,aACLkC,QAASA,EACTwC,OAAQ,SAAAgC,GAAA,IAAG9B,EAAK8B,EAAL9B,MAAOC,EAAU6B,EAAV7B,WAAU,OACxB5B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACJF,EAAAA,EAAAA,KAAA,SAAOmC,QAASF,EAAM5E,KAAM4C,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,UAAWpD,EAAO8C,QAASpC,SAAC,iBAChFF,EAAAA,EAAAA,KAACoC,EAAAA,EAAW,CACZC,QAASJ,EAAM5E,KAAMiF,MAAOL,EAAMK,MAAOC,SAAUN,EAAMO,IAAKvC,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,YAAaV,EAAWW,QAC9GjC,UAAU,MACH,OAIXZ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UACtCF,EAAAA,EAAAA,KAAC8B,EAAAA,GAAU,CACPzE,KAAK,kBACLkC,QAASA,EACTwC,OAAQ,SAAAiC,GAAA,IAAG/B,EAAK+B,EAAL/B,MAAOC,EAAU8B,EAAV9B,WAAU,OACxB5B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACJF,EAAAA,EAAAA,KAAA,SAAOmC,QAASF,EAAM5E,KAAM4C,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,UAAWpD,EAAO8C,QAASpC,SAAC,gBAChFF,EAAAA,EAAAA,KAACoC,EAAAA,EAAW,CACRwE,QAAS,SAAClE,GAAC,OAAKA,EAAEkB,OAAOiD,QAAQ,EACjCxE,QAASJ,EAAM5E,KAAMiF,MAAOL,EAAMK,MAAOC,SAAUN,EAAMO,IAAKvC,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,YAAaV,EAAWW,QAC9GJ,cAAe,SAACC,GAAC,OAAKwP,GAAcxP,EAAG,kBAAkB,EAAE6M,IAAK,EAAMqD,kBAAmB,MACtF,OAIX5S,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UACtCF,EAAAA,EAAAA,KAAC8B,EAAAA,GAAU,CACPzE,KAAK,WACLkC,QAASA,EACTwC,OAAQ,SAAA8Q,GAAA,IAAG5Q,EAAK4Q,EAAL5Q,MAAOC,EAAU2Q,EAAV3Q,WAAU,OACxB5B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACJF,EAAAA,EAAAA,KAAA,SAAOmC,QAASF,EAAM5E,KAAM4C,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,UAAWpD,EAAO8C,QAASpC,SAAC,eAChFF,EAAAA,EAAAA,KAACoC,EAAAA,EAAW,CACZC,QAASJ,EAAM5E,KAAMiF,MAAOL,EAAMK,MAAOC,SAAUN,EAAMO,IAAKvC,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,YAAaV,EAAWW,QAC9GjC,UAAU,MACH,OAIXZ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UACtCF,EAAAA,EAAAA,KAAC8B,EAAAA,GAAU,CACPzE,KAAK,UACLkC,QAASA,EACTwC,OAAQ,SAAA+Q,GAAA,IAAG7Q,EAAK6Q,EAAL7Q,MAAOC,EAAU4Q,EAAV5Q,WAAU,OACxB5B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACJF,EAAAA,EAAAA,KAAA,SAAOmC,QAASF,EAAM5E,KAAM4C,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,UAAWpD,EAAO8C,QAASpC,SAAC,aAChFF,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CAACtB,QAASJ,EAAM5E,KAAMiF,MAAOL,EAAMK,MAAOC,SAAUN,EAAMO,IAChEG,SAAU,SAACD,GAAC,OAAKwP,GAAcxP,EAAG,UAAU,EAAE9B,UAAU,EACxDX,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,YAAaV,EAAWW,YAE7C,OAIXvC,EAAAA,EAAAA,MAAA,OAAKL,UAAU,4CAA2CC,SAAA,CACrDoR,KAAUtR,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAAEC,MAAM,SAASR,UAAU,wBAAwBU,QAASf,GAAa,SAACiB,GAAC,OA5MtFiR,EA4MsGjR,EA3MrH0Q,IAAU,GACVG,UAEAlB,EAAgBsB,EAAMN,IAJP,IAAAM,CA4MwG,OAE7GR,KAAUtR,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACuS,KAAK,SAAStS,MAAM,MAAMR,UAAU,mBAAmBU,QAASf,GAAa,SAACiB,GAAC,OApN/FiR,EAoN4GjR,EAnNxH6Q,UAEAnB,EAAauB,GAHD,IAAAA,CAoN8G,OAClH9R,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACC,MAAM,SAASR,UAAU,0CAA0CU,QAAS,kBAnM5F4Q,IAAU,GACVG,UACAf,GAiMoH,WAShH3Q,EAAAA,EAAAA,KAACgT,EAAkB,CAAC3J,WAAYA,EACxBC,SAAUA,EACVC,WAAYA,EAAYC,aAAc,SAAC1E,GAAE,OAAK0E,EAAa1E,EAAG,EAC9D2E,OAAQ,SAAC3E,GAAE,OAzMFgN,EAyMwBhN,EAxM7C3D,QAAQC,IAAI,qBAAsB0Q,GAClCP,IAAU,GACVE,GAAqBK,EAAK5I,OAE1B6I,GAAc,CACV,GAAMD,EAAK5D,WACX,KAAQ4D,EAAK3D,aACb,UAAa2D,EAAKZ,UAClB,YAAeY,EAAK3E,YACpB,cAAiB2E,EAAKV,cACtB,IAAOU,EAAK1E,IACZ,gBAAmB0E,EAAKzE,gBACxB,QAAWyE,EAAKQ,QAChB,eAAkBR,EAAKS,sBAG3B7B,EAAsBoB,EAAK5D,YAjBN,IAAA4D,CAyM2B,EACpCpI,SAAU,SAACR,GAAK,OArNb,SAACA,GAChBuH,EAAgBvH,EACpB,CAmNqC+J,CAAW/J,EAAM,EACtCS,YAAa,SAACjH,GAAC,OAAKiH,EAAYjH,EAAE,EAClCkH,qBAAsB,SAAClH,GAAC,OAAKkH,EAAqBlH,EAAE,EACpDmH,2BAA4B,SAACnH,GAAC,OAAKmH,EAA2BnH,EAAE,EAChEoH,IAAKA,EAAKC,aAAcA,EAAcC,YAAaA,MAIvE,C,wBC1QA,EAjG8B,SAAH9L,GAAoC,IAA9BC,EAAOD,EAAPC,QAAS+U,EAAahV,EAAbgV,cAOtC1U,GAA0DC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlE2U,EAAqBzU,EAAA,GAAE0U,EAAwB1U,EAAA,GAEtDU,GAKIC,EAAAA,EAAAA,IAAQ,CACRC,cAbmB,CACnB+T,OAAQ,EACRC,OAAQ,MAMR/T,EAAOH,EAAPG,QACaC,EAAMJ,EAAnBK,UAAaD,OACbG,EAAQP,EAARO,SACAC,EAAYR,EAAZQ,cAKJC,EAAAA,EAAAA,YAAU,WACF1B,IACAwB,EAAS,SAAU,GACnBA,EAAS,SAAU,IACnB4T,IAER,GAAG,CAACpV,IAEJ,IAAMoV,EAAa,WACfH,GAAyB,EAC7B,EAEMrT,EAAsB,SAAC1C,GACzB,OAAOmC,EAAOnC,KAAS2C,EAAAA,EAAAA,KAAA,SAAOC,UAAU,UAASC,SAAEV,EAAOnC,GAAM8C,SACpE,EAEMqT,EAAiC,WACnCJ,GAAyB,EAC7B,EAYMK,GACFnT,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACIF,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACC,MAAM,SAASC,KAAK,cAAcT,UAAU,gBAAgBU,QAAS6S,KAC7ExT,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACC,MAAM,OAAOC,KAAK,cAAcT,UAAU,gBAC9CU,QAASf,GAAa,SAACiB,GAAC,OAdV,SAACC,GACvBK,QAAQC,IAAI,oBAAqBN,GACjC,IAAI4S,EAAQ,CACR,OAAU5S,EAAKuS,OACf,OAAUvS,EAAKwS,QAEnBJ,EAAcQ,GACdN,GAAyB,EAC7B,CAMyCO,CAAkB9S,EAAE,SAK7D,OACIb,EAAAA,EAAAA,KAACsB,EAAAA,EAAM,CAACC,QAAS4R,EAAuB3R,MAAO,CAAEC,MAAO,SAAWC,OAAM,cAAiBC,OAAK,EAAC1B,UAAU,UAAU2B,OAAQ6R,EAA6B5R,OAAQ2R,EAA+BtT,UAC5LI,EAAAA,EAAAA,MAAA,OAAKL,UAAU,wBAAuBC,SAAA,EAClCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBAAwBC,UACvCF,EAAAA,EAAAA,KAAC8B,EAAAA,GAAU,CACPzE,KAAK,SACLkC,QAASA,EACTgE,MAAO,CACHC,SAAU,SAAClB,GAAK,OAAKA,EAAO,GAAK,uBAAuB,GAE5DP,OAAQ,SAAAC,GAAA,IAAGC,EAAKD,EAALC,MAAOC,EAAUF,EAAVE,WAAU,OAC5B5B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAOmC,QAAQ,SAAQjC,SAAC,uBACxBF,EAAAA,EAAAA,KAACoC,EAAAA,EAAW,CAACC,QAASJ,EAAM5E,KAAMiF,MAAOL,EAAMK,MAAOC,SAAUN,EAAMO,IAClEC,cAAe,SAACC,GAAC,OAAKT,EAAMU,SAASD,EAAE,EACvCzC,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,YAAaV,EAAWW,UACnD9C,EAAoBkC,EAAM5E,QAC5B,OAGP2C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBAAwBC,UACvCF,EAAAA,EAAAA,KAAC8B,EAAAA,GAAU,CACPzE,KAAK,SACLkC,QAASA,EACTgE,MAAO,CACHkP,SAAU,uBAEd1Q,OAAQ,SAAAe,GAAA,IAAGb,EAAKa,EAALb,MAAOC,EAAUY,EAAVZ,WAAU,OAC5B5B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAOmC,QAAQ,SAAQjC,SAAC,aACxBF,EAAAA,EAAAA,KAACiE,EAAAA,EAAa,CAAC5B,QAASJ,EAAM5E,KAAMiF,MAAOL,EAAMK,MAAOC,SAAUN,EAAMO,IAAMG,SAAU,SAACD,GAAC,OAAKT,EAAMU,SAASD,EAAEkB,OAAOtB,MAAM,EAAErC,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,YAAaV,EAAWW,UAC9K9C,EAAoBkC,EAAM5E,QAC5B,UAMvB,ECvEMuW,EAAOC,EAAAA,MAAW,SAAA3V,GAAgB,IAAb4V,EAAK5V,EAAL4V,MAEjBC,GAAQhP,EAAAA,EAAAA,QAAO,MACjBiP,GAAWC,EAAAA,EAAAA,MAEfzV,GAA0BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjC0V,EAAKxV,EAAA,GAAEyV,EAAQzV,EAAA,GACtBI,GAAgCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAxCwK,EAAQvK,EAAA,GAAEqV,EAAWrV,EAAA,GAC5BG,GAA4BT,EAAAA,EAAAA,UAAS,SAAQU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAtCmV,EAAMlV,EAAA,GAAEmV,EAASnV,EAAA,GACxBoG,GAAkC9G,EAAAA,EAAAA,UAAS,SAAQ+G,GAAA7G,EAAAA,EAAAA,GAAA4G,EAAA,GAA5CgP,EAAS/O,EAAA,GAAEgP,EAAYhP,EAAA,GAG9BG,IAAoClH,EAAAA,EAAAA,UAAS,IAAGmH,IAAAjH,EAAAA,EAAAA,GAAAgH,GAAA,GAAzC0D,GAAUzD,GAAA,GAAE6O,GAAa7O,GAAA,GAChC8E,IAAkCjM,EAAAA,EAAAA,UAAS,IAAGkM,IAAAhM,EAAAA,EAAAA,GAAA+L,GAAA,GAAvCgK,GAAS/J,GAAA,GAAEgK,GAAYhK,GAAA,GAC9BG,IAAsBrM,EAAAA,EAAAA,UAAS,GAAKsM,IAAApM,EAAAA,EAAAA,GAAAmM,GAAA,GAA7BhB,GAAGiB,GAAA,GAAE6J,GAAM7J,GAAA,GAClBG,IAAwCzM,EAAAA,EAAAA,UAAS,GAAK0M,IAAAxM,EAAAA,EAAAA,GAAAuM,GAAA,GAA/CnB,GAAYoB,GAAA,GAAE0J,GAAe1J,GAAA,GACpCG,IAAoD7M,EAAAA,EAAAA,UAAS,GAAK8M,IAAA5M,EAAAA,EAAAA,GAAA2M,GAAA,GAA3Df,GAAkBgB,GAAA,GAAEf,GAAqBe,GAAA,GAGhDG,IAA4DjN,EAAAA,EAAAA,UAAS,CAAC,GAAEkN,IAAAhN,EAAAA,EAAAA,GAAA+M,GAAA,GAAjEoJ,GAAsBnJ,GAAA,GAAEoJ,GAAyBpJ,GAAA,GACxDG,IAAsDrN,EAAAA,EAAAA,UAAS,MAAKsN,IAAApN,EAAAA,EAAAA,GAAAmN,GAAA,GAA7DkJ,GAAmBjJ,GAAA,GAAEkJ,GAAsBlJ,GAAA,GAClDG,IAAwDzN,EAAAA,EAAAA,UAAS,MAAK0N,IAAAxN,EAAAA,EAAAA,GAAAuN,GAAA,GAAzCgJ,IAAF/I,GAAA,GAAyBA,GAAA,IAGpDgJ,IAAoD1W,EAAAA,EAAAA,WAAS,GAAM2W,IAAAzW,EAAAA,EAAAA,GAAAwW,GAAA,GAA5DE,GAAkBD,GAAA,GACzBE,IADgDF,GAAA,IACR3W,EAAAA,EAAAA,UAAS,IAAE8W,IAAA5W,EAAAA,EAAAA,GAAA2W,GAAA,GAA5CE,GAAYD,GAAA,GAAEE,GAAeF,GAAA,GAGpCG,IAAgDjX,EAAAA,EAAAA,UAAS,UAASkX,IAAAhX,EAAAA,EAAAA,GAAA+W,GAAA,GAA3DE,GAAgBD,GAAA,GAAEE,GAAmBF,GAAA,GAC5CG,IAAgDrX,EAAAA,EAAAA,UAAS,MAAKsX,IAAApX,EAAAA,EAAAA,GAAAmX,GAAA,GAAvDE,GAAgBD,GAAA,GAAEE,GAAmBF,GAAA,GAC5CG,IAAkDzX,EAAAA,EAAAA,UAAS,MAAK0X,IAAAxX,EAAAA,EAAAA,GAAAuX,GAAA,GAAzDE,GAAiBD,GAAA,GAAEE,GAAoBF,GAAA,GAC9CG,IAA8C7X,EAAAA,EAAAA,UAAS,MAAK8X,IAAA5X,EAAAA,EAAAA,GAAA2X,GAAA,GAArDE,GAAeD,GAAA,GAAEE,GAAkBF,GAAA,GAG1CG,IAAwDjY,EAAAA,EAAAA,WAAS,GAAMkY,IAAAhY,EAAAA,EAAAA,GAAA+X,GAAA,GAAhEE,GAAoBD,GAAA,GAAEE,GAAuBF,GAAA,GACpDG,IAAwDrY,EAAAA,EAAAA,UAAS,MAAKsY,IAAApY,EAAAA,EAAAA,GAAAmY,GAAA,GAA/DE,GAAoBD,GAAA,GAAEE,GAAuBF,GAAA,GAGpDG,IAAkDzY,EAAAA,EAAAA,UAAS,GAAE0Y,IAAAxY,EAAAA,EAAAA,GAAAuY,GAAA,GAAtDE,GAAiBD,GAAA,GAAEE,GAAoBF,GAAA,GAC9CG,IAAsC7Y,EAAAA,EAAAA,UAAS,MAAK8Y,IAAA5Y,EAAAA,EAAAA,GAAA2Y,GAAA,GAA7CE,GAAWD,GAAA,GAAEE,GAAcF,GAAA,GAClCG,IAAsCjZ,EAAAA,EAAAA,UAAS,MAAKkZ,IAAAhZ,EAAAA,EAAAA,GAAA+Y,GAAA,GAA7CtZ,GAAWuZ,GAAA,GAAEC,GAAcD,GAAA,GAGlCE,IAAkCpZ,EAAAA,EAAAA,UAAS,MAAKqZ,IAAAnZ,EAAAA,EAAAA,GAAAkZ,GAAA,GAAzCE,GAASD,GAAA,GAAEE,GAAYF,GAAA,GAC9BG,IAAsCxZ,EAAAA,EAAAA,UAAS,MAAKyZ,IAAAvZ,EAAAA,EAAAA,GAAAsZ,GAAA,GAA7CE,GAAWD,GAAA,GAAEE,GAAcF,GAAA,GAGlCG,IAAoC5Z,EAAAA,EAAAA,WAAS,GAAM6Z,IAAA3Z,EAAAA,EAAAA,GAAA0Z,GAAA,GAA5C9O,GAAU+O,GAAA,GAAEC,GAAaD,GAAA,GAChCE,IAAoD/Z,EAAAA,EAAAA,UAAS,CAAC,GAAEga,IAAA9Z,EAAAA,EAAAA,GAAA6Z,GAAA,GAAzDE,GAAkBD,GAAA,GAAEE,GAAqBF,GAAA,GAChDG,IAAsDna,EAAAA,EAAAA,UAAS,IAAGoa,IAAAla,EAAAA,EAAAA,GAAAia,GAAA,GAA3DE,GAAmBD,GAAA,GAAEE,GAAsBF,GAAA,GAClDG,IAAsCva,EAAAA,EAAAA,UAAS,IAAGwa,IAAAta,EAAAA,EAAAA,GAAAqa,GAAA,GAA3CE,GAAWD,GAAA,GAAEE,GAAcF,GAAA,GAClCG,IAAgD3a,EAAAA,EAAAA,UAAS,GAAE4a,IAAA1a,EAAAA,EAAAA,GAAAya,GAAA,GAApDE,GAAgBD,GAAA,GAAEE,GAAmBF,GAAA,GAC5CG,IAAwC/a,EAAAA,EAAAA,WAAS,GAAMgb,IAAA9a,EAAAA,EAAAA,GAAA6a,GAAA,GAAhDE,GAAYD,GAAA,GAAEE,GAAeF,GAAA,GAGpCG,IAAoCnb,EAAAA,EAAAA,UAAS,MAAKob,IAAAlb,EAAAA,EAAAA,GAAAib,GAAA,GAA3CE,GAAUD,GAAA,GAAEE,GAAaF,GAAA,GAChCG,IAAkEvb,EAAAA,EAAAA,UAAS,GAAEwb,IAAAtb,EAAAA,EAAAA,GAAAqb,GAAA,GAAtEE,GAAyBD,GAAA,GAAEE,GAA4BF,GAAA,GAG1DG,GAAwB,CACxBC,OAAQ,CAAC,KAAM,OAAQ,OAAQ,WAAY,aAAc,WAAY,cAAe,gBAAiB,YAAa,SAClHlS,MAAO,EACP9B,KAAM,GACNiU,KAAM,EACNlT,UAAW,KACXC,UAAW,KACXG,QAAS,CACL+S,OAAQ,CAAEjY,MAAO,KAAMkY,UAAWC,EAAAA,GAAgBC,UAClDrd,KAAM,CAAEiF,MAAO,KAAMkY,UAAWC,EAAAA,GAAgBC,UAChDC,UAAW,CAAErY,MAAO,KAAMkY,UAAWC,EAAAA,GAAgBC,UACrDE,QAAS,CAAEtY,MAAO,KAAMkY,UAAWC,EAAAA,GAAgBC,UACnDG,WAAY,CAAEvY,MAAO,KAAMkY,UAAWC,EAAAA,GAAgBC,YAI1DI,GAAe,CACfC,aAAcC,IAASC,OAAO,cAC9BC,WAAY,KACZha,aAAc,GACdia,eAAgB,OAChBla,SAAU,GACVD,OAAQ,KACRoa,gBAAiB,KACjBC,gBAAiB,EACjBC,OAAQ,EACRC,UAAW,GACXjJ,QAAS,IAKPkJ,GAAe,IAAIC,EAAAA,EACnB1V,GAAiB,IAAIC,EAAAA,EACrB0V,GAAuB,IAAIC,EAAAA,EAEjCvc,IAMIC,EAAAA,EAAAA,IAAQ,CACRC,cAAe,CAAC,IANhBC,GAAOH,GAAPG,QACaC,GAAMJ,GAAnBK,UAAaD,OACbE,GAAKN,GAALM,MACAC,GAAQP,GAARO,SACAC,GAAYR,GAAZQ,cAOJC,EAAAA,EAAAA,YAAU,WACN+b,IACJ,GAAG,KAEH/b,EAAAA,EAAAA,YAAU,WACM,OAARiU,QAAwBrN,IAARqN,GACF,OAAVI,GACAwH,GAAqBG,UAAUC,EAAAA,IAAa3V,MAAK,SAAArF,GAC7CqT,EAASrT,EAAKib,OAClB,IAEJ3H,GAAY,KAEZjT,QAAQC,IAAI,kBAAmB0S,GAC/BK,EAASL,EAAMkI,YACfvH,GAAcX,EAAMmI,OACpB9C,GAAerF,EAAMoI,cACrB9H,EAA6B,UAAjBN,EAAMO,QAClBwB,GAAoB/B,EAAMqI,mBAC1B9F,GAAqBvC,EAAMsI,aAE3B7D,GAA+B,aAAjBzE,EAAMO,QAA8C,cAArBP,EAAMuI,YACnDzH,GAAOhI,OAAOkH,EAAMwI,WACpBzH,GAAgBjI,OAAOkH,EAAMyI,YAC7B/R,GAAsBoC,OAAOkH,EAAM0I,sBAEnCC,GAAgB3I,EAAM4I,UACtBhd,GAAM,CACF,MAASoU,EAAM6I,MACf,SAAY7I,EAAM4I,SAClB,cAAiB5I,EAAM8I,cACvB,eAAkB9I,EAAM+I,eACxB,kBAAqB/I,EAAMqI,oBAGvC,GAAG,CAACrI,IAIJ,IAAMpC,GAAY,WACdhS,GAAM,CACF,kBAAqB,SACrB,MAAS,GACT,SAAY,GACZ,eAAkB,GAClB,cAAiB,IAEzB,EACMod,GAAmB,SAAAhL,GAQrB,MAPY,CACR5D,WAAY4D,EAAK5D,WACjBd,IAAK0E,EAAK1E,IACVC,gBAAiByE,EAAKzE,gBACtBF,YAAa2E,EAAK3E,YAClB4P,UAAWjL,EAAKiL,UAGxB,EA4BMC,GAAkB,SAAAC,GACpB9b,QAAQC,IAAI,oBAAqB6b,GAEjC,IAAIC,EA7BiB,SAAAD,GACrB,IAC0BE,EADtBC,EAAc,GAAGC,GAAAC,EAAAA,EAAAA,GACLjU,IAAU,IAA1B,IAAAgU,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAC,MAA4B,CAAC,IAArB3L,EAAIqL,EAAA7a,MACR8a,EAAYM,KAAKZ,GAAiBhL,GACtC,CAAC,OAAA6L,GAAAN,EAAA3a,EAAAib,EAAA,SAAAN,EAAAO,GAAA,CACD,IAAIC,EAAWrG,GAkBf,MAjBa,CACT,WAActD,EACd,kBAAqB+I,EAASd,kBAC9B,SAAYc,EAASP,SACrB,cAAiBO,EAASL,cAC1B,YAAexG,GACf,eAAkB6G,EAASJ,eAC3B,MAASI,EAASN,MAClB,OAAUtI,EACV,WAAcE,EACd,MAAS6I,EACT,QAAWS,EACX,SAAY/T,GACZ,UAAaC,GACb,oBAAuBQ,GAI/B,CAKiBuT,CAAiBb,GAE9B9b,QAAQC,IAAI,WAAY8b,GACxB,IACQpJ,GAASA,EAAM1W,GACM,aAAlB8f,EAAO7I,OACkB,gBAArBuB,IAA4D,cAAtBsH,EAAOb,WAC5Cb,GAAauC,eAAejK,EAAM1W,GAAI8f,GAAQ/W,MAAK,SAAArF,GAC/CiT,EAAMrN,QAAQC,KAAK,CAAEyI,SAAU,UAAW4O,QAAS,aAAcC,OAAQ,yBAA0BC,KAAM,MAEzGlK,EAAS,kBAAoBF,EAAM1W,GACvC,IAEAoe,GAAa2C,OAAOrC,EAAAA,GAAahI,EAAM1W,GAAI8f,GAAQ/W,MAAK,SAAArF,GACpDiT,EAAMrN,QAAQC,KAAK,CAAEyI,SAAU,UAAW4O,QAAS,aAAcC,OAAQ,yBAA0BC,KAAM,MAEzGlK,EAAS,kBAAoBF,EAAM1W,GACvC,IAGJoe,GAAa4C,OAAOtC,EAAAA,GAAahI,EAAM1W,GAAI8f,GAAQ/W,MAAK,SAAArF,GACpDiT,EAAMrN,QAAQC,KAAK,CAAEyI,SAAU,UAAW4O,QAAS,aAAcC,OAAQ,uBAAwBC,KAAM,MACvGlK,EAAS,SACb,IAGJwH,GAAa6C,OAAOvC,EAAAA,GAAaoB,GAAQ/W,MAAK,SAAArF,GAC1CiT,EAAMrN,QAAQC,KAAK,CAAEyI,SAAU,UAAW4O,QAAS,aAAcC,OAAQ,uBAAwBC,KAAM,MACvGlK,EAAS,SACb,GAER,CACA,MAAO2J,GACHxc,QAAQC,IAAIuc,GACZ5J,EAAMrN,QAAQC,KAAK,CAAEyI,SAAU,QAAS4O,QAAS,QAASC,OAAQ,iCAAkCC,KAAM,KAE9G,CACJ,EAEMI,GAAsB,WAExB,IAAIC,EAGAjC,EAFAkC,EAAQ,EACRzR,EAAmB,EAUvB,OAPA5L,QAAQC,IAAI,iBAAiBiI,IAC7BA,GAAW4D,SAAQ,SAAA6E,GACf0M,GAAS1M,EAAK3E,YAAc2E,EAAK1E,IACjCL,GAAoBH,OAAOkF,EAAK3E,aAAeP,OAAOkF,EAAK1E,KAAOR,OAAOkF,EAAKzE,iBAAmB,GACrG,IACAiP,EAAyCxS,GAAM,KAAnC0U,EAAQzR,GACpBwR,EAAMC,EAAQzR,EAAmBH,OAAO0P,GAAY1P,OAAO7C,IAAgB6C,OAAOrC,IAC3E,CACH,MAASiU,EACT,SAAYzR,EACZ,oBAAuBxC,GACvB,UAAaR,GACb,SAAYuS,EACZ,IAAOiC,EAEf,EAUME,GAAwB,WAC1BxJ,GAAuB,MACvBC,GAAwB,MACxBH,GAA0B,KAC9B,EAEMrE,GAAwB,SAAAxC,GAC1B6G,GAA0B,CAAE,GAAM7G,GACtC,EAMMwQ,GAAwB,eAAA1c,GAAAsL,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAO/K,GAAC,IAAAic,EAAA7d,EAAA8d,EAAAC,EAAAtM,EAAAuM,EAAA,OAAAvR,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAErC,OADI4Q,EAAmBjc,EAAEJ,MACzBuL,EAAAE,KAAA,EACiBhI,GAAegZ,QAAQJ,EAAiBvhB,IAAI,KAAD,EAKR,GALhD0D,EAAI+M,EAAAO,KACRuQ,EAAgC,cAAI7d,EAAKsQ,cACzCuN,EAAwB,MAAI7d,EAAKke,MACjCL,EAA4B,UAAI7d,EAAKoQ,UACrC/P,QAAQC,IAAI,oBAAqBud,GACjCxd,QAAQC,IAAI,qBAAsB4U,IACZ,OAAnBA,IAA8C,WAAnBJ,GAA2B,CAAA/H,EAAAE,KAAA,aAClDsH,GAAmB,CAADxH,EAAAE,KAAA,SACsG,OAAvHgG,EAAMrN,QAAQC,KAAK,CAAEyI,SAAU,OAAQ4O,QAAS,2BAA4BC,OAAQ,oBAAqBC,KAAM,MAAQrQ,EAAAmB,OAAA,kBAI3H7N,QAAQC,IAAI,eAAgBiI,IAAYuV,GAAAtB,EAAAA,EAAAA,GACxBjU,IAAUwE,EAAAC,KAAA,GAAA8Q,EAAArB,IAAA,YAAAsB,EAAAD,EAAApB,KAAAC,KAAC,CAAD5P,EAAAE,KAAA,SAAd,GAAA8Q,EAAAvc,MACA4L,aAAeyQ,EAAiBvhB,GAAE,CAAAyQ,EAAAE,KAAA,SAEd,OADxBgG,EAAMrN,QAAQC,KAAK,CAAEyI,SAAU,OAAQ4O,QAAS,gBAAiBC,OAAQ,wBAAyBC,KAAM,MACxGO,KAAwB5Q,EAAAmB,OAAA,kBAAAnB,EAAAE,KAAA,iBAAAF,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAoR,GAAApR,EAAA,UAAA+Q,EAAAlc,EAAAmL,EAAAoR,IAAA,eAAApR,EAAAC,KAAA,GAAA8Q,EAAAhB,IAAA/P,EAAAqR,OAAA,YAKV,GAAlB3M,EAAiB,EACC,OAAnByD,GAAuB,CAAAnI,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAECyN,GAAa2D,yBAAyB,WAAYR,EAAiBvhB,GAAI4Y,GAAiBoJ,KAAK,KAAD,GAAnH7M,EAAc1E,EAAAO,KAAA,QAGlBsC,GAAsBiO,EAAiBvhB,IAEnC0hB,GAAQhf,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACL6e,GAAgB,IACnB,YAAe/R,OAAO+R,EAAiBK,OACvC,cAAiBpS,OAAO+R,EAAiBvN,eACzC,UAAaxE,OAAO+R,EAAiBzN,WACrC,eAAkBtE,OAAO2F,KAE7BpR,QAAQC,IAAI,2BAA4B0d,GACxC7J,GAAuB6J,GAAUjR,EAAAE,KAAA,iBAEjCgG,EAAMrN,QAAQC,KAAK,CAAEyI,SAAU,OAAQ4O,QAAS,yBAA0BC,OAAQ,0BAA2BC,KAAM,MAAQ,yBAAArQ,EAAAQ,OAAA,GAAAZ,EAAA,0BAElI,gBA5C6Ba,GAAA,OAAAtM,EAAAuM,MAAA,KAAAC,UAAA,KAuDxBiO,GAAkB,SAAC4C,GACrBle,QAAQC,IAAI,4BAA6Bie,GAC1B,OAAZA,QAAgC5Y,IAAZ4Y,GAAqC,KAAZA,GAGhD7D,GAAa8D,iBAAiB,kBAAmBD,GAASlZ,MAAK,SAAArF,GAE3D,GADAK,QAAQC,IAAI,YAAaN,GACtBA,EAAK,CACJ,IAAIye,EAAY3S,OAAO9L,EAAKye,YAAY,EACpCC,EAAY5S,OAAO9L,EAAK0e,YAAY,EAExC/I,GADc8I,EAAYC,EAE9B,CACJ,GACJ,EAEMC,GAAmB,SAAA3N,GACrB3Q,QAAQC,IAAI,qBAAsB0Q,GAClCuE,GAAqBvE,EAAKsK,aAC1BnG,GAAoBnE,GACpB2K,GAAgB3K,EAAKsN,IACzB,EA2CMxD,GAAW,WACblK,KACA+M,KAEAhK,GAAc,IACdwB,GAAoB,MACpBJ,GAAoB,UAGpBJ,GAAgBD,GAAa,EACjC,EAEMkK,GAAW,SAACC,EAAQ1C,GACtB9b,QAAQC,IAAI,aAAcue,EAAQ1C,GAC/B5T,GAAW2E,OAAS,EACnB+F,EAAMrN,QAAQC,KAAK,CAAEyI,SAAU,QAAS4O,QAAS,QAASC,OAAQ,mBAAoBC,KAAM,OAGhGlG,GAAa2H,GACbvH,GAAe6E,GACD,SAAX0C,GACCrL,EAAU,SACV2C,GAAwB,6CACxBJ,GAAwBD,GAAqB,IAC5B,WAAX+I,GACNrL,EAAU,aACVE,EAAa,aACbyC,GAAwB,+CACA,gBAArBrB,GACHuE,GAA6BD,GAA0B,GAEnDrD,GAAwBD,GAAqB,IAEhC,YAAX+I,GACNrL,EAAU,YAENE,EADqB,gBAArBoB,GACa,UAEA,aAEjBqB,GAAwB,gDACxBJ,GAAwBD,GAAqB,IAC7B,mBAAV+I,IACNrL,EAAU,YACVE,EAAa,aACbrT,QAAQC,IAAI,oBAAqB6b,GACjChG,GAAwB,iDACxBJ,GAAwBD,GAAqB,IAErD,EAyDMgJ,GAAmB,WACrBjG,IAAgB,EACpB,EAUMkG,IACFvf,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACIF,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACC,MAAM,KAAKC,KAAK,cAAcT,UAAU,gBAAgBU,QAASif,MACzE5f,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACC,MAAM,MAAMC,KAAK,cAAcT,UAAU,gBAAgBU,QAX/C,WACtBQ,QAAQC,IAAI,wBAAyB0X,IACrC0C,GAAasE,OAAOhE,EAAAA,GAAahI,EAAM1W,GAAI0b,IAAqB3S,MAAK,SAAArF,GACjEiT,EAAMrN,QAAQC,KAAK,CAAEyI,SAAU,UAAW4O,QAAS,aAAcC,OAAQ,0BAA2BC,KAAM,MAC1GlK,EAAS,SACb,GACJ,OAyDMjU,GAAsB,SAAA1C,GACxB,OAAOmC,GAAOnC,KAAS2C,EAAAA,EAAAA,KAAA,SAAOC,UAAU,UAASC,SAAEV,GAAOnC,GAAM8C,SACpE,EAoLM4f,GAA2B,SAAC9P,GAC9B,OACIjQ,EAAAA,EAAAA,KAAAO,EAAAA,SAAA,CAAAL,UACIF,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACE,KAAK,cAAcT,UAAU,oCAAoCU,QAAS,kBAzM/D,SAACsP,GAC5B9O,QAAQC,IAAI,uBAAwB6O,GACpC,IAAI+P,GAAcvQ,EAAAA,EAAAA,GAAOqJ,IACzBkH,EAAeC,OAAOhQ,EAAQ/G,MAAO,GACrC6P,GAAuBiH,EAC3B,CAoMoGE,CAAuBjQ,EAAQ,KAGnI,EAkCA,OAEA3P,EAAAA,EAAAA,MAAA,OAAKL,UAAU,gBAAeC,SAAA,EAC9BF,EAAAA,EAAAA,KAACmgB,EAAAA,EAAK,CAAC3d,IAAKuR,KACZzT,EAAAA,EAAAA,MAAA,OAAKL,UAAU,aAAYC,SAAA,EACrB4T,IAAS9T,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACP,UAAU,oBAAoBQ,MAAM,mBACvCE,QAAS,kBAAMqT,EAAS,SAAS,KACjD1T,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,CAAI,6BAA2BgU,EAAM,IAChCJ,IAAS9T,EAAAA,EAAAA,KAACogB,EAAAA,EAAG,CAAChR,SAAS,UAAU9M,MAAOwR,EAAMO,aA7N/CrU,EAAAA,EAAAA,KAAAO,EAAAA,SAAA,CAAAL,SACCoJ,IAAYtJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UAC/CF,EAAAA,EAAAA,KAAC0E,EAAAA,EAAyB,CAACxB,aAAa,OACpC2B,WAAW,GACXiD,aAAa,QACbnD,eAAgByV,GAChBpX,UAAWqd,EAAAA,GAAeC,QAAQ,iBAClC1b,aAAckQ,GACd3R,WAAY,GAAIC,SAAUsb,GAC1Brb,QAAS,CACL,CAACpB,MAAO,OAAQP,OAAQ,eAAgB4B,kBAAmB,yBAA0B7B,MAAO,SAC5F,CAACQ,MAAO,aAAcP,OAAQ,aAAc4B,kBAAmB,uBAAwB7B,MAAO,SAC9F,CAACQ,MAAO,WAAYP,OAAQ,WAAY4B,kBAAmB,qBAAsB7B,MAAO,SACxF,CAACQ,MAAO,cAAeP,OAAQ,cAAe4B,kBAAmB,wBAAyB7B,MAAO,SACjG,CAACQ,MAAO,gBAAiBP,OAAQ,mBAAoB4B,kBAAmB,6BAA8B7B,MAAO,iBAkN7HzB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UAClCI,EAAAA,EAAAA,MAAA,OAAKL,UAAU,wBAAuBC,SAAA,CAxJ3B,WACf,IAAI3B,GAAW,EAIf,OAHGuV,GAA0B,UAAjBA,EAAMO,SACd9V,GAAW,IAGX+B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACAI,EAAAA,EAAAA,MAAA,OAAKL,UAAU,wBAAuBC,SAAA,CACjC3B,IAAY+B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACTF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,uBACPF,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CAACpF,SAAS,OAAO+D,MAAOwR,EAAMqI,kBAAmB9X,YAAY,cAEzE9F,IAAYyB,EAAAA,EAAAA,KAAC8B,EAAAA,GAAU,CACrBzE,KAAK,oBACLkC,QAASA,GACTwC,OAAQ,SAAAe,GAAA,IAAGb,EAAKa,EAALb,MAAOC,EAAUY,EAAVZ,WAAU,OAC5B5B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAOmC,QAASF,EAAM5E,KAAM4C,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,UAAWpD,GAAO8C,QAASpC,SAAC,uBAChFF,EAAAA,EAAAA,KAACkE,EAAAA,EAAe,CAACjC,MAAOA,EAAOnB,KAAMpD,EAAAA,GACjCyG,eAAgB,SAAC7B,GAAK,OA3Vb,SAAAA,GAC7BoP,KACAuE,GAAoB,MACpBJ,GAAoBvT,GACpB+T,GAAqB,MACrBI,GAAmB,MACnB9W,GAAS,oBAAqB2C,EAClC,CAoVmDie,CAAyBje,EAAM,EAC1DrC,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,YAAaV,EAAWW,UACnD9C,GAAoBkC,EAAM5E,QAC5B,QAGP2C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UACtCF,EAAAA,EAAAA,KAAC8B,EAAAA,GAAU,CACPzE,KAAK,QACLkC,QAASA,GACTwC,OAAQ,SAAA0B,GAAA,IAAGxB,EAAKwB,EAALxB,MAAOC,EAAUuB,EAAVvB,WAAU,OACxB5B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACJF,EAAAA,EAAAA,KAAA,SAAOmC,QAASF,EAAM5E,KAAM4C,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,UAAWpD,GAAO8C,QAASpC,SAAC,WAChFF,EAAAA,EAAAA,KAACiE,EAAAA,EAAa,CAAC1F,SAAUA,EAAU8D,QAASJ,EAAM5E,KAAMiF,MAAOL,EAAMK,MAAOC,SAAUN,EAAMO,IAAMG,SAAU,SAACD,GAAC,OAAKT,EAAMU,SAASD,EAAEkB,OAAOtB,MAAM,EAAErC,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,YAAaV,EAAWW,YAC5L,MAIY,WAArB+S,KAAmCtV,EAAAA,EAAAA,MAAA,OAAKL,UAAU,wBAAuBC,SAAA,EAC3EF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UACtCF,EAAAA,EAAAA,KAAC8B,EAAAA,GAAU,CACPzE,KAAK,iBACLkC,QAASA,GACTgE,MAAO,CAAEkP,SAAU,8BACnB1Q,OAAQ,SAAA2B,GAAA,IAAGzB,EAAKyB,EAALzB,MAAOC,EAAUwB,EAAVxB,WAAU,OACxB5B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACJF,EAAAA,EAAAA,KAAA,SAAOmC,QAASF,EAAM5E,KAAM4C,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,UAAWpD,GAAO8C,QAASpC,SAAC,mBAChFF,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CAACpF,SAAUA,EAAU8D,QAASJ,EAAM5E,KAAMiF,MAAOL,EAAMK,MAAOC,SAAUN,EAAMO,IAAMG,SAAU,SAACD,GAAC,OAAKT,EAAMU,SAASD,EAAEkB,OAAOtB,MAAM,EAAErC,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,YAAaV,EAAWW,UAC9L9C,GAAoBkC,EAAM5E,QACpB,OAGX2C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UACtCF,EAAAA,EAAAA,KAAC8B,EAAAA,GAAU,CACPzE,KAAK,gBACLkC,QAASA,GACTwC,OAAQ,SAAA8B,GAAA,IAAG5B,EAAK4B,EAAL5B,MAAOC,EAAU2B,EAAV3B,WAAU,OACxB5B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACJF,EAAAA,EAAAA,KAAA,SAAOmC,QAASF,EAAM5E,KAAM4C,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,UAAWpD,GAAO8C,QAASpC,SAAC,UAChFF,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CAACpF,SAAUA,EAAU8D,QAASJ,EAAM5E,KAAMiF,MAAOL,EAAMK,MAAOC,SAAUN,EAAMO,IAAMG,SAAU,SAACD,GAAC,OAAKT,EAAMU,SAASD,EAAEkB,OAAOtB,MAAM,EAAErC,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,YAAaV,EAAWW,YACxL,SAIY,WAArB+S,KAAmCtV,EAAAA,EAAAA,MAAA,OAAKL,UAAU,wBAAuBC,SAAA,EAC3EI,EAAAA,EAAAA,MAAA,OAAKL,UAAU,wBAAuBC,SAAA,CACrC3B,IAAY+B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACTF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,cACPF,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CAAC+O,SAAS,OAAOpQ,MAAOwR,EAAM4I,SAAUrY,YAAY,cAEhE9F,IAAYyB,EAAAA,EAAAA,KAAC8B,EAAAA,GAAU,CACrBzE,KAAK,WACLkC,QAASA,GACTgE,MAAO,CAAEkP,SAAU,wBACnB1Q,OAAQ,SAAA+B,GAAA,IAAG7B,EAAK6B,EAAL7B,MAAOC,EAAU4B,EAAV5B,WAAU,OAC5B5B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAOmC,QAASF,EAAM5E,KAAM4C,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,UAAWpD,GAAO8C,QAASpC,SAAC,eAChFF,EAAAA,EAAAA,KAAC+C,EAAAA,EAAgB,CAACd,MAAOA,EAAOe,UAAWwd,EAAAA,GACvCtd,aAAa,OACbE,SAAUqc,GACVxf,WAAW2C,EAAAA,EAAAA,IAAW,CAAE,YAAaV,EAAWW,QAChDQ,QAAS,CACL,CAACpB,MAAO,OAAQP,OAAQ,gBAAiB4B,kBAAmB,8BAEnEvD,GAAoBkC,EAAM5E,QAC5B,QAGPiD,EAAAA,EAAAA,MAAA,OAAKL,UAAU,wBAAuBC,SAAA,EAClCF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,kBACPF,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CAACrB,MAAO8T,GAAmB7X,UAAU,QAEnD+B,EAAAA,EAAAA,MAAA,OAAKL,UAAU,wBAAuBC,SAAA,EAClCF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,aACPF,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CAACrB,MAAOkU,GAAiBjY,UAAU,YAK7D,CAuDakiB,GA7Ma,WACtB,IAAIC,GAAQ,EACRC,GAAU,EACVC,GAAW,EACXC,GAAuB,EAa3B,OAZG/M,IACC4M,GAAQ,EACY,UAAjB5M,EAAMO,OACLsM,GAAU,EACa,aAAjB7M,EAAMO,SACU,gBAAnBuB,IAAyD,YAArB9B,EAAMuI,WACzCwE,GAAuB,EAEvBD,GAAW,KAKvBtgB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,EACMwgB,GAASC,KAAY3gB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UACzDF,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACuS,KAAK,SAAStS,MAAM,QAAQR,UAAU,qCAC1CU,QAAS,kBAAMib,IAAU,OAG/B+E,GAAWE,KAAyB7gB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UACxEF,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACuS,KAAK,SAAStS,MAAM,eAAeR,UAAU,oCACjDU,QAASf,IAAa,SAACiB,GAAC,OAAK6e,GAAS,SAAU7e,EAAE,SAGxD6f,GAASC,KAAY3gB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UACzDF,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACuS,KAAK,SAAStS,MAAM,aAAaR,UAAU,4BAC/CU,QAASf,IAAa,SAACiB,GAAC,OAAK6e,GAAS,OAAQ7e,EAAE,SAGtD6f,GAASC,KAAY3gB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UACzDF,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACuS,KAAK,SAAStS,MAAM,gBAAgBR,UAAU,yBAClDU,QAASf,IAAa,SAACiB,GAAC,OA1Kd,SAAAoc,GAGtB,GAFA9b,QAAQC,IAAI,qBAAsBwU,IAClCjB,GAAasI,GACY,eAArBrH,GAGA8J,GAAS,UAAWzC,QACjB,GAAyB,WAArBrH,GAA+B,CAEtC,IAAI9U,EAAOwd,KACXnd,QAAQC,IAAI,SAAUN,GACtB8W,IAAc9X,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACTgb,IACA,CACC,gBAAmBha,EAAKyd,IACxB,OAAUzd,EAAKyd,OAGvBpd,QAAQC,IAAI,gBAAiBhD,IAC7BiZ,GAAqBD,GAAoB,EAC7C,KAA+B,gBAArBxB,IAEN8J,GAAS,UAAWzC,EAE5B,CAkJ6C6D,CAAkBjgB,EAAE,QAGxDggB,IAAwB7gB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UAC3DF,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACuS,KAAK,SAAStS,MAAM,kBAAkBR,UAAU,yBACpDU,QAASf,IAAa,SAACiB,GAAC,OAhMjB,WACnBM,QAAQC,IAAI,mBAAoBoW,IAChC,IAAI1W,EAAOwd,KACXnd,QAAQC,IAAI,SAAUN,GACtB8W,IAAc9X,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACTgb,IACA,CACC,SAAY,aACZ,OAAUhH,EAAM4I,SAChB,gBAAmB5b,EAAKyd,IACxB,OAAUzd,EAAKyd,OAGvBpd,QAAQC,IAAI,gBAAiBhD,IAC7BiZ,GAAqBD,GAAoB,EAC7C,CAiL6C2G,EAAiB,QAGrD6C,IAAY5gB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UAC/CF,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACuS,KAAK,SAAStS,MAAM,iBAAiBR,UAAU,yBACnDU,QAASf,IAAa,SAACiB,GA1HA,IAA/BiY,GAAoB9K,OAIxB2L,IAAgB,GAHZ5F,EAAMrN,QAAQC,KAAK,CAAEyI,SAAU,QAAS4O,QAAS,QAASC,OAAQ,4CAA6CC,KAAM,KAyH5D,UAKjE,CA2Ja6C,YAIbzgB,EAAAA,EAAAA,MAAA,OAAKL,UAAU,aAAYC,SAAA,EACvBF,EAAAA,EAAAA,KAACsQ,EAAgB,CACbjH,WAAYA,GACZC,SAAUA,EACVC,WAAYA,GAAYC,aAAc,SAAC1E,GAAE,OA3R3Bkc,EA2R6Clc,EA1R/D3D,QAAQC,IAAI,yBAA0B4f,GACtCrI,GAAsBqI,QACtBzH,IAAoB,SAACD,GAAgB,OAAKA,EAAmB,CAAC,IAH7C,IAAC0H,CA2RgD,EAC9DzQ,aAAc,SAACuB,GAAI,OA1cN,SAAAA,GACjB,IAAImP,GAASxR,EAAAA,EAAAA,GAAOpG,IACpByI,EAAY,MAAIzI,GAAW2E,OAC3BiT,EAAUvD,KAAK5L,GACf2C,GAAcwM,EAClB,CAqcgC1Q,CAAauB,EAAK,EAC1CtB,gBAAiB,SAACsB,EAAM5I,GAAK,OApcb,SAAC4I,EAAMN,GAC3B,IAAIyP,GAASxR,EAAAA,EAAAA,GAAOpG,IACpByI,EAAY,MAAIN,EAChByP,EAAUzP,GAAqBM,EAC/B2C,GAAcwM,EAClB,CA+b0CzQ,CAAgBsB,EAAM5I,EAAM,EAC9DuH,gBAAiB,SAACvH,GAAK,OA9bP,SAACA,GACrB,IAAI+X,GAASxR,EAAAA,EAAAA,GAAOpG,IACpB4X,EAAUhB,OAAO/W,EAAO,GAExB+X,EAAUhU,SAAQ,SAAC6E,EAAM5I,GACrB4I,EAAY,MAAI5I,CACpB,IACAuL,GAAcwM,EAClB,CAsboCxQ,CAAgBvH,EAAM,EAClDyH,wBAAyB,WAhiB7B8N,IAgiB4D,EACxD/N,sBAAuB,SAACtT,GAAE,OAAKsT,GAAsBtT,EAAG,EACxDwH,aAAcoQ,GACdrL,YAAa,SAACrH,GAAK,OAAKsS,GAAOtS,EAAM,EACrCsH,qBAAsB,SAACtH,GAAK,OAAKuS,GAAgBvS,EAAM,EACvDuH,2BAA4B,SAACvH,GAAK,OAAKkI,GAAsBlI,EAAM,EACnEwH,SAAarD,IAARqN,EAAkB,EAAEA,EAAMwI,SAC/BvS,kBAAsBtD,IAARqN,EAAkB,EAAEA,EAAMyI,UACxCvS,iBAAqBvD,IAARqN,EAAkB,EAAEA,EAAM0I,uBAG3Cxc,EAAAA,EAAAA,KAACkhB,EAAAA,EAAa,CACV/gB,QAAS6W,GACT7Y,QAASyY,GACTuK,UAlce,WAEL,WADDpJ,GAETyD,GAAa4F,OAAOtF,EAAAA,GAAahI,EAAM1W,GAAI0c,IAAY3T,MAAK,SAAArF,GACxDiT,EAAMrN,QAAQC,KAAK,CAAEyI,SAAU,UAAW4O,QAAS,aAAcC,OAAQ,yBAA0BC,KAAM,KAE7G,KAEA/c,QAAQC,IAAI,mBAAoB2W,GAAWI,IAE3C6E,GADe7E,IAGvB,KAybInY,EAAAA,EAAAA,KAACqhB,EAAAA,EAAa,CACVljB,QAASiZ,GACThZ,YAAaA,GACbG,SAA6B,WAAnBqX,GACVvX,kBA3VkB,SAACyC,GACvBK,QAAQC,IAAI,oBAAqBN,GACjC2W,GAAe3W,GAEX4e,GADoB,gBAArB9J,GACU,kBAEA,UAFmBlB,GAIpC,KAsVI1U,EAAAA,EAAAA,KAACshB,EAAqB,CAClBnjB,QAAS+b,GACThH,cAAe,SAACpS,GAAI,OA1REuS,EA0RyBvS,EAzRnDK,QAAQC,IAAI,0BAA2BiS,GACvC0G,GAAc1G,QACdwD,GAAwBD,GAAqB,GAHnB,IAAAvD,CA0R8B,KAlFpD/S,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,CACC4Y,IAAuBA,GAAoB9K,OAAO,IAAK1N,EAAAA,EAAAA,MAAA,OAAKL,UAAU,SAAQC,SAAA,EAC/EF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kBACJI,EAAAA,EAAAA,MAACwG,EAAAA,EAAS,CAACxE,MAAOwW,GAAqBhJ,aAAW,EAACC,eAAa,EAAClI,YAAU,EAACC,aAAa,QAAO5H,SAAA,EAC5FF,EAAAA,EAAAA,KAAC8I,EAAAA,EAAM,CAACkH,KAAM+P,GAA0B3P,QAAM,EAACrH,YAAa,CAAEf,SAAU,aACxEhI,EAAAA,EAAAA,KAAC8I,EAAAA,EAAM,CAAC7G,MAAM,eAAeP,OAAO,eAAe0H,UAAQ,KAC3DpJ,EAAAA,EAAAA,KAAC8I,EAAAA,EAAM,CAAC7G,MAAM,aAAaP,OAAO,eAAe0H,UAAQ,KACzDpJ,EAAAA,EAAAA,KAAC8I,EAAAA,EAAM,CAAC7G,MAAM,SAASP,OAAO,SAAS0H,UAAQ,UAItD8P,IAAeA,GAAYlL,OAAO,IAAK1N,EAAAA,EAAAA,MAAA,OAAKL,UAAU,SAAQC,SAAA,EAC3DF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,qBACJI,EAAAA,EAAAA,MAACwG,EAAAA,EAAS,CAACxE,MAAO4W,GAAapJ,aAAW,EAACC,eAAa,EAAClI,YAAU,EAACC,aAAa,QAAO5H,SAAA,EACpFF,EAAAA,EAAAA,KAAC8I,EAAAA,EAAM,CAAC7G,MAAM,eAAeP,OAAO,eAAe0H,UAAQ,KAC3DpJ,EAAAA,EAAAA,KAAC8I,EAAAA,EAAM,CAAC7G,MAAM,aAAaP,OAAO,eAAe0H,UAAQ,KACzDpJ,EAAAA,EAAAA,KAAC8I,EAAAA,EAAM,CAAC7G,MAAM,SAASP,OAAO,SAAS0H,UAAQ,KAC/CpJ,EAAAA,EAAAA,KAAC8I,EAAAA,EAAM,CAAC7G,MAAM,aAAaP,OAAO,gBAAgB0H,UAAQ,WAGlEpJ,EAAAA,EAAAA,KAACuhB,EAAAA,EAAgB,CACbpjB,QAASmb,GACTZ,mBAAoBA,GACpB8I,gBAAiB,SAAC1c,GAAE,OAxPJ,SAAC2c,GACrBtgB,QAAQC,IAAI,yBAA0BqgB,GAEtCA,EAAkB,MAAI3I,GAAoB9K,OAE1CyT,EAAuB,WAAI,IAAIC,KAE/B,IAAI,IAAIhU,EAAE,EAAGA,EAAEoL,GAAoB9K,OAAQN,IACvC,GAAGoL,GAAoBpL,GAAGQ,aAAeuT,EAAWvT,WAEhD,YADA6F,EAAMrN,QAAQC,KAAK,CAAEyI,SAAU,QAAS4O,QAAS,QAASC,OAAQ,sBAAuBC,KAAM,MAKvGnF,GAAuB,GAAD3G,QAAA3C,EAAAA,EAAAA,GAAKqJ,IAAmB,CAAE2I,IACpD,CAyOiCD,CAAgB1c,EAAG,QAiEhD9E,EAAAA,EAAAA,KAACsB,EAAAA,EAAM,CAACC,QAASmY,GAAclY,MAAO,CAAEC,MAAO,SAAWC,OAAO,UAAUC,OAAK,EAACC,OAAQie,GAAoBhe,OAAQ+d,GAAiB1f,UAClII,EAAAA,EAAAA,MAAA,OAAKL,UAAU,iDAAgDC,SAAA,EAC3DF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,kCAAkCuB,MAAO,CAAE6O,SAAU,WAClErQ,EAAAA,EAAAA,KAAA,QAAAE,SAAM,8DAQtB,IAEA,G,mGC53BA,SAASyhB,EAAQC,GAGf,OAAOD,EAAU,mBAAqBE,QAAU,iBAAmBA,OAAOC,SAAW,SAAUF,GAC7F,cAAcA,CAChB,EAAI,SAAUA,GACZ,OAAOA,GAAO,mBAAqBC,QAAUD,EAAIG,cAAgBF,QAAUD,IAAQC,OAAOG,UAAY,gBAAkBJ,CAC1H,EAAGD,EAAQC,EACb,CAaA,SAASK,EAAeC,GACtB,IAAIC,EAZN,SAAsBC,EAAOC,GAC3B,GAAuB,WAAnBV,EAAQS,IAAiC,OAAVA,EAAgB,OAAOA,EAC1D,IAAIE,EAAOF,EAAMP,OAAOU,aACxB,QAAa9b,IAAT6b,EAAoB,CACtB,IAAIE,EAAMF,EAAKG,KAAKL,EAAOC,GAAQ,WACnC,GAAqB,WAAjBV,EAAQa,GAAmB,OAAOA,EACtC,MAAM,IAAIE,UAAU,+CACtB,CACA,OAAiB,WAATL,EAAoBM,OAAS/V,QAAQwV,EAC/C,CAGYQ,CAAaV,EAAK,UAC5B,MAAwB,WAAjBP,EAAQQ,GAAoBA,EAAMQ,OAAOR,EAClD,CAiBA,IAAIU,EAAYC,EAAAA,EAAcC,OAAO,CACnCC,aAAc,CACZC,OAAQ,QACR3gB,MAAO,KACP8M,SAAU,KACVD,KAAM,KACN3N,MAAO,KACPvB,UAAW,KACXC,cAAUuG,KAIVyI,EAAqB2E,EAAAA,KAAyBA,EAAAA,YAAiB,SAAUqP,EAAS1gB,GACpF,IA5BuBof,EAAKO,EAAK7f,EA4B7B6gB,EAAUtP,EAAAA,WAAiBuP,EAAAA,IAC3BC,EAAQR,EAAUS,SAASJ,EAASC,GAItCI,EAH0BV,EAAUW,YAAY,CAC9CH,MAAOA,IAEmBE,IAC1BE,EAAa5P,EAAAA,OAAa,MAC1B5T,GAAY2C,EAAAA,EAAAA,IAAW,uBAnCJgf,EAmC2C,CAChE,oBAAqB8B,EAAAA,GAAYC,WAAWN,EAAM/gB,QAAyC,IAA/BqgB,OAAOU,EAAM/gB,OAAO0L,OAChF,cAAe0V,EAAAA,GAAYE,QAAQP,EAAM/gB,OACzC,aAA6B,UAAf+gB,EAAMlU,KACpB,aAA6B,WAAfkU,EAAMlU,MAvCMgT,EAwCzB,WAAW/P,OAAOiR,EAAMjU,UAxCM9M,EAwCwB,OAAnB+gB,EAAMjU,UAvC5C+S,EAAMF,EAAeE,MACVP,EACTiC,OAAOC,eAAelC,EAAKO,EAAK,CAC9B7f,MAAOA,EACPyhB,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZrC,EAAIO,GAAO7f,EAENsf,GA4ByDyB,EAAMpjB,WACtE4T,EAAAA,oBAA0BrR,GAAK,WAC7B,MAAO,CACL6gB,MAAOA,EACPa,WAAY,WACV,OAAOT,EAAW/c,OACpB,EAEJ,IACA,IAAIyd,GAAYC,EAAAA,EAAAA,IAAW,CACzB5hB,IAAKihB,EACLjiB,MAAO6hB,EAAM7hB,MACbvB,UAAWA,GACV4iB,EAAUwB,cAAchB,GAAQE,EAAI,SACvC,OAAoB1P,EAAAA,cAAoB,OAAQsQ,EAAWd,EAAM/gB,MACnE,KACA4M,EAAMoV,YAAc,O,uHChFpB,SAASC,IAYP,OAXAA,EAAWV,OAAOW,OAASX,OAAOW,OAAOC,OAAS,SAAU7gB,GAC1D,IAAK,IAAI8J,EAAI,EAAGA,EAAIc,UAAUR,OAAQN,IAAK,CACzC,IAAIgX,EAASlW,UAAUd,GACvB,IAAK,IAAIyU,KAAOuC,EACVb,OAAO7B,UAAU2C,eAAelC,KAAKiC,EAAQvC,KAC/Cve,EAAOue,GAAOuC,EAAOvC,GAG3B,CACA,OAAOve,CACT,EACO2gB,EAAShW,MAAMqW,KAAMpW,UAC9B,CAEA,IAAIqW,EAAoB/B,EAAAA,EAAcC,OAAO,CAC3CC,aAAc,CACZC,OAAQ,gBACR6B,YAAY,EACZC,UAAW,KACXC,OAAQ,KACRpe,QAAS,KACTqe,cAAe,KACfC,QAAS,KACTC,UAAW,KACXC,QAAS,KACTC,QAAS,KACTC,QAAS,KACTC,eAAgB,KAChBC,cAAc,EACdtlB,cAAUuG,KAIVxC,EAA6B4P,EAAAA,KAAyBA,EAAAA,YAAiB,SAAUqP,EAAS1gB,GAC5F,IAAI2gB,EAAUtP,EAAAA,WAAiBuP,EAAAA,IAC3BC,EAAQwB,EAAkBvB,SAASJ,EAASC,GAC5CM,EAAa5P,EAAAA,OAAarR,GAC1BijB,EAAqB5R,EAAAA,OAAa,GAIpC0P,EAH0BsB,EAAkBrB,YAAY,CACtDH,MAAOA,IAEmBE,IA6C1BmC,EAAS,SAAgBC,GAC3B,IAAIC,EAAUnC,EAAW/c,QACrBkf,GAAWC,EAAAA,GAAWC,UAAUF,KAC7BH,EAAmB/e,UACtB+e,EAAmB/e,QAAUkf,EAAQ9d,aACrC8d,EAAQpkB,MAAMukB,SAAW,WAEvBN,EAAmB/e,UAAYkf,EAAQ9d,cAAgB6d,KACzDC,EAAQpkB,MAAMwkB,OAAS,GACvBJ,EAAQpkB,MAAMwkB,OAASJ,EAAQ9d,aAAe,KAC1Cme,WAAWL,EAAQpkB,MAAMwkB,SAAWC,WAAWL,EAAQpkB,MAAM0kB,YAC/DN,EAAQpkB,MAAM2kB,UAAY,SAC1BP,EAAQpkB,MAAMwkB,OAASJ,EAAQpkB,MAAM0kB,WAErCN,EAAQpkB,MAAMukB,SAAW,SAE3BN,EAAmB/e,QAAUkf,EAAQ9d,cAG3C,EACA+L,EAAAA,WAAgB,WACd6P,EAAAA,GAAY0C,aAAa3C,EAAYjhB,EACvC,GAAG,CAACihB,EAAYjhB,IAChBqR,EAAAA,WAAgB,WACVwP,EAAMyB,YACRY,GAAO,EAEX,GAAG,CAACrC,EAAMyB,aACV,IAAIuB,EAAWxS,EAAAA,SAAc,WAC3B,OAAO6P,EAAAA,GAAYC,WAAWN,EAAM/gB,QAAUohB,EAAAA,GAAYC,WAAWN,EAAMiD,aAC7E,GAAG,CAACjD,EAAM/gB,MAAO+gB,EAAMiD,eACnBC,EAAa7C,EAAAA,GAAYC,WAAWN,EAAMiC,SAC1CrlB,GAAY2C,EAAAA,EAAAA,IAAW,0CAA2C,CACpE,aAAcygB,EAAMziB,SACpB,WAAYylB,EACZ,4BAA6BhD,EAAMyB,YAClCzB,EAAMpjB,WACLkkB,GAAYC,EAAAA,EAAAA,IAAW,CACzB5hB,IAAKihB,EACLxjB,UAAWA,EACX2G,QApFY,SAAiBO,GACzBkc,EAAMyB,YACRY,IAEFrC,EAAMzc,SAAWyc,EAAMzc,QAAQO,EACjC,EAgFE6d,OA/EW,SAAgB7d,GACvBkc,EAAMyB,YACRY,IAEFrC,EAAM2B,QAAU3B,EAAM2B,OAAO7d,EAC/B,EA2EEie,QA1EY,SAAiBje,GACzBkc,EAAMyB,YACRY,IAEFrC,EAAM+B,SAAW/B,EAAM+B,QAAQje,EACjC,EAsEEge,UArEc,SAAmBhe,GACjCkc,EAAM8B,WAAa9B,EAAM8B,UAAUhe,GAC/Bkc,EAAM0B,WACRyB,EAAAA,EAAUC,WAAWtf,EAAOkc,EAAM0B,UAAW1B,EAAMmC,aAEvD,EAiEEP,cAhEkB,SAAuB9d,GACzCkc,EAAM4B,eAAiB5B,EAAM4B,cAAc9d,GACvCkc,EAAM0B,WACRyB,EAAAA,EAAUvB,cAAc9d,EAAOkc,EAAM0B,UAAW1B,EAAMmC,aAE1D,EA4DEN,QArDY,SAAiB/d,GAC7B,IAAIvD,EAASuD,EAAMvD,OACfyf,EAAMyB,YACRY,EAAOhC,EAAAA,GAAYE,QAAQhgB,EAAOtB,QAEpC+gB,EAAM6B,SAAW7B,EAAM6B,QAAQ/d,GAC/Buc,EAAAA,GAAYC,WAAW/f,EAAOtB,OAASujB,EAAAA,GAAWa,SAAS9iB,EAAQ,YAAciiB,EAAAA,GAAWc,YAAY/iB,EAAQ,WAClH,EA+CEyhB,QA5DY,SAAiBle,GAC7Bkc,EAAMgC,SAAWhC,EAAMgC,QAAQle,GAC3Bkc,EAAM0B,WACRyB,EAAAA,EAAUnB,QAAQle,EAAOkc,EAAM0B,UAAW1B,EAAMmC,aAEpD,GAwDGX,EAAkBR,cAAchB,GAAQE,EAAI,SAC/C,OAAoB1P,EAAAA,cAAoBA,EAAAA,SAAgB,KAAmBA,EAAAA,cAAoB,WAAYsQ,GAAYoC,GAA2B1S,EAAAA,cAAoB+S,EAAAA,EAASrC,EAAS,CACtL3gB,OAAQ6f,EACRoD,QAASxD,EAAMiC,SACdjC,EAAMkC,eAAgB,CACvBuB,GAAIvD,EAAI,cAEZ,KACAtf,EAAcqgB,YAAc,e,mGChJ5B,SAAS3C,EAAQC,GAGf,OAAOD,EAAU,mBAAqBE,QAAU,iBAAmBA,OAAOC,SAAW,SAAUF,GAC7F,cAAcA,CAChB,EAAI,SAAUA,GACZ,OAAOA,GAAO,mBAAqBC,QAAUD,EAAIG,cAAgBF,QAAUD,IAAQC,OAAOG,UAAY,gBAAkBJ,CAC1H,EAAGD,EAAQC,EACb,CAaA,SAASK,EAAeC,GACtB,IAAIC,EAZN,SAAsBC,EAAOC,GAC3B,GAAuB,WAAnBV,EAAQS,IAAiC,OAAVA,EAAgB,OAAOA,EAC1D,IAAIE,EAAOF,EAAMP,OAAOU,aACxB,QAAa9b,IAAT6b,EAAoB,CACtB,IAAIE,EAAMF,EAAKG,KAAKL,EAAOC,GAAQ,WACnC,GAAqB,WAAjBV,EAAQa,GAAmB,OAAOA,EACtC,MAAM,IAAIE,UAAU,+CACtB,CACA,OAAiB,WAATL,EAAoBM,OAAS/V,QAAQwV,EAC/C,CAGYQ,CAAaV,EAAK,UAC5B,MAAwB,WAAjBP,EAAQQ,GAAoBA,EAAMQ,OAAOR,EAClD,CAEA,SAAS4E,EAAgBnF,EAAKO,EAAK7f,GAYjC,OAXA6f,EAAMF,EAAeE,MACVP,EACTiC,OAAOC,eAAelC,EAAKO,EAAK,CAC9B7f,MAAOA,EACPyhB,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZrC,EAAIO,GAAO7f,EAENsf,CACT,CAEA,IAAIoF,EAAUlE,EAAAA,EAAcC,OAAO,CACjCC,aAAc,CACZC,OAAQ,MACR3gB,MAAO,KACP8M,SAAU,KACV6X,SAAS,EACTvmB,KAAM,KACNc,MAAO,KACPvB,UAAW,KACXC,cAAUuG,KAId,SAASygB,EAAQC,EAAQC,GAAkB,IAAIC,EAAOxD,OAAOwD,KAAKF,GAAS,GAAItD,OAAOyD,sBAAuB,CAAE,IAAIC,EAAU1D,OAAOyD,sBAAsBH,GAASC,IAAmBG,EAAUA,EAAQpe,QAAO,SAAUqe,GAAO,OAAO3D,OAAO4D,yBAAyBN,EAAQK,GAAKzD,UAAY,KAAKsD,EAAK3J,KAAKnP,MAAM8Y,EAAME,EAAU,CAAE,OAAOF,CAAM,CAEpV,IAAIjH,EAAmBvM,EAAAA,YAAiB,SAAUqP,EAAS1gB,GACzD,IAAIklB,EACAvE,EAAUtP,EAAAA,WAAiBuP,EAAAA,IAC3BC,EAAQ2D,EAAQ1D,SAASJ,EAASC,GAIpCI,EAHyByD,EAAQxD,YAAY,CAC3CH,MAAOA,IAEkBE,IACzBE,EAAa5P,EAAAA,OAAa,MAC1B5T,GAAY2C,EAAAA,EAAAA,IAAW,qBAAwCmkB,EAAlBW,EAAc,CAAC,EAAgC,SAAStV,OAAOiR,EAAMjU,UAA8B,OAAnBiU,EAAMjU,UAAoB2X,EAAgBW,EAAa,gBAAiBrE,EAAM4D,SAAUS,GAAcrE,EAAMpjB,WACzO0nB,GAAYvD,EAAAA,EAAAA,IAAW,CACzBnkB,UAAW,cACVsjB,EAAI,SACH7iB,EAAOknB,EAAAA,GAAUC,WAAWxE,EAAM3iB,KAdxC,SAAuBkD,GAAU,IAAK,IAAI8J,EAAI,EAAGA,EAAIc,UAAUR,OAAQN,IAAK,CAAE,IAAIgX,EAAS,MAAQlW,UAAUd,GAAKc,UAAUd,GAAK,CAAC,EAAGA,EAAI,EAAIwZ,EAAQrD,OAAOa,IAAS,GAAIzX,SAAQ,SAAUkV,GAAO4E,EAAgBnjB,EAAQue,EAAKuC,EAAOvC,GAAO,IAAK0B,OAAOiE,0BAA4BjE,OAAOkE,iBAAiBnkB,EAAQigB,OAAOiE,0BAA0BpD,IAAWwC,EAAQrD,OAAOa,IAASzX,SAAQ,SAAUkV,GAAO0B,OAAOC,eAAelgB,EAAQue,EAAK0B,OAAO4D,yBAAyB/C,EAAQvC,GAAO,GAAI,CAAE,OAAOve,CAAQ,CAc3c9D,CAAc,CAAC,EAAG6nB,GAAY,CACxEtE,MAAOA,IAETxP,EAAAA,oBAA0BrR,GAAK,WAC7B,MAAO,CACL6gB,MAAOA,EACPa,WAAY,WACV,OAAOT,EAAW/c,OACpB,EAEJ,IACA,IAAIyd,GAAYC,EAAAA,EAAAA,IAAW,CACzB5hB,IAAKihB,EACLxjB,UAAWA,EACXuB,MAAO6hB,EAAM7hB,OACZwlB,EAAQ3C,cAAchB,GAAQE,EAAI,SACjCyE,GAAa5D,EAAAA,EAAAA,IAAW,CAC1BnkB,UAAW,eACVsjB,EAAI,UACP,OAAoB1P,EAAAA,cAAoB,OAAQsQ,EAAWzjB,EAAmBmT,EAAAA,cAAoB,OAAQmU,EAAY3E,EAAM/gB,OAAqBuR,EAAAA,cAAoB,OAAQ,KAAMwP,EAAMnjB,UAC3L,IACAkgB,EAAIkE,YAAc,K","sources":["constants/lookupData.js","pages/components/PaymentDialog.js","pages/components/SelectConstData.js","pages/components/SelectMasterDataTableList.js","pages/transactional_data/sales/components/SalesProductDetail.js","pages/transactional_data/sales/components/SalesProductForm.js","pages/components/CancellationFeeDialog.js","pages/transactional_data/sales/Form.js","../node_modules/primereact/badge/badge.esm.js","../node_modules/primereact/inputtextarea/inputtextarea.esm.js","../node_modules/primereact/tag/tag.esm.js"],"sourcesContent":["export const BANK_CASH = [\n    { id: 'BANK', name: 'BANK' },\n    { id: 'CASH', name: 'CASH' }\n];\n\nexport const BLOOD_GROUP = [\n    { id: 'A+', name: 'A+' },\n    { id: 'A-', name: 'A-' },\n    { id: 'B+', name: 'B+' },\n    { id: 'B-', name: 'B-' },\n    { id: 'AB+', name: 'AB+' },\n    { id: 'AB-', name: 'AB-' },\n    { id: 'O+', name: 'O+' },\n    { id: 'O-', name: 'O-' }\n];\n\nexport const CITIES = [\n    { id: 'Dhaka', name: 'Dhaka' },\n    { id: 'Rajshahi', name: 'Rajshahi' },\n    { id: 'Chitagong', name: 'Chitagong' },\n    { id: 'Sylhet', name: 'Sylhet' },\n    { id: 'Khulna', name: 'Khulna' }\n];\n\nexport const CURRENCY = [\n    { id: 'BDT', name: 'BDT' },\n    { id: 'INR', name: 'INR'},\n    { id: 'USD', name: 'USD' },\n    { id: 'EUR', name: 'EUR' },\n    { id: 'GBP', name: 'GBP' },\n    { id: 'AUD', name: 'AUD' },\n    { id: 'CAD', name: 'CAD' },\n];\n\nexport const COLLECTION_TYPES = [\n    { id: 'CASH', name: 'Cash' },\n    { id: 'MFS', name: 'MFS' },\n    { id: 'BANK', name: 'Bank Deposit' }    \n];\n\nexport const PAYMENT_TYPES = [\n    { id: 'CASH', name: 'Cash' },\n    { id: 'MFS', name: 'MFS' },\n    { id: 'BANK', name: 'Bank Deposit' }    \n];\n\n\nexport const CUSTOMER_CATEGORY = [\n    { id: 'WALKIN', name: 'Walk-in' },\n    { id: 'REGISTERED', name: 'Registered' },\n    { id: 'CONDITIONAL', name: 'Conditional' }\n];\n\nexport const ADJUSTMENT_TYPE = [\n    { id: 'ADD', name: 'Addition' },\n    { id: 'REDUCE', name: 'Reduction' }\n];\n\nexport const DISTRICT = [\n    { id: 'DHAKA', name: 'DHAKA' },\n    { id: 'CUMILLA', name: 'CUMILLA' },\n    { id: 'KHULNA', name: 'KHULNA' }\n];\n\nexport const GENDER = [\n    { id: 'MALE', name: 'Male' },\n    { id: 'FEMALE', name: 'Female' }\n];\n\nexport const EMPLOYMENT_STATUS = [\n    { id: 'PART-TIMER', name: 'Part-Timer' },\n    { id: 'CONTRACTUAL', name: 'Contractual' },\n    { id: 'PERMANENT', name: 'Permanent' }\n];\n\nexport const MARITAL_STATUS = [\n    { id: 'MARRIED', name: 'Married' },\n    { id: 'DIVORCED', name: 'Divorced' },\n    { id: 'SEPARATED', name: 'Separated' },\n    { id: 'WIDOWED', name: 'Widowed' },\n    { id: 'NEVERMARRIED', name: 'Never Married' }\n];\n\nexport const MEASUREMENT_UNITS = [\n    { id: 'PCS', name: 'PCS' },\n    { id: 'DZN', name: 'DZN' },\n    { id: 'PKT', name: 'PKT' },\n    { id: 'SET', name: 'SET' }\n];\n\nexport const PRODUCT_STATUS = [\n    { id: 'Active', name: 'Active' },\n    { id: 'Inactive', name: 'Inactive' },\n    { id: 'Draft', name: 'Draft' }\n];\n\nexport const RELIGION = [\n    { id: 'MUSLIM', name: 'Muslim' },\n    { id: 'HINDU', name: 'Hindu' },\n    { id: 'CHRISTIAN', name: 'Christian' },\n    { id: 'BUDDHA', name: 'Buddha' },\n    { id: 'OTHER', name: 'Other' }    \n];\n","import React, { useEffect, useState } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { InputText } from 'primereact/inputtext';\nimport { InputNumber } from 'primereact/inputnumber';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Button } from 'primereact/button';\nimport { classNames } from 'primereact/utils';\nimport { Dialog } from 'primereact/dialog';\nimport { Calendar } from 'primereact/calendar';\n\nimport SelectConstData from './SelectConstData';\nimport SelectMasterData from './SelectMasterData';\n\nimport { PAYMENT_TYPES } from '../../constants/lookupData';\nimport { BANK_ACCOUNT_MODEL } from '../../constants/models';\n\nconst PaymentDialog = ( { trigger, initPayment, onPaymnetCallback, readOnly = false }) => {\n\n    const [submitted, setSubmitted] = useState(false);\n    const [paymentDialog, setPaymentDialog] = useState(false);\n    const [bankCash, setBankCash] = useState(\"CASH\");\n\n    const {\n        control,\n        formState: { errors },\n        setValue,\n        reset,\n        handleSubmit\n    } = useForm({\n        defaultValues: initPayment\n    });\n\n    useEffect(() => {\n        if (initPayment) {\n            reset({\n                ...initPayment\n            })\n            // setValue('payment_method', initPayment.payment_method);\n            // setValue('current_balance', initPayment.current_balance);\n            // setValue('amount', initPayment.amount);\n            // setValue('payment_date', initPayment.payment_date);\n        }\n    }, [initPayment]);\n\n    useEffect(() => {\n        if (trigger) {\n            setPaymentDialog(true);\n        }\n    }, [trigger]);\n\n    const getFormErrorMessage = (name) => {\n        return errors[name] && <small className=\"p-error\">{errors[name].message}</small>\n    };\n\n    const hidePaymentDialog = () => {\n        setPaymentDialog(false);\n    };\n\n    const onInputChange = (e) => {\n        const val = (e.target && e.target.value) || 0;\n    };\n\n    const onPaymentSubmit = (data) => {\n        setSubmitted(false);\n        hidePaymentDialog();\n        if(onPaymnetCallback) {\n            let payment = {\n                ...data,\n                ref_id: initPayment.ref_id,\n                ref_type: initPayment.ref_type,\n                payment_type: initPayment.payment_type,\n            }\n            console.log(\"PAYMENT-1:::\", initPayment);\n            console.log(\"PAYMENT-2:::\", data);\n            console.log(\"PAYMENT-3:::\", payment);\n            onPaymnetCallback(payment);\n        }\n    };\n\n    const paymentDialogFooter = (\n        <>\n            <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hidePaymentDialog} />\n            <Button disabled={submitted} label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" \n                onClick={\n                    handleSubmit((d) => onPaymentSubmit(d))\n                }\n            />\n        </>\n    );\n\n    return (\n        <Dialog visible={paymentDialog} style={{ width: '450px' }} header={`Payment`} modal className=\"p-fluid\" footer={paymentDialogFooter} onHide={hidePaymentDialog}>                    \n            <div className=\"p-fluid formgrid grid\">\n                {/* <div className=\"field col-12 md:col-12\">\n                    <Controller\n                        name=\"payment_method\"\n                        control={control}\n                        rules={{ required: 'Payment Type is required.' }}\n                        render={({ field, fieldState }) => (\n                        <>\n                            <label htmlFor={field.name} className={classNames({ 'p-error': errors.value })}>Payment Method</label>\n                            <SelectConstData field={field} data={PAYMENT_TYPES}\n                                onSelectChange={(value) => {console.log(value); setBankCash(value)}}\n                                className={classNames({ 'p-invalid': fieldState.error })} /> \n                            {getFormErrorMessage(field.name)}\n                        </>\n                    )}/>\n                </div> */}\n                <div className=\"field col-12 md:col-12\">\n                <Controller\n                    name=\"current_balance\"\n                    control={control}\n                    // rules={{\n                    //     validate: (value) => (value > 0) || 'Enter a valid amount.'\n                    // }}\n                    render={({ field, fieldState }) => (\n                    <>\n                        <label htmlFor=\"current_balance\">Current Balance*</label>\n                        <InputNumber readOnly={true} inputId={field.name} value={field.value} inputRef={field.ref} \n                            onValueChange={(e) => field.onChange(e)} \n                            className={classNames({ 'p-invalid': fieldState.error })} />\n                        {getFormErrorMessage(field.name)}\n                    </>\n                )}/>\n                </div>\n                <div className=\"grid\">\n                    <div className=\"field col-7 md:col-7\">\n                    <Controller\n                        name=\"bank_account_id\"\n                        control={control}\n                        // rules={{ \n                        //     validate: (value) => ((bankCash === \"CASH\") || (bankCash === \"BANK\" && value !== null) ) || 'Bank Account is required.'\n                        // }}\n                        render={({ field, fieldState }) => (\n                        <>\n                            <label htmlFor={field.name} className={classNames({ 'p-error': errors.value })}>Bank Name*</label>\n                            <SelectMasterData field={field} modelName={BANK_ACCOUNT_MODEL}\n                                displayField=\"accName\" showFields={[\"dtBank_id\", \"accNumber\", \"accName\"]}\n                                onSelect={(e) => {console.log(e);}}\n                                className={classNames({ 'p-invalid': fieldState.error })} \n                                columns={[\n                                    {field: 'dtBank_id_shortname', header: 'Bank Name', filterPlaceholder: 'Filter by Bank Name'}, \n                                    {field: 'accNumber', header: 'Account Number', filterPlaceholder: 'Filter by Account Number'},\n                                    {field: 'accName', header: 'Account Name', filterPlaceholder: 'Filter by Account Name'}\n                                ]} />\n                            {getFormErrorMessage(field.name)}\n                        </>\n                    )}/>\n                    </div>\n                    <div className=\"field col-5 md:col-5\">\n                    <Controller\n                        name=\"bank_amount\"\n                        control={control}\n                        rules={{\n                            validate: (value) => (value > 0) || 'Enter a valid amount.'\n                        }}\n                        render={({ field, fieldState }) => (\n                        <>\n                            <label htmlFor=\"amount\">Bank Amount</label>\n                            <InputNumber inputId={field.name} value={field.value} inputRef={field.ref} \n                                onValueChange={(e) => field.onChange(e)} \n                                className={classNames({ 'p-invalid': fieldState.error })} />\n                            {getFormErrorMessage(field.name)}\n                        </>\n                    )}/>\n                    </div>      \n                </div>\n                <div className='p-fluid formgrid grid'>\n                    <div className=\"field col-12 md:col-7\">\n                    <Controller\n                        name=\"reference\"\n                        control={control}\n                        render={({ field, fieldState }) => (\n                        <>\n                            <label htmlFor=\"reference\">MFS Ref</label>\n                            <InputText inputId={field.name} value={field.value} inputRef={field.ref}  onChange={(e) => field.onChange(e.target.value)} className={classNames({ 'p-invalid': fieldState.error })}/>\n                            {getFormErrorMessage(field.name)}\n                        </>\n                    )}/>\n                    </div>\n                    <div className=\"field col-12 md:col-5\">\n                    <Controller\n                        name=\"mfs_amount\"\n                        control={control}\n                        rules={{\n                            validate: (value) => (value > 0) || 'Enter a valid amount.'\n                        }}\n                        render={({ field, fieldState }) => (\n                        <>\n                            <label htmlFor=\"amount\">MFS Amount</label>\n                            <InputNumber inputId={field.name} value={field.value} inputRef={field.ref} \n                                onValueChange={(e) => field.onChange(e)} \n                                className={classNames({ 'p-invalid': fieldState.error })} />\n                            {getFormErrorMessage(field.name)}\n                        </>\n                    )}/>\n                    </div>                            \n\n                </div>\n                <div className=\"field col-12 md:col-12\">\n                <Controller\n                    name=\"cash_amount\"\n                    control={control}\n                    rules={{\n                        validate: (value) => (value > 0) || 'Enter a valid amount.'\n                    }}\n                    render={({ field, fieldState }) => (\n                    <>\n                        <label htmlFor=\"amount\">Cash Amount</label>\n                        <InputNumber inputId={field.name} value={field.value} inputRef={field.ref} \n                            onValueChange={(e) => field.onChange(e)} \n                            className={classNames({ 'p-invalid': fieldState.error })} />\n                        {getFormErrorMessage(field.name)}\n                    </>\n                )}/>\n                </div>                            \n                <div className=\"field col-12 md:col-12\">\n                <Controller\n                    name=\"amount\"\n                    control={control}\n                    rules={{\n                        validate: (value) => (value > 0) || 'Enter a valid amount.'\n                    }}\n                    render={({ field, fieldState }) => (\n                    <>\n                        <label htmlFor=\"amount\">Pay Amount*</label>\n                        <InputNumber readOnly={readOnly} inputId={field.name} value={field.value} inputRef={field.ref} \n                            onValueChange={(e) => field.onChange(e)} \n                            className={classNames({ 'p-invalid': fieldState.error })} />\n                        {getFormErrorMessage(field.name)}\n                    </>\n                )}/>\n                </div>                            \n                <div className=\"field col-12 md:col-12\">\n                <Controller\n                    name=\"remarks\"\n                    control={control}\n                    render={({ field, fieldState }) => (\n                    <>\n                        <label htmlFor=\"remarks\">Remarks*</label>\n                        <InputTextarea inputId={field.name} value={field.value} inputRef={field.ref}  onChange={(e) => field.onChange(e.target.value)} className={classNames({ 'p-invalid': fieldState.error })}/>\n                        {getFormErrorMessage(field.name)}\n                    </>\n                )}/>\n                </div>\n            </div>\n        </Dialog>\n    );\n}\n                     \nexport default PaymentDialog;","import React, { useEffect } from \"react\";\nimport { Dropdown } from 'primereact/dropdown';\n\nexport default function SelectConstData( { field, className, data, onSelectChange, placeholder = \"\" }) {\n\n    const onChange = (e) => {\n        field.onChange(e.value);\n        console.log(e.value);\n        if(onSelectChange){\n            onSelectChange(e.value);\n        }\n    }\n\n    return (\n        <Dropdown value={field.value} onChange={(e) => onChange(e)} \n            options={data} optionValue=\"id\" optionLabel=\"name\" placeholder={placeholder}\n            className={className} />\n    )\n}\n        ","import React, { useState, useRef, useEffect } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { InputText } from 'primereact/inputtext';\n\nimport { ProductService } from '../../services/ProductService';\n\nexport default function SelectMasterDataTableList({ defaultFilters, selectedItem, fieldValue, onSelect, modelName, columns, showFields=[]}) {\n\n    const dt = useRef(null);\n    const op = useRef(null);\n\n    const [loading, setLoading] = useState(false);\n    const [globalFilterValue, setGlobalFilterValue] = useState('');\n    const [totalRecords, setTotalRecords] = useState(0);\n    const [lazyParams, setLazyParams] = useState(defaultFilters);\n    const [tmpData, setTmpData] = useState([]);\n    // const [selectedRow, setSelectedRow] = useState(selectedItem);\n\n    const productService = new ProductService();\n\n    \n    const loadLazyData = () => {\n        setLoading(true);\n\n        productService.getAll(lazyParams).then(data => {\n        // productService.getAll({ params: JSON.stringify(lazyParams) }).then(data => {\n            console.log(data)\n            setTotalRecords(data.total);\n            setTmpData(data.rows);\n            setLoading(false);\n        });\n    }\n\n    useEffect(() => {\n        initFilters();\n    }, []);\n\n    useEffect(() => {\n        loadLazyData();\n    }, [lazyParams]);\n\n    const initFilters = () => {\n        setLazyParams(defaultFilters);\n        setGlobalFilterValue('');\n    };\n\n    const onPage = (event) => {\n        let _lazyParams = { ...lazyParams, ...event };\n        setLazyParams(_lazyParams);\n    }\n\n    const onSort = (event) => {\n        let _lazyParams = { ...lazyParams, ...event };\n        setLazyParams(_lazyParams);\n    }\n\n    const onFilter = (event) => {\n        let _lazyParams = { ...lazyParams, ...event };\n        _lazyParams['first'] = 0;\n        setLazyParams(_lazyParams);\n    }\n\n    const onGlobalFilterChange = (e) => {\n        let _lazyParams = { ...lazyParams };\n        // console.log(_lazyParams);\n\n        const value = e.target.value;\n        \n        setGlobalFilterValue(value);\n\n        if(value === null || value === undefined) {\n            return;\n        }\n\n        _lazyParams['filters']['global'].value = value;\n        _lazyParams['first'] = 0;\n        setLazyParams(_lazyParams);\n    };\n\n    const onSelection = (e) => {\n        if(op.current!==null && op !== undefined && op !== null){\n            op.current.hide();\n        }\n        setGlobalFilterValue('');\n        onSelect(e)\n    }\n\n    const isSelectable = (data) => data.id !== fieldValue;\n\n    const isRowSelectable = (event) => (event.data ? isSelectable(event.data) : true);\n\n    const rowClassName = (data) => (isSelectable(data) ? '' : 'p-disabled');\n\n    return (\n        <div style={{minHeight: '30rem'}}>\n            <span className=\"p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText value={globalFilterValue} onChange={onGlobalFilterChange} \n                    onClick={(e) => {op.current.show(e)}}\n                    onFocus={(e) => {e.target.select()}}\n                    placeholder=\"Search\" />\n            </span>\n                <DataTable\n                    ref={dt} value={tmpData} dataKey=\"id\"\n                    className=\"datatable-responsive\" responsiveLayout=\"scroll\"\n                    lazy loading={loading} rows={lazyParams.rows}\n                    onSort={onSort} sortField={lazyParams.sortField} sortOrder={lazyParams.sortOrder}\n                    onFilter={onFilter} filterDisplay=\"row\"\n                    filters={lazyParams.filters}\n                    isDataSelectable={isRowSelectable} rowClassName={rowClassName}\n                    columnResizeMode=\"expand\" resizableColumns\n                    scrollable scrollHeight=\"flex\" tableStyle={{ minWidth: '50rem' }}\n                    paginator totalRecords={totalRecords} onPage={onPage} first={lazyParams.first}\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" \n                    rowsPerPageOptions={[5,10, 15]}\n                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n                    globalFilterFields={['name']}\n                    selectionMode=\"single\" selection={selectedItem}\n                    onSelectionChange={(e) => {\n                        if(e.value){\n                            onSelection(e)\n                        }\n                    }} \n\n                    emptyMessage=\"No data found.\"\n                >\n                    <Column selectionMode=\"single\" headerStyle={{ minWidth: '3rem' }}></Column>\n                    {columns.map((col, index) => {\n                        return (\n                            <Column key={index} field={col.field} header={col.header} filter filterPlaceholder={col.filterPlaceholder} sortable headerStyle={{ minWidth: col.minWidth }}></Column>\n                        )\n                    })}\n                </DataTable>\n        </div>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { Column } from 'primereact/column';\nimport { DataTable } from 'primereact/datatable';\nimport { Button } from 'primereact/button';\nimport { InputNumber } from 'primereact/inputnumber';\nimport { Badge } from 'primereact/badge';\nimport { Dialog } from 'primereact/dialog';\n\nimport RProductService from '../../../../services/RProductService';\nimport { all } from 'axios';\nimport { get, set } from 'react-hook-form';\n\nconst SalesProductDetail = ({\n    salesItems, \n    editMode, returnMode, onReturnItem,\n    onEdit, onDelete,\n    onChangeVat, onChangeDeliveryCost, onChangeAdditionalDiscount,\n    vat, deliveryCost, addDiscount\n}) => {\n\n    const [totalPrice, setTotalPrice] = useState(0.00);\n    const [totalDiscount, setTotalDiscount] = useState(0.00);\n    const [totalDiscountedAmount, setTotalDiscountedAmount] = useState(0.00);\n    const [additionalDiscount, setAdditionalDiscount] = useState(0.00);\n    const [totalQuantity, setTotalQuantity] = useState(0);\n    const [vatVal, setVatVal] = useState(0.00);\n    const [delivery, setDelivery] = useState(0.00);\n    const [vatPercentage, setVatPercentage] = useState(0.00);\n    const [netAmount, setNetAmount] = useState(0.00);\n\n    const [salesRows, setSalesRows] = useState([]);\n\n    const [selectedProductIndex, setSelectedProductIndex] = useState(null);\n\n    //// STATE DeleteProductDialog ////\n    const [deleteProductDialog, setDeleteSalesProductDialog] = useState(false);\n\n    useEffect(() => {\n        console.log(\"HELOO:::\",salesItems);\n        if(salesItems) {\n            setVatPercentage(vat);\n            setDelivery(deliveryCost);\n            setAdditionalDiscount(addDiscount);\n            recalculateAllRows(salesItems);\n            calculateTotals(salesItems);\n        }\n    }, [salesItems, vat, deliveryCost]);\n\n    const roundNumber = (num) => {\n        return Math.round((num + Number.EPSILON) * 100) / 100;\n    };\n\n    const onVATChange = (vatPercentage) => {\n        setVatPercentage(vatPercentage);\n        let newSales = [...salesItems];\n        calculateTotals(newSales);\n        onChangeVat(vatPercentage);\n    };\n\n    const onDeliveryCostChange = (deliveryCost) => {\n        setDelivery(deliveryCost);\n        let newSales = [...salesItems];\n        calculateTotals(newSales);\n        onChangeDeliveryCost(deliveryCost);\n    };\n\n    const onDiscountChange = (discount) => {\n        setTotalDiscountedAmount(totalDiscount + discount);\n        setAdditionalDiscount(discount);\n        let newSales = [...salesItems];\n        calculateTotals(newSales);\n        onChangeAdditionalDiscount(discount);        \n    };\n\n    const calculateTotals = (allsales) => {\n        let total = 0.00;\n        let discount = 0.00;\n        let discountedAmount = 0.00;\n        let quantity = 0;\n        let vat = 0.00;\n        let netAmount = 0.00;\n        allsales.forEach(sale => {\n            console.log(\"ALLSALES::\",sale);\n            total += Number(sale.trade_price) * Number(sale.qty);\n            discountedAmount += Number(sale.trade_price) * Number(sale.qty) * Number(sale.discount_profit) / 100;\n            quantity += Number(sale.qty);\n        });\n        vat = (total - discountedAmount - additionalDiscount) * (vatPercentage / 100);\n        netAmount = total - discountedAmount - additionalDiscount + vat + delivery;\n        setTotalPrice(total);\n        setTotalDiscount(discountedAmount);\n        setTotalDiscountedAmount(discountedAmount + additionalDiscount);\n        setTotalQuantity(quantity);\n        setNetAmount(netAmount);\n        setVatVal(vat);\n    };\n\n    const recalculateAllRows = async (allsales) => {\n        if(allsales && allsales.length > 0) {\n            for(let i=0; i<allsales.length; i++) {\n                allsales[i].product_name = await getProductName(allsales[i].product_id);\n                let trade_price = roundNumber(Number(allsales[i].trade_price));\n                let qty = roundNumber(Number(allsales[i].qty));\n                let discount_profit = roundNumber(Number(allsales[i].discount_profit));\n                let discountedAmount = roundNumber(trade_price * qty * discount_profit / 100);\n                let netPrice = roundNumber(trade_price * qty - discountedAmount);\n                allsales[i].totalPrice = roundNumber(trade_price * qty);\n                allsales[i].discountedAmount = discountedAmount;\n                allsales[i].netPrice = netPrice;\n            }\n        }\n        setSalesRows(allsales);\n    };\n    const hideDeleteSalesProductDialog = () => {\n        setSelectedProductIndex(null);\n        setDeleteSalesProductDialog(false);\n    };\n\n    const removeItem = () => {\n        onDelete(selectedProductIndex);\n        setDeleteSalesProductDialog(false);\n    };\n\n    const actionBodyTemplate = (rowData) => {\n        let returnFlg = returnMode? rowData.qty - rowData.return_qty > 0 : false;\n        return (\n            <>\n                {editMode && <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-success mr-2\" onClick={() => onEdit(rowData)} />}\n                {editMode && <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => onDelete(rowData)} />}\n                {returnFlg && <Button icon=\"pi pi-minus\" className=\"p-button-rounded p-button-warning\" onClick={() => onReturnItem(rowData)} />}\n            </>\n        );\n    };\n\n    const confirmDeleteSalesProduct = item => {\n        setSelectedProductIndex(item.index);\n        setDeleteSalesProductDialog(true);\n    };\n\n    const deleteProductDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteSalesProductDialog} />\n            <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={removeItem} />\n        </>\n    );\n\n    const getProductName = async (product_id) => {\n\n        let product = await RProductService.getProductById(product_id);\n        return product ? product.name : \"\";\n    }\n\n    return (\n        <>\n            <table  className=\"col-12\"><tbody>\n                <tr>\n                    <td><b>Total Quantity:</b></td><td>{salesItems ? salesItems.length : 0}</td>\n                    <td><b>Gross Amount:</b></td><td>{roundNumber(totalPrice)}</td>\n                    <td><b>Total Discount :</b></td><td>{roundNumber(totalDiscountedAmount)}</td>                \n                    <td><b>Net Amount:</b></td><td><Badge value={roundNumber(netAmount)} size=\"large\" severity=\"success\"></Badge></td>\n                </tr><tr>\n                    <td class=\"vatInput\"><b>Vat %</b>\n                        <InputNumber \n                            readOnly={!editMode}\n                            value={vat}\n                            placeholder=\"VAT %\"\n                            max={100} min={0}\n                            className=\"mx-2\"\n                            style={{\"width\": \"fit-content(20em)\"}}\n                            onValueChange={(e) => onVATChange(e.value)} \n                            />\n                        <b>:</b>\n                    </td>\n                    <td>\n                        {roundNumber(vatVal)}\n                    </td>\n                    <td><b>Delivery Cost:</b>\n                    </td>\n                    <td class=\"vatInput\">\n                        <InputNumber \n                            readOnly={!editMode}\n                            value={deliveryCost} \n                            placeholder=\"Delivery Cost %\"\n                            max={100} min={0}\n                            className=\"mx-2\"\n                            style={{\"width\": \"fit-content(20em)\"}}\n                            onValueChange={(e) => onDeliveryCostChange(e.value)} \n                            />\n                    </td>\n                    <td><b>Discount:</b>\n                    </td>\n                    <td class=\"vatInput\">\n                        <InputNumber value={addDiscount}\n                            placeholder=\"\"\n                            max={100} min={0}\n                            className=\"mx-2\"\n                            style={{\"width\": \"fit-content(20em)\"}}\n                            onValueChange={(e) => onDiscountChange(e.value)} \n                            />\n                    </td>\n                </tr>\n            </tbody></table>\n            <DataTable value={salesRows} \n                stripedRows showGridlines scrollable scrollHeight=\"25rem\" \n            >\n                <Column body={actionBodyTemplate} frozen headerStyle={{ minWidth: '6.4rem' }}></Column>\n                <Column field=\"product_name\" frozen header=\"Product Name\"  headerStyle={{ minWidth: '10rem' }}></Column>\n                {/* <Column field=\"product_brand_name\"  header=\"Brand Name\"  headerStyle={{ minWidth: '10rem' }}></Column>\n                <Column field=\"product_model_no\"  header=\"Model No\"  headerStyle={{ minWidth: '10rem' }}></Column>\n                <Column field=\"product_part_number\" header=\"Part Number\" headerStyle={{ minWidth: '10rem' }}></Column> */}\n                <Column field=\"qty\" header=\"Quantity\" headerStyle={{ minWidth: '10rem' }}></Column>\n                <Column field=\"return_qty\" header=\"Returned\" headerStyle={{ minWidth: '10rem' }}></Column>\n                <Column field=\"trade_price\" header=\"Trade Price\" headerStyle={{ minWidth: '10rem' }}></Column>\n                <Column field=\"totalPrice\" header={`Total Price`} headerStyle={{ minWidth: '10rem' }}></Column>\n                <Column field=\"discount_profit\" header={`Discount (%)`} headerStyle={{ minWidth: '10rem' }}></Column>\n                <Column field=\"discountedAmount\" header={`Discounted Amount`} headerStyle={{ minWidth: '10rem' }}></Column>\n                <Column field=\"netPrice\" header=\"Net Cost\" headerStyle={{ minWidth: '10rem' }}></Column>\n                <Column field=\"lastTradePrice\" header=\"Last Sale Price\" headerStyle={{ minWidth: '10rem' }}></Column>\n                <Column field=\"remarks\" header=\"Remarks\" headerStyle={{ minWidth: '10rem' }}></Column>\n            </DataTable>\n\n            <Dialog visible={deleteProductDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteProductDialogFooter} onHide={hideDeleteSalesProductDialog}>\n                <div className=\"flex align-items-center justify-content-center\">\n                    <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                    <span>\n                        Are you sure you want to delete?\n                    </span>\n                </div>\n            </Dialog>\n\n        </>\n    );\n}\n\nexport default SalesProductDetail;","import React, { useState, useRef, useEffect } from 'react';\nimport { useForm, Controller, set } from 'react-hook-form';\nimport { roundNumber } from '../../../../utils';\nimport { Button } from 'primereact/button';\nimport { InputText } from 'primereact/inputtext';\nimport { InputNumber } from 'primereact/inputnumber';\nimport { classNames } from 'primereact/utils';\n\nimport SalesProductDetail from './SalesProductDetail';\n\nimport { ProductService } from '../../../../services/ProductService';\n\nexport default function SalesProductForm({\n    salesItems,\n    editMode, returnMode, onReturnItem,\n    selectedItem,\n    addSalesItem, updateSalesItem, removeSalesItem, \n    selectProductFromList, deselectProductFromList,\n    onChangeVat, onChangeDeliveryCost, onChangeAdditionalDiscount,\n    vat, deliveryCost, addDiscount\n}) {\n\n    const {\n        register,\n        control,\n        formState: { errors },\n        reset,\n        setValue,\n        handleSubmit\n    } = useForm({\n        defaultValues: {}\n    });\n\n    const quantityRef = useRef(null);\n\n    const [salesProduct, setSalesProduct] = useState(null);\n    const [productName, setProductName] = useState('');\n    const [min_price, setMinPrice] = useState(0);\n    const [current_stock, setCurrentStock] = useState(0);\n    const [isEdit, setIsEdit] = useState(false);\n\n    const [selectedItemIndex, setSelectedItemIndex] = useState(null);\n\n    const resetForm = () => {\n        reset({ \n            \"product_id\": \"\",\n            \"bar_code\": \"\",\n            \"qty\": 1,\n            \"min_price\": 0.00,\n            \"trade_price\": 0.00,\n            \"remarks\": \"\",\n            \"totalPrice\": 0.00,\n            \"discount_profit\": 0.00,\n            \"discountedAmount\": 0.00,\n            \"netPrice\": 0.00,\n            \"lastTradePrice\": 0.00,\n         });\n        setSalesProduct(null);\n        setMinPrice(0);\n        setProductAndItsStock('', 0);\n    };\n\n    const setProductAndItsStock = (name, stock) => {\n        console.log('setProductAndItsStock', name, stock)\n        setProductName(name);\n        setCurrentStock(stock);\n    };\n\n    useEffect(() => {\n        console.log(\"salesItems-UPDATED::\",salesItems);\n        if(salesItems && salesItems.length > 0){\n            let _total = 0.00;\n            salesItems.forEach((item) => {\n                _total += Number(item.netPrice);\n            });\n            console.log(\"_total::\", _total)\n            // setTotalAmount(_total);\n        }\n    }, [salesItems]);\n\n    useEffect(() => {\n        if (selectedItem && selectedItem.id) {\n            setIsEdit(false);\n            selectProduct(selectedItem);\n        }else{\n            resetForm();\n        }\n    }, [selectedItem]);\n\n    const calculatePrice = (_saleProduct) => {\n        _saleProduct.totalPrice = roundNumber(Number(_saleProduct.trade_price) * Number(_saleProduct.qty));\n        _saleProduct.discountedAmount = roundNumber(_saleProduct.totalPrice * Number(_saleProduct.discount_profit) / 100);\n        _saleProduct.netPrice = roundNumber(_saleProduct.totalPrice -  _saleProduct.discountedAmount);\n\n        setSalesProduct(_saleProduct);\n\n        setValue('totalPrice', _saleProduct.totalPrice);\n        setValue('discountedAmount', _saleProduct.discountedAmount);\n        setValue('netPrice', _saleProduct.netPrice);\n    };\n    \n    const onInputChange = (e, name) => {\n        const val = (e.target && e.target.value) || 0;\n        let _saleProduct = { ...salesProduct };\n        _saleProduct[`${name}`] = val;\n        calculatePrice(_saleProduct);\n\n        setValue(name, val);\n    };\n\n    const selectProduct = async item => {\n        console.log(\"selectProduct::\", item)\n        // get product current stock\n        let _productStock = item.current_stock;\n\n        // set focus to qty\n        let _saleProduct = { ...salesProduct };\n        _saleProduct['product_id'] = item.id;\n        _saleProduct['product_name'] = item.name;\n        _saleProduct['min_price'] = item.min_price;\n        _saleProduct['trade_price'] = item.trade_price;\n        _saleProduct['current_stock'] = _productStock;\n        _saleProduct['qty'] = item.qty || 1;\n        _saleProduct['discount_profit'] = item.discount_profit || 0.00;\n        _saleProduct['remarks'] = item.remarks || '';\n        _saleProduct['lastTradePrice'] = item.lastTradePrice;\n\n        setSalesProduct(_saleProduct);\n\n        reset({ ..._saleProduct });\n        setMinPrice(item.min_price);\n        setProductAndItsStock(item[\"name\"], _productStock);\n\n        quantityRef.current.focus();\n        \n        calculatePrice(_saleProduct);\n    };\n\n    const addItem = item => {\n        resetForm();\n\n        addSalesItem(item);\n    };\n\n    const updateItem = item => {\n        setIsEdit(false);\n        resetForm();\n\n        updateSalesItem(item, selectedItemIndex);\n    };\n\n    const removeItem = (index) => {\n        removeSalesItem(index);\n    };\n\n    const onCancelEditItem = () => {\n        setIsEdit(false);\n        resetForm();\n        deselectProductFromList();\n    };\n\n    ///// Events -- PRODUCT-LIST /////\n    const editSalesProduct = item => {\n        console.log(\"editSalesProduct::\", item)\n        setIsEdit(true);\n        setSelectedItemIndex(item.index);\n\n        selectProduct({\n            \"id\": item.product_id,\n            \"name\": item.product_name,\n            \"min_price\": item.min_price,\n            \"trade_price\": item.trade_price,\n            \"current_stock\": item.current_stock,\n            \"qty\": item.qty,\n            \"discount_profit\": item.discount_profit,\n            \"remarks\": item.remarks,\n            \"lastTradePrice\": item.lastTradePrice,\n        });\n\n        selectProductFromList(item.product_id);\n    };\n    \n    const getFormErrorMessage = (name) => {\n        return errors[name] && <small className=\"p-error\">{errors[name].message}</small>\n    };\n\n    const renderForm = () => {\n        return (\n            <div className=\"card p-fluid formgrid grid\">\n            <div className=\"field col-12 md:col-2\">\n            <Controller\n                name=\"product_id\"\n                control={control}\n                rules={{ required: 'Product is required.' }}\n                    render={({ field, fieldState }) => (\n                    <>\n                        <label htmlFor={field.name} className={classNames({ 'p-error': errors.value })}>Product Name*</label>\n                        <InputText readonly=\"true\" value={productName} placeholder=\"Select Product\" />\n                        <InputText hidden inputId={field.name} value={field.value} inputRef={field.ref}  className={classNames({ 'p-invalid': fieldState.error })}/>\n                        {getFormErrorMessage(field.name)}\n                    </>\n                )}/>\n            </div>\n            <div className=\"field col-12 md:col-2\">\n            <Controller\n                name=\"lastTradePrice\"\n                control={control}\n                render={({ field, fieldState }) => (\n                    <>\n                <label htmlFor={field.name} className={classNames({ 'p-error': errors.value })}>Last Trade Price</label>\n                <InputNumber \n                    inputId={field.name} value={field.value} inputRef={field.ref} \n                    className={classNames({ 'p-invalid': fieldState.error })} \n                    disabled={true} />\n                    </>\n                )}/>\n            </div>            \n            <div className=\"field col-12 md:col-2\">\n            <Controller\n                name=\"min_price\"\n                control={control}\n                render={({ field, fieldState }) => (\n                    <>\n                        <label htmlFor={field.name} className={classNames({ 'p-error': errors.value })}>Min Trade Price</label>\n                        <InputText inputId={field.name} value={field.value} inputRef={field.ref} disabled={true}  className={classNames({ 'p-invalid': fieldState.error })}/>\n                        {getFormErrorMessage(field.name)}\n                    </>\n                )}/>\n            </div>\n\n            {/* <div className=\"field col-12 md:col-2\">\n            <Controller\n                name=\"trade_price\"\n                control={control}\n                rules={{ \n                    required: 'Trade Price is required.', \n                    min: { value: min_price, message: 'Must be greater than or equal to min price.' } \n                }}\n\n                render={({ field, fieldState }) => (\n                    <>\n                <label htmlFor={field.name} className={classNames({ 'p-error': errors.value })}>Trade Price</label>\n                <InputNumber\n                    inputId={field.name} value={field.value} inputRef={field.ref} \n                    className={classNames({ 'p-invalid': fieldState.error })}\n                    disabled={false} />\n                    </>\n                )}/>\n            </div> */}\n            <div className=\"field col-12 md:col-2\">\n            <Controller\n                name=\"trade_price\"\n                control={control}\n                rules={{ \n                    required: 'Trade Price is required.', \n                    min: { value: min_price, message: 'Must be less than or equal to current stock.' } \n                }}\n                render={({ field, fieldState }) => (\n                    <>\n                <label htmlFor={field.name} className={classNames({ 'p-error': errors.value })}>Trade Price</label>\n                <InputNumber ref={quantityRef}\n                    onFocus={(e) => e.target.select()}\n                    inputId={field.name} value={field.value} inputRef={field.ref} className={classNames({ 'p-invalid': fieldState.error })}\n                    onValueChange={(e) => onInputChange(e, 'trade_price')} min={min_price} max={10000000} />\n                    </>\n                )}/>\n            </div>\n            <div className=\"field col-12 md:col-2\">\n                <label>Current Stock</label>\n                <InputText readonly=\"true\" value={current_stock} placeholder=\"Current Stock\" />\n            </div>\n            <div className=\"field col-12 md:col-2\">\n            <Controller\n                name=\"qty\"\n                control={control}\n                rules={{ \n                    required: 'Quantity is required.', \n                    max: { value: current_stock, message: 'Must be less than or equal to current stock.' } \n                }}\n                render={({ field, fieldState }) => (\n                    <>\n                <label htmlFor={field.name} className={classNames({ 'p-error': errors.value })}>Quantity</label>\n                <InputNumber ref={quantityRef}\n                    onFocus={(e) => e.target.select()}\n                    inputId={field.name} value={field.value} inputRef={field.ref} className={classNames({ 'p-invalid': fieldState.error })}\n                    onValueChange={(e) => onInputChange(e, 'qty')} min={1} max={10000000} />\n                    </>\n                )}/>\n            </div>\n            <div className=\"field col-12 md:col-2\">\n            <Controller\n                name=\"totalPrice\"\n                control={control}\n                render={({ field, fieldState }) => (\n                    <>\n                <label htmlFor={field.name} className={classNames({ 'p-error': errors.value })}>Total Price</label>\n                <InputNumber \n                inputId={field.name} value={field.value} inputRef={field.ref} className={classNames({ 'p-invalid': fieldState.error })}\n                disabled={true} />\n                    </>\n                )}/>\n            </div>\n\n            <div className=\"field col-12 md:col-2\">\n            <Controller\n                name=\"discount_profit\"\n                control={control}\n                render={({ field, fieldState }) => (\n                    <>\n                <label htmlFor={field.name} className={classNames({ 'p-error': errors.value })}>Discount %</label>\n                <InputNumber\n                    onFocus={(e) => e.target.select()}\n                    inputId={field.name} value={field.value} inputRef={field.ref} className={classNames({ 'p-invalid': fieldState.error })}\n                    onValueChange={(e) => onInputChange(e, 'discount_profit')} min={0.00} maxFractionDigits={2} />\n                    </>\n                )}/>\n            </div>\n\n            <div className=\"field col-12 md:col-2\">\n            <Controller\n                name=\"netPrice\"\n                control={control}\n                render={({ field, fieldState }) => (\n                    <>\n                <label htmlFor={field.name} className={classNames({ 'p-error': errors.value })}>Net Price</label>\n                <InputNumber \n                inputId={field.name} value={field.value} inputRef={field.ref} className={classNames({ 'p-invalid': fieldState.error })}\n                disabled={true} />\n                    </>\n                )}/>\n            </div>\n\n            <div className=\"field col-12 md:col-4\">\n            <Controller\n                name=\"remarks\"\n                control={control}\n                render={({ field, fieldState }) => (\n                    <>\n                <label htmlFor={field.name} className={classNames({ 'p-error': errors.value })}>Remarks</label>\n                <InputText inputId={field.name} value={field.value} inputRef={field.ref} \n                    onChange={(e) => onInputChange(e, 'remarks')} disabled={true} \n                    className={classNames({ 'p-invalid': fieldState.error })}\n                    />\n                    </>\n                )}/>\n            </div>\n\n            <div className=\" field col-12 md:col-2 align-items-center\">\n                {isEdit && <Button  label=\"Update\" className=\"p-button-primary mr-2\" onClick={handleSubmit((d) => updateItem(d))}></Button>}\n\n                {!isEdit && <Button type=\"submit\" label=\"Add\" className=\"p-button-primary\" onClick={handleSubmit((d) => addItem(d))}/>}                \n                <Button label=\"Cancel\" className=\"p-button-outlined p-button-warning mt-2\" onClick={() => onCancelEditItem()}></Button>\n            </div>\n        </div>\n        );\n    };\n\n    return (\n        <>    \n            {editMode && renderForm()}\n            <SalesProductDetail salesItems={salesItems}\n                    editMode={editMode} \n                    returnMode={returnMode} onReturnItem={(dt) => onReturnItem(dt)}        \n                    onEdit={(dt) => editSalesProduct(dt)}\n                    onDelete={(index) => removeItem(index)}\n                    onChangeVat={(e) => onChangeVat(e)}\n                    onChangeDeliveryCost={(e) => onChangeDeliveryCost(e)}\n                    onChangeAdditionalDiscount={(e) => onChangeAdditionalDiscount(e)}\n                    vat={vat} deliveryCost={deliveryCost} addDiscount={addDiscount}\n                />\n        </>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { useForm, Controller, set } from 'react-hook-form';\nimport { InputNumber } from 'primereact/inputnumber';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Button } from 'primereact/button';\nimport { classNames } from 'primereact/utils';\nimport { Dialog } from 'primereact/dialog';\n\n\nconst CancellationFeeDialog = ({ trigger, onCancelOrder }) => {\n\n    let emptyCancelOrder = {\n        charge: 0,\n        reason: \"\",\n    };\n\n    const [cancellationFeeDialog, setCancellationFeeDialog] = useState(false);\n\n    const {\n        control,\n        formState: { errors },\n        setValue,\n        handleSubmit\n    } = useForm({\n        defaultValues: emptyCancelOrder\n    });\n\n    useEffect(() => {\n        if (trigger) {\n            setValue('charge', 0);\n            setValue('reason', \"\");\n            showDialog();\n        }\n    }, [trigger]);\n\n    const showDialog = () => {\n        setCancellationFeeDialog(true);\n    };\n\n    const getFormErrorMessage = (name) => {\n        return errors[name] && <small className=\"p-error\">{errors[name].message}</small>\n    };\n\n    const hideSalesCancellationFeeDialog = () => {\n        setCancellationFeeDialog(false);\n    };\n\n    const submitCancelOrder = (data) => {\n        console.log(\"submitCancelOrder\", data);\n        let _data = {\n            'charge': data.charge,\n            'reason': data.reason,\n        }\n        onCancelOrder(_data);\n        setCancellationFeeDialog(false);\n    };\n\n    const cancellationFeeDialogFooter = (\n        <>\n            <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideSalesCancellationFeeDialog} />\n            <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" \n                onClick={handleSubmit((d) => submitCancelOrder(d))}\n            />\n        </>\n    );\n\n    return (\n        <Dialog visible={cancellationFeeDialog} style={{ width: '450px' }} header={`CancelOrder`} modal className=\"p-fluid\" footer={cancellationFeeDialogFooter} onHide={hideSalesCancellationFeeDialog}>                    \n            <div className=\"p-fluid formgrid grid\">\n                <div className=\"field col-12 md:col-12\">\n                <Controller\n                    name=\"charge\"\n                    control={control}\n                    rules={{\n                        validate: (value) => value >0 || 'Enter a valid amount.'\n                    }}\n                    render={({ field, fieldState }) => (\n                    <>\n                        <label htmlFor=\"charge\">Cancellation Fee*</label>\n                        <InputNumber inputId={field.name} value={field.value} inputRef={field.ref} \n                            onValueChange={(e) => field.onChange(e)} \n                            className={classNames({ 'p-invalid': fieldState.error })} />\n                        {getFormErrorMessage(field.name)}\n                    </>\n                )}/>\n                </div>                            \n                <div className=\"field col-12 md:col-12\">\n                <Controller\n                    name=\"reason\"\n                    control={control}\n                    rules={{\n                        required: 'Reason is required.'\n                    }}\n                    render={({ field, fieldState }) => (\n                    <>\n                        <label htmlFor=\"reason\">Reason*</label>\n                        <InputTextarea inputId={field.name} value={field.value} inputRef={field.ref}  onChange={(e) => field.onChange(e.target.value)} className={classNames({ 'p-invalid': fieldState.error })}/>\n                        {getFormErrorMessage(field.name)}\n                    </>\n                )}/>\n                </div>\n            </div>\n        </Dialog>\n    );\n}\n                     \nexport default CancellationFeeDialog;","import React, { useRef, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useForm, Controller } from 'react-hook-form';\nimport * as moment from 'moment';\nimport { InputText } from 'primereact/inputtext';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { FilterMatchMode } from 'primereact/api';\nimport { Button } from 'primereact/button';\nimport { Toast } from 'primereact/toast';\nimport { Tag } from 'primereact/tag';\nimport { classNames } from 'primereact/utils';\nimport { Column } from 'primereact/column';\nimport { DataTable } from 'primereact/datatable';\nimport { Dialog } from 'primereact/dialog';\n\nimport ConfirmDialog from '../../components/ConfirmDialog';\nimport SelectConstData from '../../components/SelectConstData';\nimport SelectMasterDataTableList from '../../components/SelectMasterDataTableList';\nimport SelectMasterData from '../../components/SelectMasterData';\n\nimport { CUSTOMER_CATEGORY } from '../../../constants/lookupData';\nimport { PRODUCT_MODEL, CUSTOMER_MODEL, SALES_MODEL } from '../../../constants/models';\n\nimport PaymentDialog from '../../components/PaymentDialog';\nimport ReturnItemDialog from '../../components/ReturnItemDialog';\n\nimport SalesProductForm from './components/SalesProductForm';\n\nimport { ConfigurationService } from '../../../services/ConfigurationService';\nimport { OrderService } from '../../../services/OrderService';\nimport { ProductService } from '../../../services/ProductService';\nimport CancellationFeeDialog from '../../components/CancellationFeeDialog';\n\nconst Form = React.memo(({ sales }) => {\n\n    const toast = useRef(null);\n    let navigate = useNavigate();\n\n    const [trxNo, setTrxNo] = useState(null);\n    const [editMode, setEditMode] = useState(false);\n    const [status, setStatus] = useState('draft');\n    const [trxStatus, setTrxStatus] = useState('draft');\n\n    // STATES FOR SALE ITEMS\n    const [salesItems, setSalesItems] = useState([]);\n    const [salesData, setSalesData] = useState([]);\n    const [vat, setVat] = useState(0.00);\n    const [deliveryCost, setDeliveryCost] = useState(0.00);\n    const [additionalDiscount, setAdditionalDiscount] = useState(0.00);\n\n    // STATES FOR PRODUCT SELECT TABLE\n    const [selectProductTableItem, setSelectProductTableItem] = useState({});\n    const [selectedProductItem, setSelectedProductItem] = useState(null);\n    const [selectedAddedProduct, setSelectedAddedProduct] = useState(null);\n\n    // STATES FOR PRODUCT FORM\n    const [updateSaleItemMode, setUpdateSaleItemMode] = useState(false);\n    const [resetTrigger, setResetTrigger] = useState(0);\n\n    // STATES FOR CUSTOMER FORM\n    const [customerCategory, setCustomerCategory] = useState(\"WALKIN\");\n    const [selectedCustomer, setSelectedCustomer] = useState(null);\n    const [customerLastOrder, setCustomerLastOrder] = useState(null);\n    const [customerBalance, setCustomerBalance] = useState(null);\n\n    // STATES FOR CONFIRM DIALOG\n    const [triggerConfirmDialog, setTriggerConfirmDialog] = useState(false);\n    const [confirmDialogMessage, setConfirmDialogMessage] = useState(null);\n\n    // STATES FOR PAYMENT DIALOG\n    const [paymentDlgTrigger, setPaymentDlgTrigger] = useState(0);\n    const [paymentData, setPaymentData] = useState(null);\n    const [initPayment, setInitPayment] = useState(null);\n\n    // STATES FOR FORM SUBMIT\n    const [selAction, setSelAction] = useState(null);\n    const [selFormData, setSelFormData] = useState(null);\n\n    // STATES FOR FORM RETURN\n    const [returnMode, setReturnMode] = useState(false);\n    const [selectedReturnItem, setSelectedReturnItem] = useState({});\n    const [selectedReturnItems, setSelectedReturnItems] = useState([]);\n    const [returnItems, setReturnItems] = useState([]);\n    const [returnDlgTrigger, setReturnDlgTrigger] = useState(0);\n    const [returnDialog, setReturnDialog] = useState(false);\n\n    // STATES FOR CANCELLATION FEE DIALOG\n    const [cancelData, setCancelData] = useState(null);\n    const [cancellationFeeDlgTrigger, setCancellationFeeDlgTrigger] = useState(0);\n    \n    ///// Default Values -- Start /////\n    let defaultProductFilters = {\n        fields: ['id', 'name', 'code', 'bar_code', 'brand_name', 'model_no', 'part_number', 'current_stock', 'min_price', 'price'],\n        first: 0,\n        rows: 10,\n        page: 1,\n        sortField: null,\n        sortOrder: null,\n        filters: {\n            global: { value: null, matchMode: FilterMatchMode.CONTAINS },\n            name: { value: null, matchMode: FilterMatchMode.CONTAINS },\n            brandName: { value: null, matchMode: FilterMatchMode.CONTAINS },\n            modelNo: { value: null, matchMode: FilterMatchMode.CONTAINS },\n            partNumber: { value: null, matchMode: FilterMatchMode.CONTAINS }\n        }\n    }\n\n    let emptyPayment = {\n        payment_date: moment().format('YYYY-MM-DD'),\n        payment_no: null,\n        payment_type: '',   // dtCash, dtBank, dtMFS\n        payment_method: 'CASH', // CASH, BANK, MFS\n        ref_type: '', // CUSTOMER, SUPPLIER, EMPLOYEE, OTHER\n        ref_id: null,\n        bank_account_id: null,\n        current_balance: 0,\n        amount: 0,\n        reference: '',\n        remarks: '',\n    };\n    ///// Default Values -- END /////\n\n    ///// Initialization -- Start /////\n    const orderService = new OrderService();\n    const productService = new ProductService();\n    const configurationService = new ConfigurationService();\n\n    const {\n        control,\n        formState: { errors },\n        reset,\n        setValue,\n        handleSubmit\n    } = useForm({\n        defaultValues: {}\n    });\n    ///// Initialization -- End /////\n    \n    ///// SIDE-EFFECTS -- Start /////\n    useEffect(() => {\n        resetAll();\n    }, []);\n\n    useEffect(() => {\n        if (sales===null || sales===undefined) {\n            if (trxNo === null) {\n                configurationService.getNextId(SALES_MODEL).then(data => {\n                    setTrxNo(data.nextID);\n                });\n            }\n            setEditMode(true);\n        } else {\n            console.log(\"FETCHED-SALES::\", sales);\n            setTrxNo(sales.voucher_no);\n            setSalesItems(sales.items);\n            setReturnItems(sales.return_items);\n            setEditMode(sales.status === 'draft');\n            setCustomerCategory(sales.customer_category);\n            setCustomerLastOrder(sales.last_trx_id);\n            \n            setReturnMode(sales.status === 'approved' && sales.trx_status === 'completed');\n            setVat(Number(sales.duty_vat));\n            setDeliveryCost(Number(sales.transport));\n            setAdditionalDiscount(Number(sales.additional_discount));\n            // get customer balance\n            getPartyBalance(sales.party_id);\n            reset({\n                \"notes\": sales.notes,\n                \"party_id\": sales.party_id,\n                \"customer_name\": sales.customer_name,\n                \"customer_phone\": sales.customer_phone,\n                \"customer_category\": sales.customer_category,\n            });\n        }\n    }, [sales]);\n    ///// SIDE-EFFECTS -- End /////\n\n    ///// Functions -- Start /////\n    const resetForm = () => {\n        reset({\n            \"customer_category\": \"WALKIN\",\n            \"notes\": \"\",\n            \"party_id\": \"\",\n            \"customer_phone\": \"\",\n            \"customer_name\": \"\"\n        })\n    }\n    const prepareSalesItem = item => {\n        let _item = {\n            product_id: item.product_id,\n            qty: item.qty,\n            discount_profit: item.discount_profit,\n            trade_price: item.trade_price,\n            net_price: item.net_price,\n        }\n        return _item;\n    }\n\n    const prepareSalesData = formData => {\n        let _salesItems = [];\n        for(let item of salesItems) {\n            _salesItems.push(prepareSalesItem(item));\n        }\n        let _payment = paymentData;\n        let _sales = {\n            \"voucher_no\": trxNo,\n            \"customer_category\": formData.customer_category,\n            \"party_id\": formData.party_id,\n            \"customer_name\": formData.customer_name,\n            \"last_trx_id\": customerLastOrder,\n            \"customer_phone\": formData.customer_phone,\n            \"notes\": formData.notes,\n            \"status\": status,\n            \"trx_status\": trxStatus,\n            \"items\": _salesItems,\n            \"payment\": _payment,\n            \"duty_vat\": vat,\n            \"transport\": deliveryCost,\n            \"additional_discount\": additionalDiscount,\n        };\n\n        return _sales;\n    }\n        \n    const submitSalesData = formData => {\n        console.log(\"submitSalesData::\", formData);\n\n        let _sales = prepareSalesData(formData);   \n        \n        console.log(\"_sales::\", _sales);\n        try {\n            if (sales && sales.id) {\n                if(_sales.status === 'approved'){\n                    if(customerCategory === \"CONDITIONAL\" && _sales.trx_status === 'completed') {\n                        orderService.confirmPayment(sales.id, _sales).then(data => {\n                            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Sales Record Committed', life: 3000 });\n                            // navigate(\"/sales\");\n                            navigate(\"/sales/invoice/\" + sales.id);\n                        });                                                \n                    } else {\n                        orderService.commit(SALES_MODEL, sales.id, _sales).then(data => {\n                            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Sales Record Committed', life: 3000 });\n                            // navigate(\"/sales\");\n                            navigate(\"/sales/invoice/\" + sales.id);\n                        });\n                    }\n                } else {\n                    orderService.update(SALES_MODEL, sales.id, _sales).then(data => {\n                        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Sales Record Updated', life: 3000 });\n                        navigate(\"/sales\");\n                    });\n                }\n            } else {\n                orderService.create(SALES_MODEL, _sales).then(data => {\n                    toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Sales Record Created', life: 3000 });\n                    navigate(\"/sales\");\n                });\n            }\n        }\n        catch (err){\n            console.log(err)\n            toast.current.show({ severity: 'error', summary: 'Error', detail: 'Failed to create Sales Record!', life: 3000 });\n            // navigate(\"/sales\");  \n        }\n    }\n\n    const getCalculatedValues = () => {\n        // calculate totals\n        let net = 0.00;\n        let gross = 0.00;\n        let discountedAmount = 0.00;\n        let duty_vat = 0.00;\n        let transport = 0.00;\n        console.log(\"SALES-ITEMS:::\",salesItems)\n        salesItems.forEach(item => {\n            gross += item.trade_price * item.qty;\n            discountedAmount += Number(item.trade_price) * Number(item.qty) * Number(item.discount_profit) / 100;\n        });\n        duty_vat = (gross - discountedAmount) * (vat / 100);\n        net = gross - discountedAmount + Number(duty_vat) + Number(deliveryCost) - Number(additionalDiscount);\n        return {\n            \"gross\": gross,\n            \"discount\": discountedAmount,\n            \"additional_discount\": additionalDiscount,\n            \"transport\": deliveryCost,\n            \"duty_vat\": duty_vat,\n            \"net\": net\n        }\n    }\n\n    const sumbitFormData = () => {\n        // console.log(\"sumbitFormData::\", salesData);\n        submitSalesData(salesData);\n    };\n    ///// Functions -- End /////\n\n    ///// Events -- Start /////\n    ///// Events -- PRODUCT /////\n    const resetProductSelection = () => {\n        setSelectedProductItem(null);\n        setSelectedAddedProduct(null);\n        setSelectProductTableItem(null);\n    };\n\n    const selectProductFromList = product_id => {\n        setSelectProductTableItem({ \"id\": product_id });\n    };\n    const deselectProductFromList = () => {\n        resetProductSelection();\n        // setUpdateSaleItemMode(false);\n    };\n\n    const onSelectProductFromTable = async (e) => {\n        let _productSelected = e.value;\n        // fetch current stock\n        let data = await productService.getById(_productSelected.id);\n        _productSelected['current_stock'] = data.current_stock;\n        _productSelected['price'] = data.price;\n        _productSelected['min_price'] = data.min_price;\n        console.log(\"productSelected::\", _productSelected);\n        console.log(\"selectedCustomer::\", selectedCustomer);\n        if(selectedCustomer!==null || customerCategory===\"WALKIN\") {\n            if(updateSaleItemMode) {\n                toast.current.show({ severity: 'warn', summary: 'Please Cancel the update', detail: 'Product in update', life: 3000 });\n                return;\n            }\n\n            console.log(\"salesItems::\", salesItems);\n            for(let sale of salesItems) {\n                if(sale.product_id === _productSelected.id) {\n                    toast.current.show({ severity: 'warn', summary: 'Already Added', detail: 'Product Already Added', life: 3000 });\n                    resetProductSelection();\n                    return;\n                }\n            };\n\n            let lastTradePrice = 0\n            if(selectedCustomer!==null){\n                // crash here\n                lastTradePrice = await orderService.getOrderProductLastPrice(\"trxSales\", _productSelected.id, selectedCustomer._id);\n            }\n\n            selectProductFromList(_productSelected.id);\n            \n            let _product = { \n                ..._productSelected,\n                \"trade_price\": Number(_productSelected.price),\n                \"current_stock\": Number(_productSelected.current_stock),\n                \"min_price\": Number(_productSelected.min_price),\n                \"lastTradePrice\": Number(lastTradePrice),\n            };\n            console.log(\"setSelectedProductItem::\", _product)\n            setSelectedProductItem(_product);\n        } else {\n            toast.current.show({ severity: 'warn', summary: 'Please Select Customer', detail: 'Select a Customer First', life: 3000 });\n        }\n    }\n    ///// Events -- CUSTOMER /////\n    const onCustomerCategoryChange = value => {\n        resetForm();\n        setSelectedCustomer(null);\n        setCustomerCategory(value);\n        setCustomerLastOrder(null);\n        setCustomerBalance(null);\n        setValue(\"customer_category\", value);\n    };\n\n    const getPartyBalance = (partyId) => {\n        console.log(\"getPartyBalance-PartyID::\", partyId);\n        if(partyId === null || partyId === undefined || partyId === \"\") {\n            return;\n        }\n        orderService.getLedgerBalance(\"trxACReceivable\", partyId).then(data => {\n            console.log(\"balance::\", data);\n            if(data){\n                let dr_amount = Number(data.dr_amount)||0;\n                let cr_amount = Number(data.cr_amount)||0;\n                let balance = dr_amount - cr_amount;\n                setCustomerBalance(balance); \n            }\n        });\n    };\n\n    const onCustomerSelect = item => {\n        console.log(\"onCustomerSelect::\", item);\n        setCustomerLastOrder(item.last_trx_id);\n        setSelectedCustomer(item);\n        getPartyBalance(item._id);\n    };\n\n    ///// Events -- PRODUCT-FORM /////\n    const addSalesItem = item => {\n        let _newSales = [...salesItems];\n        item['index'] = salesItems.length;\n        _newSales.push(item);\n        setSalesItems(_newSales);\n    };\n\n    const updateSalesItem = (item, selectedItemIndex) => {\n        let _newSales = [...salesItems];\n        item['index'] = selectedItemIndex;\n        _newSales[selectedItemIndex] = item;\n        setSalesItems(_newSales);\n    };\n\n    const removeSalesItem = (index) => {\n        let _newSales = [...salesItems];\n        _newSales.splice(index, 1);    \n        // recalculate index\n        _newSales.forEach((item, index) => {\n            item['index'] = index;\n        });\n        setSalesItems(_newSales);\n    };\n\n    ///// Events -- CONFIRM DIALOG /////\n    const onConfirmClick = () => {\n        let action = selAction;\n        if(action === 'cancel'){\n            orderService.cancel(SALES_MODEL, sales.id, cancelData).then(data => {\n                toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Sales Record Cancelled', life: 3000 });\n                // navigate(\"/sales\");\n            });\n        } else {\n            console.log(\"onConfirmClick::\", selAction, selFormData);\n            let formData = selFormData;\n            submitSalesData(formData);\n        }\n    }\n\n    ///// Events -- FORM /////\n    const resetAll = () => {\n        resetForm();\n        resetProductSelection();\n\n        setSalesItems([]);\n        setSelectedCustomer(null);\n        setCustomerCategory(\"WALKIN\");\n\n        // reset trigger for product form and list\n        setResetTrigger(resetTrigger+1);\n    }\n\n    const onSubmit = (action, formData) => {\n        console.log(\"onSubmit::\", action, formData);\n        if(salesItems.length < 1) {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: 'No Product Added', life: 3000 });\n            return;\n        }\n        setSelAction(action);\n        setSelFormData(formData);\n        if(action === 'save'){\n            setStatus('draft');\n            setConfirmDialogMessage(\"Are you sure you want to save this order?\");\n            setTriggerConfirmDialog(triggerConfirmDialog+1);\n        } else if(action === 'cancel'){\n            setStatus('cancelled');\n            setTrxStatus(\"cancelled\");\n            setConfirmDialogMessage(\"Are you sure you want to cancel this order?\");\n            if(customerCategory === \"CONDITIONAL\") {\n            setCancellationFeeDlgTrigger(cancellationFeeDlgTrigger+1);\n            }else{\n                setTriggerConfirmDialog(triggerConfirmDialog+1);\n            }\n        } else if(action === 'approve'){\n            setStatus('approved');\n            if (customerCategory === \"CONDITIONAL\") {\n                setTrxStatus(\"pending\");\n            } else {\n                setTrxStatus(\"completed\");\n            }\n            setConfirmDialogMessage(\"Are you sure you want to approve this order?\");\n            setTriggerConfirmDialog(triggerConfirmDialog+1);\n        } else if(action == 'confirm_payment') {\n            setStatus('approved');\n            setTrxStatus(\"completed\");\n            console.log(\"confirm_payment::\", formData);\n            setConfirmDialogMessage(\"Are you sure you want to complete this order?\");\n            setTriggerConfirmDialog(triggerConfirmDialog+1);\n        }\n    }\n\n    ///// Events -- PAYMENT DIALOG /////\n    const confirmPayment = () => {\n        console.log(\"confirmPayment::\", paymentData);\n        let data = getCalculatedValues()\n        console.log(\"DATA::\", data)\n        setInitPayment({\n            ...emptyPayment,\n            ...{\n                \"ref_type\": \"dtCustomer\",\n                \"ref_id\": sales.party_id,\n                \"current_balance\": data.net,\n                \"amount\": data.net,\n            }\n        });\n        console.log(\"InitPayment::\", initPayment);\n        setPaymentDlgTrigger(paymentDlgTrigger + 1);\n    }\n\n    const showPaymentDialog = formData => {\n        console.log(\"customerCategory::\", customerCategory);\n        setSalesData(formData);\n        if (customerCategory === \"REGISTERED\") {\n            // setShowPaymentDialog(true);\n            // sumbitFormData();\n            onSubmit('approve', formData)\n        } else if (customerCategory === \"WALKIN\") {\n            // console.log(\"salesData:::\", salesData)\n            let data = getCalculatedValues()\n            console.log(\"DATA::\", data)\n            setInitPayment({\n                ...emptyPayment,\n                ...{\n                    \"current_balance\": data.net,\n                    \"amount\": data.net,\n                }\n            });\n            console.log(\"InitPayment::\", initPayment);\n            setPaymentDlgTrigger(paymentDlgTrigger + 1);\n        } else if(customerCategory === \"CONDITIONAL\") {\n            // sumbitFormData();\n            onSubmit('approve', formData);\n        }\n    }\n\n    const onPaymnetCallback = (data) => {\n        console.log(\"onPaymnetCallback\", data);\n        setPaymentData(data);\n        if(customerCategory === \"CONDITIONAL\") {\n            onSubmit('confirm_payment', salesData);\n        } else {\n            onSubmit('approve', salesData);\n        }\n    }\n\n    ///// Events -- RETURN /////\n    const hideReturnDialog = () => {\n        setReturnDialog(false);\n    };\n\n    const submitReturnItems = () => {\n        console.log(\"COFIRM RETURN ITEMS::\", selectedReturnItems);\n        orderService.return(SALES_MODEL, sales.id, selectedReturnItems).then(data => {\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Purchase Record Created', life: 3000 });\n            navigate(\"/sales\");\n        });\n    };\n\n    const returnDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideReturnDialog} />\n            <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={submitReturnItems} />\n        </>\n    );\n\n\n    const confirmReturnItems = () => {\n        if (selectedReturnItems.length === 0) {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: 'Please select at least one item to return', life: 3000 });\n            return;\n        }\n        setReturnDialog(true);\n    };\n\n    const onReturnItem = (selectedRow) => {\n        console.log(\"SELECTED RETURN ITEM::\", selectedRow);\n        setSelectedReturnItem(selectedRow);\n        setReturnDlgTrigger((returnDlgTrigger) => returnDlgTrigger + 1);\n    };\n\n    const onAddReturnItem = (returnItem) => {\n        console.log(\"SELECTED RETURN ITEM::\", returnItem);\n        // add index to return item\n        returnItem['index'] = selectedReturnItems.length;\n        // add timestamp\n        returnItem['created_at'] = new Date();\n        // check if already added\n        for(let i=0; i<selectedReturnItems.length; i++) {\n            if(selectedReturnItems[i].product_id === returnItem.product_id) {\n                toast.current.show({ severity: 'error', summary: 'Error', detail: 'Item already added!', life: 3000 });\n                return;\n            }\n        }\n\n        setSelectedReturnItems([...selectedReturnItems, returnItem]);\n    };\n\n    const onDeleteFromReturnList = (rowData) => {\n        console.log(\"DELETE RETURN ITEM::\", rowData);\n        let newReturnItems = [...selectedReturnItems];\n        newReturnItems.splice(rowData.index, 1);\n        setSelectedReturnItems(newReturnItems);\n    };\n\n    ///// Events -- CANCEL CONDITIONAL ORDER DIALOG /////\n    const cancelOrderWithCharge = charge => {\n        console.log(\"cancelOrderWithCharge::\", charge);\n        setCancelData(charge)\n        setTriggerConfirmDialog(triggerConfirmDialog+1);\n    }\n    ///// Events -- End /////\n\n    ///// View Methods -- Start /////\n    const getFormErrorMessage = name => {\n        return errors[name] && <small className=\"p-error\">{errors[name].message}</small>\n    };\n    ///// View Methods -- END /////\n\n    ///// View Parts -- START /////\n\n    const renderProductSelectionTable = () => {\n        return (\n            <>\n            {editMode && <div className=\"card col-12 md:col-12\">\n                <SelectMasterDataTableList displayField=\"name\"\n                    fieldValue=\"\"\n                    scrollHeight=\"300px\"\n                    defaultFilters={defaultProductFilters}\n                    modelName={PRODUCT_MODEL} caption=\"Select Product\"\n                    selectedItem={selectProductTableItem}\n                    showFields={[]} onSelect={onSelectProductFromTable}\n                    columns={[\n                        {field: 'name', header: 'Product Name', filterPlaceholder: 'Filter by Product Name', width: '50rem'}, \n                        {field: 'brand_name', header: 'Brand Name', filterPlaceholder: 'Filter by Barnd Name', width: '15rem'},\n                        {field: 'model_no', header: 'Model No', filterPlaceholder: 'Filter by Model No', width: '15rem'},\n                        {field: 'part_number', header: 'Part Number', filterPlaceholder: 'Filter by Part Number', width: '15rem'},\n                        {field: 'category_name', header: 'Product Category', filterPlaceholder: 'Filter by Product Category', width: '15rem'}\n                    ]} \n                    />\n                </div>}\n            </>\n        )\n    }\n    const renderFormButtons = () => {\n        let isNew = true;\n        let isDraft = false;\n        let isReturn = false;\n        let isConditionalPending = false;\n        if(sales) {\n            isNew = false;\n            if(sales.status === 'draft') {\n                isDraft = true;\n            } else if(sales.status === 'approved') {\n                if(customerCategory==='CONDITIONAL' && sales.trx_status === 'pending') {\n                    isConditionalPending = true;\n                } else {\n                    isReturn = true;\n                }\n            }\n        } \n        return (\n        <>\n            {(isNew || isDraft) && <div className=\"field col-12 md:col-2\">\n                <Button type=\"submit\" label=\"Clear\" className=\"p-button-outlined p-button-warning\" \n                    onClick={() => resetAll()}\n                />\n            </div>}\n            {(isDraft || isConditionalPending) && <div className=\"field col-12 md:col-3\">\n                <Button type=\"submit\" label=\"Cancel Order\" className=\"p-button-outlined p-button-danger\" \n                    onClick={handleSubmit((d) => onSubmit('cancel', d))}\n                />\n            </div>}\n            {(isNew || isDraft) && <div className=\"field col-12 md:col-3\">\n                <Button type=\"submit\" label=\"Save Order\" className=\"p-button p-button-success\" \n                    onClick={handleSubmit((d) => onSubmit('save', d))}\n                />\n            </div>}\n            {(isNew || isDraft) && <div className=\"field col-12 md:col-4\">\n                <Button type=\"submit\" label=\"Confirm Order\" className=\"p-button p-button-info\" \n                    onClick={handleSubmit((d) => showPaymentDialog(d) )}\n                />\n            </div>}\n            {isConditionalPending && <div className=\"field col-12 md:col-4\">\n                <Button type=\"submit\" label=\"Confirm Payment\" className=\"p-button p-button-info\" \n                    onClick={handleSubmit((d) => confirmPayment(d) )}\n                />\n            </div>}\n            {isReturn && <div className=\"field col-12 md:col-4\">\n                <Button type=\"submit\" label=\"Confirm Return\" className=\"p-button p-button-info\" \n                    onClick={handleSubmit((d) => confirmReturnItems() )}\n                />\n            </div>}\n        </>\n        )\n    }\n    const renderForm = () => {\n        let readOnly = false;\n        if(sales && sales.status !== 'draft') {\n            readOnly = true;\n        }\n        return (\n            <>\n            <div className=\"field col-12 md:col-4\">\n                {readOnly && <>\n                    <label>Customer Category</label>\n                    <InputText readOnly=\"true\" value={sales.customer_category} placeholder=\"empty\" />\n                </>}\n                {!readOnly && <Controller\n                    name=\"customer_category\"\n                    control={control}\n                    render={({ field, fieldState }) => (\n                    <>\n                        <label htmlFor={field.name} className={classNames({ 'p-error': errors.value })}>Customer Category</label>\n                        <SelectConstData field={field} data={CUSTOMER_CATEGORY}\n                            onSelectChange={(value) => onCustomerCategoryChange(value)}\n                            className={classNames({ 'p-invalid': fieldState.error })} /> \n                        {getFormErrorMessage(field.name)}\n                    </>\n                )}/>}\n                </div>\n                <div className=\"field col-12 md:col-8\">\n                <Controller\n                    name=\"notes\"\n                    control={control}\n                    render={({ field, fieldState }) => (\n                        <>\n                    <label htmlFor={field.name} className={classNames({ 'p-error': errors.value })}>Notes</label>\n                    <InputTextarea readOnly={readOnly} inputId={field.name} value={field.value} inputRef={field.ref}  onChange={(e) => field.onChange(e.target.value)} className={classNames({ 'p-invalid': fieldState.error })}/>\n                        </>\n                    )}/>\n                </div>\n\n                {(customerCategory === \"WALKIN\") && (<div className=\"grid col-12 md:col-12\">\n                <div className=\"field col-12 md:col-6\">\n                <Controller\n                    name=\"customer_phone\"\n                    control={control}\n                    rules={{ required: 'Mobile Number is required.' }}\n                    render={({ field, fieldState }) => (\n                        <>\n                    <label htmlFor={field.name} className={classNames({ 'p-error': errors.value })}>Mobile Number</label>\n                    <InputText readOnly={readOnly} inputId={field.name} value={field.value} inputRef={field.ref}  onChange={(e) => field.onChange(e.target.value)} className={classNames({ 'p-invalid': fieldState.error })}/>\n                    {getFormErrorMessage(field.name)}\n                        </>\n                    )}/>\n                </div>\n                <div className=\"field col-12 md:col-6\">\n                <Controller\n                    name=\"customer_name\"\n                    control={control}\n                    render={({ field, fieldState }) => (\n                        <>\n                    <label htmlFor={field.name} className={classNames({ 'p-error': errors.value })}>Name</label>\n                    <InputText readOnly={readOnly} inputId={field.name} value={field.value} inputRef={field.ref}  onChange={(e) => field.onChange(e.target.value)} className={classNames({ 'p-invalid': fieldState.error })}/>\n                        </>\n                    )}/>\n                </div>\n                </div>)}\n                {(customerCategory !== \"WALKIN\") && (<div className=\"grid col-12 md:col-12\">\n                <div className=\"field col-12 md:col-6\">\n                {readOnly && <>\n                    <label>Customer</label>\n                    <InputText readonly=\"true\" value={sales.party_id} placeholder=\"empty\" />\n                </>}\n                {!readOnly && <Controller\n                    name=\"party_id\"\n                    control={control}\n                    rules={{ required: 'Custmer is required.' }}\n                    render={({ field, fieldState }) => (\n                    <>\n                        <label htmlFor={field.name} className={classNames({ 'p-error': errors.value })}>Customer*</label>\n                        <SelectMasterData field={field} modelName={CUSTOMER_MODEL}\n                            displayField=\"name\"\n                            onSelect={onCustomerSelect}\n                            className={classNames({ 'p-invalid': fieldState.error })} \n                            columns={[\n                                {field: 'name', header: 'Customer Name', filterPlaceholder: 'Filter by Customer Name'}\n                            ]} />\n                        {getFormErrorMessage(field.name)}\n                    </>\n                )}/>}\n                </div>\n                <div className=\"field col-12 md:col-3\">\n                    <label>Last Voucher</label>\n                    <InputText value={customerLastOrder} readOnly={true}/>\n                </div>\n                <div className=\"field col-12 md:col-3\">\n                    <label>Balance</label>\n                    <InputText value={customerBalance} readOnly={true}/>\n                </div>\n                </div>)}\n            </>\n        )\n    }\n\n    const renderActionBodyTemplate = (rowData) => {\n        return (\n            <>\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => onDeleteFromReturnList(rowData)} />\n            </>\n        );\n    };\n\n    const renderReturnUI = () => {\n        return (\n            <>\n            {selectedReturnItems && selectedReturnItems.length>0 && <div className=\"col-12\">\n            <h5>New Returns:</h5>\n            <DataTable value={selectedReturnItems} stripedRows showGridlines scrollable scrollHeight=\"25rem\" >\n                <Column body={renderActionBodyTemplate} frozen headerStyle={{ minWidth: '6.4rem' }}></Column>\n                <Column field=\"product_name\" header=\"Product Name\" sortable></Column>\n                <Column field=\"return_qty\" header=\"Returned Qty\" sortable></Column>\n                <Column field=\"reason\" header=\"Reason\" sortable></Column>\n            </DataTable>\n        </div>}\n\n        {returnItems && returnItems.length>0 && <div className=\"col-12\">\n            <h5>Returned Items:</h5>\n            <DataTable value={returnItems} stripedRows showGridlines scrollable scrollHeight=\"25rem\" >\n                <Column field=\"product_name\" header=\"Product Name\" sortable></Column>\n                <Column field=\"return_qty\" header=\"Returned Qty\" sortable></Column>\n                <Column field=\"reason\" header=\"Reason\" sortable></Column>\n                <Column field=\"created_at\" header=\"Returned Date\" sortable></Column>\n            </DataTable>\n        </div>}\n        <ReturnItemDialog \n            trigger={returnDlgTrigger} \n            selectedReturnItem={selectedReturnItem}\n            onAddReturnItem={(dt) => onAddReturnItem(dt)}\n            />   \n            </>\n        );\n    }\n    ///// View Parts -- END /////\n\n    return (\n\n    <div className=\"grid h-screen\">    \n    <Toast ref={toast} />    \n    <div className=\"card col-5\">\n        {!sales && <Button className=\"p-button-outlined\" label=\"Go to Sales List\" \n                        onClick={() => navigate(\"/sales\")}/>}\n        <h5>Sale Detail :: VoucherNo ({trxNo}) \n            {sales && <Tag severity=\"warning\" value={sales.status}></Tag>}</h5>\n        {renderProductSelectionTable()}\n\n        <div className=\"card col-12 md:col-12\">\n            <div className=\"p-fluid formgrid grid\">\n                {renderForm()}\n                {renderFormButtons()}\n            </div>\n        </div>\n    </div>\n    <div className=\"card col-7\" >\n        <SalesProductForm \n            salesItems={salesItems}\n            editMode={editMode} \n            returnMode={returnMode} onReturnItem={(dt) => onReturnItem(dt)}\n            addSalesItem={(item) => addSalesItem(item)}\n            updateSalesItem={(item, index) => updateSalesItem(item, index)}\n            removeSalesItem={(index) => removeSalesItem(index)}\n            deselectProductFromList={() => deselectProductFromList()}\n            selectProductFromList={(id) => selectProductFromList(id)}\n            selectedItem={selectedProductItem}\n            onChangeVat={(value) => setVat(value)}\n            onChangeDeliveryCost={(value) => setDeliveryCost(value)}\n            onChangeAdditionalDiscount={(value) => setAdditionalDiscount(value)}\n            vat={sales===undefined?0:sales.duty_vat} \n            deliveryCost={sales===undefined?0:sales.transport}\n            addDiscount={sales===undefined?0:sales.additional_discount}\n            />\n\n        <ConfirmDialog \n            message={confirmDialogMessage}\n            trigger={triggerConfirmDialog}\n            onConfirm={onConfirmClick}\n            />\n\n        <PaymentDialog \n            trigger={paymentDlgTrigger} \n            initPayment={initPayment}\n            readOnly={customerCategory===\"WALKIN\"}\n            onPaymnetCallback={onPaymnetCallback}\n            />\n\n        <CancellationFeeDialog\n            trigger={cancellationFeeDlgTrigger} \n            onCancelOrder={(data) => cancelOrderWithCharge(data)}\n            />\n\n        {/* RETURN UI */}\n        {renderReturnUI()}\n\n        <Dialog visible={returnDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={returnDialogFooter} onHide={hideReturnDialog}>\n            <div className=\"flex align-items-center justify-content-center\">\n                <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                <span>\n                    Are you sure you want to return these products?\n                </span>\n            </div>\n        </Dialog>\n    </div>     \n    </div>\n    );\n});\n                 \nexport default Form;","import * as React from 'react';\nimport { classNames, ObjectUtils, mergeProps } from 'primereact/utils';\nimport { ComponentBase } from 'primereact/componentbase';\nimport { PrimeReactContext } from 'primereact/api';\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\n\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\n\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nvar BadgeBase = ComponentBase.extend({\n  defaultProps: {\n    __TYPE: 'Badge',\n    value: null,\n    severity: null,\n    size: null,\n    style: null,\n    className: null,\n    children: undefined\n  }\n});\n\nvar Badge = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function (inProps, ref) {\n  var context = React.useContext(PrimeReactContext);\n  var props = BadgeBase.getProps(inProps, context);\n  var _BadgeBase$setMetaDat = BadgeBase.setMetaData({\n      props: props\n    }),\n    ptm = _BadgeBase$setMetaDat.ptm;\n  var elementRef = React.useRef(null);\n  var className = classNames('p-badge p-component', _defineProperty({\n    'p-badge-no-gutter': ObjectUtils.isNotEmpty(props.value) && String(props.value).length === 1,\n    'p-badge-dot': ObjectUtils.isEmpty(props.value),\n    'p-badge-lg': props.size === 'large',\n    'p-badge-xl': props.size === 'xlarge'\n  }, \"p-badge-\".concat(props.severity), props.severity !== null), props.className);\n  React.useImperativeHandle(ref, function () {\n    return {\n      props: props,\n      getElement: function getElement() {\n        return elementRef.current;\n      }\n    };\n  });\n  var rootProps = mergeProps({\n    ref: elementRef,\n    style: props.style,\n    className: className\n  }, BadgeBase.getOtherProps(props), ptm('root'));\n  return /*#__PURE__*/React.createElement(\"span\", rootProps, props.value);\n}));\nBadge.displayName = 'Badge';\n\nexport { Badge };\n","import * as React from 'react';\nimport { KeyFilter } from 'primereact/keyfilter';\nimport { Tooltip } from 'primereact/tooltip';\nimport { ObjectUtils, classNames, mergeProps, DomHandler } from 'primereact/utils';\nimport { ComponentBase } from 'primereact/componentbase';\nimport { PrimeReactContext } from 'primereact/api';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nvar InputTextareaBase = ComponentBase.extend({\n  defaultProps: {\n    __TYPE: 'InputTextarea',\n    autoResize: false,\n    keyfilter: null,\n    onBlur: null,\n    onFocus: null,\n    onBeforeInput: null,\n    onInput: null,\n    onKeyDown: null,\n    onKeyUp: null,\n    onPaste: null,\n    tooltip: null,\n    tooltipOptions: null,\n    validateOnly: false,\n    children: undefined\n  }\n});\n\nvar InputTextarea = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function (inProps, ref) {\n  var context = React.useContext(PrimeReactContext);\n  var props = InputTextareaBase.getProps(inProps, context);\n  var elementRef = React.useRef(ref);\n  var cachedScrollHeight = React.useRef(0);\n  var _InputTextareaBase$se = InputTextareaBase.setMetaData({\n      props: props\n    }),\n    ptm = _InputTextareaBase$se.ptm;\n  var onFocus = function onFocus(event) {\n    if (props.autoResize) {\n      resize();\n    }\n    props.onFocus && props.onFocus(event);\n  };\n  var onBlur = function onBlur(event) {\n    if (props.autoResize) {\n      resize();\n    }\n    props.onBlur && props.onBlur(event);\n  };\n  var onKeyUp = function onKeyUp(event) {\n    if (props.autoResize) {\n      resize();\n    }\n    props.onKeyUp && props.onKeyUp(event);\n  };\n  var onKeyDown = function onKeyDown(event) {\n    props.onKeyDown && props.onKeyDown(event);\n    if (props.keyfilter) {\n      KeyFilter.onKeyPress(event, props.keyfilter, props.validateOnly);\n    }\n  };\n  var onBeforeInput = function onBeforeInput(event) {\n    props.onBeforeInput && props.onBeforeInput(event);\n    if (props.keyfilter) {\n      KeyFilter.onBeforeInput(event, props.keyfilter, props.validateOnly);\n    }\n  };\n  var onPaste = function onPaste(event) {\n    props.onPaste && props.onPaste(event);\n    if (props.keyfilter) {\n      KeyFilter.onPaste(event, props.keyfilter, props.validateOnly);\n    }\n  };\n  var onInput = function onInput(event) {\n    var target = event.target;\n    if (props.autoResize) {\n      resize(ObjectUtils.isEmpty(target.value));\n    }\n    props.onInput && props.onInput(event);\n    ObjectUtils.isNotEmpty(target.value) ? DomHandler.addClass(target, 'p-filled') : DomHandler.removeClass(target, 'p-filled');\n  };\n  var resize = function resize(initial) {\n    var inputEl = elementRef.current;\n    if (inputEl && DomHandler.isVisible(inputEl)) {\n      if (!cachedScrollHeight.current) {\n        cachedScrollHeight.current = inputEl.scrollHeight;\n        inputEl.style.overflow = 'hidden';\n      }\n      if (cachedScrollHeight.current !== inputEl.scrollHeight || initial) {\n        inputEl.style.height = '';\n        inputEl.style.height = inputEl.scrollHeight + 'px';\n        if (parseFloat(inputEl.style.height) >= parseFloat(inputEl.style.maxHeight)) {\n          inputEl.style.overflowY = 'scroll';\n          inputEl.style.height = inputEl.style.maxHeight;\n        } else {\n          inputEl.style.overflow = 'hidden';\n        }\n        cachedScrollHeight.current = inputEl.scrollHeight;\n      }\n    }\n  };\n  React.useEffect(function () {\n    ObjectUtils.combinedRefs(elementRef, ref);\n  }, [elementRef, ref]);\n  React.useEffect(function () {\n    if (props.autoResize) {\n      resize(true);\n    }\n  }, [props.autoResize]);\n  var isFilled = React.useMemo(function () {\n    return ObjectUtils.isNotEmpty(props.value) || ObjectUtils.isNotEmpty(props.defaultValue);\n  }, [props.value, props.defaultValue]);\n  var hasTooltip = ObjectUtils.isNotEmpty(props.tooltip);\n  var className = classNames('p-inputtextarea p-inputtext p-component', {\n    'p-disabled': props.disabled,\n    'p-filled': isFilled,\n    'p-inputtextarea-resizable': props.autoResize\n  }, props.className);\n  var rootProps = mergeProps({\n    ref: elementRef,\n    className: className,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    onKeyUp: onKeyUp,\n    onKeyDown: onKeyDown,\n    onBeforeInput: onBeforeInput,\n    onInput: onInput,\n    onPaste: onPaste\n  }, InputTextareaBase.getOtherProps(props), ptm('root'));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"textarea\", rootProps), hasTooltip && /*#__PURE__*/React.createElement(Tooltip, _extends({\n    target: elementRef,\n    content: props.tooltip\n  }, props.tooltipOptions, {\n    pt: ptm('tooltip')\n  })));\n}));\nInputTextarea.displayName = 'InputTextarea';\n\nexport { InputTextarea };\n","import * as React from 'react';\nimport { classNames, mergeProps, IconUtils } from 'primereact/utils';\nimport { ComponentBase } from 'primereact/componentbase';\nimport { PrimeReactContext } from 'primereact/api';\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\n\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\n\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nvar TagBase = ComponentBase.extend({\n  defaultProps: {\n    __TYPE: 'Tag',\n    value: null,\n    severity: null,\n    rounded: false,\n    icon: null,\n    style: null,\n    className: null,\n    children: undefined\n  }\n});\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar Tag = /*#__PURE__*/React.forwardRef(function (inProps, ref) {\n  var _classNames;\n  var context = React.useContext(PrimeReactContext);\n  var props = TagBase.getProps(inProps, context);\n  var _TagBase$setMetaData = TagBase.setMetaData({\n      props: props\n    }),\n    ptm = _TagBase$setMetaData.ptm;\n  var elementRef = React.useRef(null);\n  var className = classNames('p-tag p-component', (_classNames = {}, _defineProperty(_classNames, \"p-tag-\".concat(props.severity), props.severity !== null), _defineProperty(_classNames, 'p-tag-rounded', props.rounded), _classNames), props.className);\n  var iconProps = mergeProps({\n    className: 'p-tag-icon'\n  }, ptm('icon'));\n  var icon = IconUtils.getJSXIcon(props.icon, _objectSpread({}, iconProps), {\n    props: props\n  });\n  React.useImperativeHandle(ref, function () {\n    return {\n      props: props,\n      getElement: function getElement() {\n        return elementRef.current;\n      }\n    };\n  });\n  var rootProps = mergeProps({\n    ref: elementRef,\n    className: className,\n    style: props.style\n  }, TagBase.getOtherProps(props), ptm('root'));\n  var valueProps = mergeProps({\n    className: 'p-tag-value'\n  }, ptm('value'));\n  return /*#__PURE__*/React.createElement(\"span\", rootProps, icon, /*#__PURE__*/React.createElement(\"span\", valueProps, props.value), /*#__PURE__*/React.createElement(\"span\", null, props.children));\n});\nTag.displayName = 'Tag';\n\nexport { Tag };\n"],"names":["BANK_CASH","id","name","BLOOD_GROUP","CITIES","CURRENCY","COLLECTION_TYPES","CUSTOMER_CATEGORY","ADJUSTMENT_TYPE","DISTRICT","GENDER","EMPLOYMENT_STATUS","MARITAL_STATUS","MEASUREMENT_UNITS","RELIGION","_ref","trigger","initPayment","onPaymnetCallback","_ref$readOnly","readOnly","_useState","useState","_useState2","_slicedToArray","submitted","setSubmitted","_useState3","_useState4","paymentDialog","setPaymentDialog","_useState5","_useState6","_useForm","useForm","defaultValues","control","errors","formState","reset","setValue","handleSubmit","useEffect","_objectSpread","getFormErrorMessage","_jsx","className","children","message","hidePaymentDialog","paymentDialogFooter","_jsxs","_Fragment","Button","label","icon","onClick","disabled","d","data","payment","ref_id","ref_type","payment_type","console","log","onPaymentSubmit","Dialog","visible","style","width","header","modal","footer","onHide","Controller","render","_ref2","field","fieldState","htmlFor","InputNumber","inputId","value","inputRef","ref","onValueChange","e","onChange","classNames","error","_ref3","SelectMasterData","modelName","BANK_ACCOUNT_MODEL","displayField","showFields","onSelect","columns","filterPlaceholder","rules","validate","_ref4","_ref5","InputText","target","_ref6","_ref7","_ref8","_ref9","InputTextarea","SelectConstData","onSelectChange","_ref$placeholder","placeholder","Dropdown","options","optionValue","optionLabel","SelectMasterDataTableList","defaultFilters","selectedItem","fieldValue","dt","useRef","op","loading","setLoading","globalFilterValue","setGlobalFilterValue","totalRecords","setTotalRecords","_useState7","_useState8","lazyParams","setLazyParams","_useState9","_useState10","tmpData","setTmpData","productService","ProductService","initFilters","getAll","then","total","rows","isSelectable","minHeight","_lazyParams","undefined","current","show","onFocus","select","DataTable","dataKey","responsiveLayout","lazy","onSort","event","sortField","sortOrder","onFilter","filterDisplay","filters","isDataSelectable","rowClassName","columnResizeMode","resizableColumns","scrollable","scrollHeight","tableStyle","minWidth","paginator","onPage","first","paginatorTemplate","rowsPerPageOptions","currentPageReportTemplate","globalFilterFields","selectionMode","selection","onSelectionChange","hide","onSelection","emptyMessage","Column","headerStyle","map","col","index","filter","sortable","salesItems","editMode","returnMode","onReturnItem","onEdit","onDelete","onChangeVat","onChangeDeliveryCost","onChangeAdditionalDiscount","vat","deliveryCost","addDiscount","totalPrice","setTotalPrice","totalDiscount","setTotalDiscount","totalDiscountedAmount","setTotalDiscountedAmount","additionalDiscount","setAdditionalDiscount","setTotalQuantity","_useState11","_useState12","vatVal","setVatVal","_useState13","_useState14","delivery","setDelivery","_useState15","_useState16","vatPercentage","setVatPercentage","_useState17","_useState18","netAmount","setNetAmount","_useState19","_useState20","salesRows","setSalesRows","_useState21","_useState22","selectedProductIndex","setSelectedProductIndex","_useState23","_useState24","deleteProductDialog","setDeleteSalesProductDialog","recalculateAllRows","calculateTotals","roundNumber","num","Math","round","Number","EPSILON","allsales","discountedAmount","quantity","forEach","sale","trade_price","qty","discount_profit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","i","netPrice","wrap","_context","prev","next","length","getProductName","product_id","product_name","sent","stop","_x","apply","arguments","hideDeleteSalesProductDialog","deleteProductDialogFooter","_callee2","product","_context2","RProductService","getProductById","abrupt","_x2","Badge","size","severity","class","max","min","newSales","_toConsumableArray","onVATChange","onDeliveryCostChange","discount","onDiscountChange","stripedRows","showGridlines","body","rowData","returnFlg","return_qty","frozen","fontSize","SalesProductForm","addSalesItem","updateSalesItem","removeSalesItem","selectProductFromList","deselectProductFromList","register","quantityRef","salesProduct","setSalesProduct","productName","setProductName","min_price","setMinPrice","current_stock","setCurrentStock","isEdit","setIsEdit","selectedItemIndex","setSelectedItemIndex","resetForm","setProductAndItsStock","stock","_total","item","selectProduct","calculatePrice","_saleProduct","onInputChange","val","concat","_productStock","remarks","lastTradePrice","focus","required","readonly","hidden","maxFractionDigits","_ref10","_ref11","type","SalesProductDetail","removeItem","onCancelOrder","cancellationFeeDialog","setCancellationFeeDialog","charge","reason","showDialog","hideSalesCancellationFeeDialog","cancellationFeeDialogFooter","_data","submitCancelOrder","Form","React","sales","toast","navigate","useNavigate","trxNo","setTrxNo","setEditMode","status","setStatus","trxStatus","setTrxStatus","setSalesItems","salesData","setSalesData","setVat","setDeliveryCost","selectProductTableItem","setSelectProductTableItem","selectedProductItem","setSelectedProductItem","setSelectedAddedProduct","_useState25","_useState26","updateSaleItemMode","_useState27","_useState28","resetTrigger","setResetTrigger","_useState29","_useState30","customerCategory","setCustomerCategory","_useState31","_useState32","selectedCustomer","setSelectedCustomer","_useState33","_useState34","customerLastOrder","setCustomerLastOrder","_useState35","_useState36","customerBalance","setCustomerBalance","_useState37","_useState38","triggerConfirmDialog","setTriggerConfirmDialog","_useState39","_useState40","confirmDialogMessage","setConfirmDialogMessage","_useState41","_useState42","paymentDlgTrigger","setPaymentDlgTrigger","_useState43","_useState44","paymentData","setPaymentData","_useState45","_useState46","setInitPayment","_useState47","_useState48","selAction","setSelAction","_useState49","_useState50","selFormData","setSelFormData","_useState51","_useState52","setReturnMode","_useState53","_useState54","selectedReturnItem","setSelectedReturnItem","_useState55","_useState56","selectedReturnItems","setSelectedReturnItems","_useState57","_useState58","returnItems","setReturnItems","_useState59","_useState60","returnDlgTrigger","setReturnDlgTrigger","_useState61","_useState62","returnDialog","setReturnDialog","_useState63","_useState64","cancelData","setCancelData","_useState65","_useState66","cancellationFeeDlgTrigger","setCancellationFeeDlgTrigger","defaultProductFilters","fields","page","global","matchMode","FilterMatchMode","CONTAINS","brandName","modelNo","partNumber","emptyPayment","payment_date","moment","format","payment_no","payment_method","bank_account_id","current_balance","amount","reference","orderService","OrderService","configurationService","ConfigurationService","resetAll","getNextId","SALES_MODEL","nextID","voucher_no","items","return_items","customer_category","last_trx_id","trx_status","duty_vat","transport","additional_discount","getPartyBalance","party_id","notes","customer_name","customer_phone","prepareSalesItem","net_price","submitSalesData","formData","_sales","_step","_salesItems","_iterator","_createForOfIteratorHelper","s","n","done","push","err","f","_payment","prepareSalesData","confirmPayment","summary","detail","life","commit","update","create","getCalculatedValues","net","gross","resetProductSelection","onSelectProductFromTable","_productSelected","_iterator2","_step2","_product","getById","price","t0","finish","getOrderProductLastPrice","_id","partyId","getLedgerBalance","dr_amount","cr_amount","onCustomerSelect","onSubmit","action","hideReturnDialog","returnDialogFooter","return","renderActionBodyTemplate","newReturnItems","splice","onDeleteFromReturnList","Toast","Tag","PRODUCT_MODEL","caption","onCustomerCategoryChange","CUSTOMER_MODEL","renderForm","isNew","isDraft","isReturn","isConditionalPending","showPaymentDialog","renderFormButtons","selectedRow","_newSales","ConfirmDialog","onConfirm","cancel","PaymentDialog","CancellationFeeDialog","ReturnItemDialog","onAddReturnItem","returnItem","Date","_typeof","obj","Symbol","iterator","constructor","prototype","_toPropertyKey","arg","key","input","hint","prim","toPrimitive","res","call","TypeError","String","_toPrimitive","BadgeBase","ComponentBase","extend","defaultProps","__TYPE","inProps","context","PrimeReactContext","props","getProps","ptm","setMetaData","elementRef","ObjectUtils","isNotEmpty","isEmpty","Object","defineProperty","enumerable","configurable","writable","getElement","rootProps","mergeProps","getOtherProps","displayName","_extends","assign","bind","source","hasOwnProperty","this","InputTextareaBase","autoResize","keyfilter","onBlur","onBeforeInput","onInput","onKeyDown","onKeyUp","onPaste","tooltip","tooltipOptions","validateOnly","cachedScrollHeight","resize","initial","inputEl","DomHandler","isVisible","overflow","height","parseFloat","maxHeight","overflowY","combinedRefs","isFilled","defaultValue","hasTooltip","KeyFilter","onKeyPress","addClass","removeClass","Tooltip","content","pt","_defineProperty","TagBase","rounded","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_classNames","iconProps","IconUtils","getJSXIcon","getOwnPropertyDescriptors","defineProperties","valueProps"],"sourceRoot":""}